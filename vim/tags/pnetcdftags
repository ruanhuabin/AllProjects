!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ABS	test/nc_test/tests.h	79;"	d
ATT_LEN	test/nc_test/tests.h	190;"	d
ATT_NAME	test/nc_test/tests.h	188;"	d
ATT_TYPE	test/nc_test/tests.h	189;"	d
BAD_ATTNUM	test/nc_test/tests.h	124;"	d
BAD_DEFAULT_FORMAT	test/nc_test/tests.h	128;"	d
BAD_DIMID	test/nc_test/tests.h	122;"	d
BAD_FILLMODE	test/nc_test/tests.h	126;"	d
BAD_ID	test/nc_test/tests.h	121;"	d
BAD_NAME	test/nc_test/tests.h	127;"	d
BAD_TYPE	test/nc_test/tests.h	125;"	d
BAD_VARID	test/nc_test/tests.h	123;"	d
BEGIN	src/utils/ncgen/ncgenyy.c	144;"	d	file:
BLOCKLEN	test/testcases/vectors.c	17;"	d	file:
BYTE_CONST	src/utils/ncgen/ncgentab.c	/^     BYTE_CONST = 267,$/;"	e	enum:yytokentype	file:
BYTE_CONST	src/utils/ncgen/ncgentab.c	205;"	d	file:
BYTE_CONST	src/utils/ncgen/ncgentab.h	/^     BYTE_CONST = 267,$/;"	e	enum:yytokentype
BYTE_CONST	src/utils/ncgen/ncgentab.h	74;"	d
BYTE_K	src/utils/ncgen/ncgentab.c	/^     BYTE_K = 259,$/;"	e	enum:yytokentype	file:
BYTE_K	src/utils/ncgen/ncgentab.c	197;"	d	file:
BYTE_K	src/utils/ncgen/ncgentab.h	/^     BYTE_K = 259,$/;"	e	enum:yytokentype
BYTE_K	src/utils/ncgen/ncgentab.h	66;"	d
CALLING_MPI_READ	src/lib/getput_vars.c	590;"	d	file:
CALLING_MPI_WRITE	src/lib/getput_vars.c	579;"	d	file:
CHAR_CONST	src/utils/ncgen/ncgentab.c	/^     CHAR_CONST = 268,$/;"	e	enum:yytokentype	file:
CHAR_CONST	src/utils/ncgen/ncgentab.c	206;"	d	file:
CHAR_CONST	src/utils/ncgen/ncgentab.h	/^     CHAR_CONST = 268,$/;"	e	enum:yytokentype
CHAR_CONST	src/utils/ncgen/ncgentab.h	75;"	d
CHAR_K	src/utils/ncgen/ncgentab.c	/^     CHAR_K = 260,$/;"	e	enum:yytokentype	file:
CHAR_K	src/utils/ncgen/ncgentab.c	198;"	d	file:
CHAR_K	src/utils/ncgen/ncgentab.h	/^     CHAR_K = 260,$/;"	e	enum:yytokentype
CHAR_K	src/utils/ncgen/ncgentab.h	67;"	d
CHECK_COLLECTIVE_FH	src/lib/macro.h	249;"	d
CHECK_DATATYPE	src/lib/macro.h	101;"	d
CHECK_ECHAR	src/lib/macro.h	116;"	d
CHECK_ERROR	test/testcases/collective_error.c	12;"	d	file:
CHECK_FATAL_ERROR_COLLECTIVELY	src/lib/getput_varm.c	734;"	d	file:
CHECK_FATAL_ERROR_COLLECTIVELY	src/lib/getput_vars.c	718;"	d	file:
CHECK_GLOBAL_ATT_DIFF	src/utils/ncdiff/ncmpidiff.c	23;"	d	file:
CHECK_GLOBAL_ATT_DIFF	test/mcoll_perf/mcoll_perf.c	54;"	d	file:
CHECK_INDEP_FH	src/lib/macro.h	234;"	d
CHECK_MPI_ERROR	src/lib/macro.h	33;"	d
CHECK_NCID	src/lib/macro.h	46;"	d
CHECK_NELEMS	src/lib/macro.h	130;"	d
CHECK_VARID	src/lib/macro.h	59;"	d
CHECK_VAR_ATT_DIFF	src/utils/ncdiff/ncmpidiff.c	40;"	d	file:
CHECK_VAR_ATT_DIFF	test/mcoll_perf/mcoll_perf.c	71;"	d	file:
CHECK_VAR_DIFF	src/utils/ncdiff/ncmpidiff.c	57;"	d	file:
CHECK_VAR_DIFF	test/mcoll_perf/mcoll_perf.c	89;"	d	file:
CHECK_WRITE_PERMISSION	src/lib/macro.h	91;"	d
COLL_IO	src/lib/macro.h	13;"	d
CRAYFLOAT	test/nc_test/tests.h	19;"	d
CRAYFLOAT	test/nc_test/tests.h	21;"	d
C_FMT_NAME	src/utils/ncdump/dumplib.c	101;"	d	file:
C_MAX_STMNT	src/utils/ncgen/genlib.h	16;"	d
DATA	src/utils/ncgen/ncgentab.c	/^     DATA = 276,$/;"	e	enum:yytokentype	file:
DATA	src/utils/ncgen/ncgentab.c	214;"	d	file:
DATA	src/utils/ncgen/ncgentab.h	/^     DATA = 276,$/;"	e	enum:yytokentype
DATA	src/utils/ncgen/ncgentab.h	83;"	d
DATATYPE_GET_CONVERT	src/lib/macro.h	167;"	d
DATATYPE_PUT_CONVERT	src/lib/macro.h	189;"	d
DBL_DIGITS	src/utils/ncdump/dumplib.h	22;"	d
DEGREES_EAST	test/C/pres_temp_4D_rd.c	43;"	d	file:
DEGREES_EAST	test/C/pres_temp_4D_wr.c	44;"	d	file:
DEGREES_EAST	test/C/sfc_pres_temp_wr.c	38;"	d	file:
DEGREES_NORTH	test/C/pres_temp_4D_rd.c	44;"	d	file:
DEGREES_NORTH	test/C/pres_temp_4D_wr.c	45;"	d	file:
DEGREES_NORTH	test/C/sfc_pres_temp_wr.c	39;"	d	file:
DIMENSIONS	src/utils/ncgen/ncgentab.c	/^     DIMENSIONS = 273,$/;"	e	enum:yytokentype	file:
DIMENSIONS	src/utils/ncgen/ncgentab.c	211;"	d	file:
DIMENSIONS	src/utils/ncgen/ncgentab.h	/^     DIMENSIONS = 273,$/;"	e	enum:yytokentype
DIMENSIONS	src/utils/ncgen/ncgentab.h	80;"	d
DOUBLE_CONST	src/utils/ncgen/ncgentab.c	/^     DOUBLE_CONST = 272,$/;"	e	enum:yytokentype	file:
DOUBLE_CONST	src/utils/ncgen/ncgentab.c	210;"	d	file:
DOUBLE_CONST	src/utils/ncgen/ncgentab.h	/^     DOUBLE_CONST = 272,$/;"	e	enum:yytokentype
DOUBLE_CONST	src/utils/ncgen/ncgentab.h	79;"	d
DOUBLE_K	src/utils/ncgen/ncgentab.c	/^     DOUBLE_K = 264,$/;"	e	enum:yytokentype	file:
DOUBLE_K	src/utils/ncgen/ncgentab.c	202;"	d	file:
DOUBLE_K	src/utils/ncgen/ncgentab.h	/^     DOUBLE_K = 264,$/;"	e	enum:yytokentype
DOUBLE_K	src/utils/ncgen/ncgentab.h	71;"	d
D_RNDUP	src/lib/nc.c	363;"	d	file:
ECHO	src/utils/ncgen/ncgenyy.c	788;"	d	file:
ENABLE_CDF5	src/lib/ncconfig.h	13;"	d
ENOERR	src/lib/mpincio.c	16;"	d	file:
EOB_ACT_CONTINUE_SCAN	src/utils/ncgen/ncgenyy.c	187;"	d	file:
EOB_ACT_END_OF_FILE	src/utils/ncgen/ncgenyy.c	188;"	d	file:
EOB_ACT_LAST_MATCH	src/utils/ncgen/ncgenyy.c	189;"	d	file:
ERR	test/C/pres_temp_4D_rd.c	62;"	d	file:
ERR	test/C/pres_temp_4D_wr.c	63;"	d	file:
ERR	test/C/sfc_pres_temp_rd.c	52;"	d	file:
ERR	test/C/sfc_pres_temp_wr.c	49;"	d	file:
ERR	test/C/simple_xy_rd.c	31;"	d	file:
ERR	test/C/simple_xy_wr.c	33;"	d	file:
ERRCODE	test/C/simple_xy_rd.c	30;"	d	file:
ERRCODE	test/C/simple_xy_wr.c	32;"	d	file:
EXIT_FAILURE	src/utils/ncdump/dumplib.h	14;"	d
EXIT_FAILURE	src/utils/ncdump/dumplib.h	17;"	d
EXIT_SUCCESS	src/utils/ncdump/dumplib.h	13;"	d
EXIT_SUCCESS	src/utils/ncdump/dumplib.h	16;"	d
EXTERNL	src/lib/pnetcdf.h	235;"	d
F77_NAME_LOWER_USCORE	src/lib/ncconfig.h	25;"	d
FILE_DELIMITER	src/utils/ncdump/ncdump.c	75;"	d	file:
FILE_DELIMITER	src/utils/ncdump/ncdump.c	78;"	d	file:
FILE_DELIMITER	src/utils/ncdump/ncdump.c	81;"	d	file:
FILE_NAME	test/C/pres_temp_4D_rd.c	25;"	d	file:
FILE_NAME	test/C/pres_temp_4D_wr.c	26;"	d	file:
FILE_NAME	test/C/sfc_pres_temp_rd.c	24;"	d	file:
FILE_NAME	test/C/sfc_pres_temp_wr.c	24;"	d	file:
FILE_NAME	test/C/simple_xy_rd.c	22;"	d	file:
FILE_NAME	test/C/simple_xy_wr.c	23;"	d	file:
FILE_NAME	test/largefile/large_files.c	22;"	d	file:
FILLVALUE	src/utils/ncgen/ncgentab.c	/^     FILLVALUE = 277$/;"	e	enum:yytokentype	file:
FILLVALUE	src/utils/ncgen/ncgentab.c	215;"	d	file:
FILLVALUE	src/utils/ncgen/ncgentab.h	/^     FILLVALUE = 277$/;"	e	enum:yytokentype
FILLVALUE	src/utils/ncgen/ncgentab.h	84;"	d
FILL_STRING	src/utils/ncdump/vardata.h	11;"	d
FILL_STRING	src/utils/ncgen/ncgenyy.c	678;"	d	file:
FLEXINT_H	src/utils/ncgen/ncgenyy.c	48;"	d	file:
FLEX_BETA	src/utils/ncgen/ncgenyy.c	32;"	d	file:
FLEX_SCANNER	src/utils/ncgen/ncgenyy.c	27;"	d	file:
FLOAT_CONST	src/utils/ncgen/ncgentab.c	/^     FLOAT_CONST = 271,$/;"	e	enum:yytokentype	file:
FLOAT_CONST	src/utils/ncgen/ncgentab.c	209;"	d	file:
FLOAT_CONST	src/utils/ncgen/ncgentab.h	/^     FLOAT_CONST = 271,$/;"	e	enum:yytokentype
FLOAT_CONST	src/utils/ncgen/ncgentab.h	78;"	d
FLOAT_K	src/utils/ncgen/ncgentab.c	/^     FLOAT_K = 263,$/;"	e	enum:yytokentype	file:
FLOAT_K	src/utils/ncgen/ncgentab.c	201;"	d	file:
FLOAT_K	src/utils/ncgen/ncgentab.h	/^     FLOAT_K = 263,$/;"	e	enum:yytokentype
FLOAT_K	src/utils/ncgen/ncgentab.h	70;"	d
FLT_DIGITS	src/utils/ncdump/dumplib.h	21;"	d
FLT_MAX	src/lib/ncx.c	44;"	d	file:
FORTRAN_API	src/libf/mpinetcdf_impl.h	40;"	d
FORTRAN_API	src/libf/mpinetcdf_impl.h	42;"	d
FORTRAN_API	src/libf/mpinetcdf_impl.h	45;"	d
FORT_CALL	src/libf/mpinetcdf_impl.h	16;"	d
FORT_CALL	src/libf/mpinetcdf_impl.h	18;"	d
FORT_CALL	src/libf/mpinetcdf_impl.h	20;"	d
FORT_END_LEN	src/libf/mpinetcdf_impl.h	28;"	d
FORT_END_LEN	src/libf/mpinetcdf_impl.h	33;"	d
FORT_END_LEN_DECL	src/libf/mpinetcdf_impl.h	26;"	d
FORT_END_LEN_DECL	src/libf/mpinetcdf_impl.h	31;"	d
FORT_MAX_LINES	src/utils/ncgen/genlib.h	14;"	d
FORT_MAX_STMNT	src/utils/ncgen/genlib.h	15;"	d
FORT_MIXED_LEN	src/libf/mpinetcdf_impl.h	27;"	d
FORT_MIXED_LEN	src/libf/mpinetcdf_impl.h	32;"	d
FORT_MIXED_LEN_DECL	src/libf/mpinetcdf_impl.h	25;"	d
FORT_MIXED_LEN_DECL	src/libf/mpinetcdf_impl.h	30;"	d
FREE_REQUEST	src/lib/nonblocking.c	44;"	d	file:
FUNC_ATTRIBUTES	src/libf/mpinetcdf_impl.h	51;"	d
FUNC_ATTRIBUTES	src/libf/mpinetcdf_impl.h	53;"	d
FUZZ	test/nc_test/util.c	311;"	d	file:
GET_FULL_DIMENSIONS	src/lib/macro.h	211;"	d
GET_NUM_ELEMENTS	src/lib/macro.h	84;"	d
GET_ONE_COUNT	src/lib/macro.h	227;"	d
GET_TOTAL_NUM_ELEMENTS	src/lib/macro.h	72;"	d
GET_VAR1_COMMON	src/lib/getput_var1.c	181;"	d	file:
GET_VARA_ALL_COMMON	src/lib/getput_vara.c	438;"	d	file:
GET_VARA_COMMON	src/lib/getput_vara.c	180;"	d	file:
GET_VARM_ALL_COMMON	src/lib/getput_varm.c	515;"	d	file:
GET_VARM_COMMON	src/lib/getput_varm.c	223;"	d	file:
GET_VARS_ALL_COMMON	src/lib/getput_vars.c	467;"	d	file:
GET_VARS_COMMON	src/lib/getput_vars.c	191;"	d	file:
GET_VAR_ALL_COMMON	src/lib/getput_var.c	419;"	d	file:
GET_VAR_COMMON	src/lib/getput_var.c	175;"	d	file:
HANDLE_DIFF	src/utils/ncdiff/ncmpidiff.c	13;"	d	file:
HANDLE_DIFF	test/mcoll_perf/mcoll_perf.c	44;"	d	file:
HANDLE_ERROR	src/utils/ncdiff/ncmpidiff.c	7;"	d	file:
HANDLE_ERROR	test/mcoll_perf/mcoll_perf.c	38;"	d	file:
HAVE_ACCESS_FUNCTION	src/lib/mpincio.c	91;"	d	file:
HAVE_ALLOCA	src/lib/ncconfig.h	31;"	d
HAVE_ALLOCA_H	src/lib/ncconfig.h	35;"	d
HAVE_INTTYPES_H	src/lib/ncconfig.h	38;"	d
HAVE_MEMORY_H	src/lib/ncconfig.h	41;"	d
HAVE_MPI_CHARACTER	src/lib/ncconfig.h	44;"	d
HAVE_MPI_COMBINER_DARRAY	src/lib/ncconfig.h	47;"	d
HAVE_MPI_COMBINER_DUP	src/lib/ncconfig.h	50;"	d
HAVE_MPI_COMBINER_F90_COMPLEX	src/lib/ncconfig.h	53;"	d
HAVE_MPI_COMBINER_F90_INTEGER	src/lib/ncconfig.h	56;"	d
HAVE_MPI_COMBINER_F90_REAL	src/lib/ncconfig.h	59;"	d
HAVE_MPI_COMBINER_HINDEXED_INTEGER	src/lib/ncconfig.h	62;"	d
HAVE_MPI_COMBINER_HVECTOR_INTEGER	src/lib/ncconfig.h	65;"	d
HAVE_MPI_COMBINER_INDEXED_BLOCK	src/lib/ncconfig.h	68;"	d
HAVE_MPI_COMBINER_RESIZED	src/lib/ncconfig.h	71;"	d
HAVE_MPI_COMBINER_STRUCT_INTEGER	src/lib/ncconfig.h	74;"	d
HAVE_MPI_COMBINER_SUBARRAY	src/lib/ncconfig.h	77;"	d
HAVE_MPI_COMPLEX16	src/lib/ncconfig.h	80;"	d
HAVE_MPI_COMPLEX32	src/lib/ncconfig.h	83;"	d
HAVE_MPI_COMPLEX8	src/lib/ncconfig.h	86;"	d
HAVE_MPI_DOUBLE_PRECISION	src/lib/ncconfig.h	89;"	d
HAVE_MPI_INFO_DUP	src/lib/ncconfig.h	92;"	d
HAVE_MPI_INFO_FREE	src/lib/ncconfig.h	95;"	d
HAVE_MPI_INTEGER	src/lib/ncconfig.h	98;"	d
HAVE_MPI_INTEGER1	src/lib/ncconfig.h	101;"	d
HAVE_MPI_INTEGER16	src/lib/ncconfig.h	104;"	d
HAVE_MPI_INTEGER2	src/lib/ncconfig.h	107;"	d
HAVE_MPI_INTEGER4	src/lib/ncconfig.h	110;"	d
HAVE_MPI_INTEGER8	src/lib/ncconfig.h	113;"	d
HAVE_MPI_LB	src/lib/ncconfig.h	116;"	d
HAVE_MPI_REAL	src/lib/ncconfig.h	119;"	d
HAVE_MPI_REAL16	src/lib/ncconfig.h	122;"	d
HAVE_MPI_REAL4	src/lib/ncconfig.h	125;"	d
HAVE_MPI_REAL8	src/lib/ncconfig.h	128;"	d
HAVE_MPI_REQUEST_GET_STATUS	src/lib/ncconfig.h	131;"	d
HAVE_MPI_RESIZED_SUPPORT	src/lib/ncconfig.h	134;"	d
HAVE_MPI_TYPE_DUP	src/lib/ncconfig.h	137;"	d
HAVE_MPI_UB	src/lib/ncconfig.h	140;"	d
HAVE_PTRDIFF_T	src/lib/ncconfig.h	143;"	d
HAVE_SSIZE_T	src/lib/ncconfig.h	146;"	d
HAVE_STDINT_H	src/lib/ncconfig.h	149;"	d
HAVE_STDLIB_H	src/lib/ncconfig.h	152;"	d
HAVE_STRINGS_H	src/lib/ncconfig.h	155;"	d
HAVE_STRING_H	src/lib/ncconfig.h	158;"	d
HAVE_STRUCT_STAT_ST_BLKSIZE	src/lib/ncconfig.h	161;"	d
HAVE_ST_BLKSIZE	src/lib/ncconfig.h	165;"	d
HAVE_SYS_STAT_H	src/lib/ncconfig.h	168;"	d
HAVE_SYS_TYPES_H	src/lib/ncconfig.h	171;"	d
HAVE_UNISTD_H	src/lib/ncconfig.h	177;"	d
IDENT	src/utils/ncgen/ncgentab.c	/^     IDENT = 265,$/;"	e	enum:yytokentype	file:
IDENT	src/utils/ncgen/ncgentab.c	203;"	d	file:
IDENT	src/utils/ncgen/ncgentab.h	/^     IDENT = 265,$/;"	e	enum:yytokentype
IDENT	src/utils/ncgen/ncgentab.h	72;"	d
IDalloc	src/lib/mpincio.c	/^static unsigned char IDalloc[MAX_NC_ID];$/;"	v	file:
IEEE_DBL_BIAS	src/lib/ncx.c	1114;"	d	file:
IEEE_SNG_BIAS	src/lib/ncx.c	796;"	d	file:
IF	test/nc_test/error.h	35;"	d
IGET_VAR1_COMMON	src/lib/i_getput_var1.c	198;"	d	file:
IGET_VARA_COMMON	src/lib/i_getput_vara.c	202;"	d	file:
IGET_VARA_COMMON	src/lib/i_getput_vars.c	212;"	d	file:
IGET_VARM_COMMON	src/lib/i_getput_varm.c	230;"	d	file:
IGET_VAR_COMMON	src/lib/i_getput_var.c	189;"	d	file:
INDEP_IO	src/lib/macro.h	12;"	d
INITIAL	src/utils/ncgen/ncgenyy.c	696;"	d	file:
INT16_MAX	src/utils/ncgen/ncgenyy.c	90;"	d	file:
INT16_MIN	src/utils/ncgen/ncgenyy.c	81;"	d	file:
INT32_MAX	src/utils/ncgen/ncgenyy.c	93;"	d	file:
INT32_MIN	src/utils/ncgen/ncgenyy.c	84;"	d	file:
INT8_MAX	src/utils/ncgen/ncgenyy.c	87;"	d	file:
INT8_MIN	src/utils/ncgen/ncgenyy.c	78;"	d	file:
INT_CONST	src/utils/ncgen/ncgentab.c	/^     INT_CONST = 270,$/;"	e	enum:yytokentype	file:
INT_CONST	src/utils/ncgen/ncgentab.c	208;"	d	file:
INT_CONST	src/utils/ncgen/ncgentab.h	/^     INT_CONST = 270,$/;"	e	enum:yytokentype
INT_CONST	src/utils/ncgen/ncgentab.h	77;"	d
INT_K	src/utils/ncgen/ncgentab.c	/^     INT_K = 262,$/;"	e	enum:yytokentype	file:
INT_K	src/utils/ncgen/ncgentab.c	200;"	d	file:
INT_K	src/utils/ncgen/ncgentab.h	/^     INT_K = 262,$/;"	e	enum:yytokentype
INT_K	src/utils/ncgen/ncgentab.h	69;"	d
INT_MAX	src/lib/ncx.c	64;"	d	file:
INT_MAX	src/lib/ncx.c	65;"	d	file:
INT_MAX	test/nc_test/tests.h	53;"	d
INT_MAX	test/nc_test/tests.h	54;"	d
INT_MIN	src/lib/ncx.c	66;"	d	file:
INT_MIN	src/lib/ncx.c	67;"	d	file:
INT_MIN	test/nc_test/tests.h	55;"	d
INT_MIN	test/nc_test/tests.h	56;"	d
IPUT_VAR1_COMMON	src/lib/i_getput_var1.c	59;"	d	file:
IPUT_VARA_COMMON	src/lib/i_getput_vara.c	57;"	d	file:
IPUT_VARA_COMMON	src/lib/i_getput_vars.c	58;"	d	file:
IPUT_VARM_COMMON	src/lib/i_getput_varm.c	67;"	d	file:
IPUT_VAR_COMMON	src/lib/i_getput_var.c	57;"	d	file:
IS_RECVAR	src/lib/nc.h	364;"	d
IX_INT_MAX	src/lib/ncx.c	487;"	d	file:
IX_INT_MAX	src/lib/ncx.c	491;"	d	file:
IX_INT_MAX	src/lib/ncx.c	495;"	d	file:
IX_SHORT_MAX	src/lib/ncx.c	257;"	d	file:
IX_SHORT_MAX	src/lib/ncx.c	261;"	d	file:
IX_SHORT_MAX	src/lib/ncx.c	265;"	d	file:
I_LEN	test/largefile/large_files.c	48;"	d	file:
J_LEN	test/largefile/large_files.c	49;"	d	file:
K_LEN	test/largefile/large_files.c	50;"	d	file:
LANG_C	src/utils/ncdump/ncdump.h	/^enum {LANG_C, LANG_F} Nclang; $/;"	e	enum:__anon4
LANG_F	src/utils/ncdump/ncdump.h	/^enum {LANG_C, LANG_F} Nclang; $/;"	e	enum:__anon4
LAT_NAME	test/C/pres_temp_4D_rd.c	32;"	d	file:
LAT_NAME	test/C/pres_temp_4D_wr.c	33;"	d	file:
LAT_NAME	test/C/sfc_pres_temp_rd.c	31;"	d	file:
LAT_NAME	test/C/sfc_pres_temp_wr.c	31;"	d	file:
LAT_UNITS	test/C/pres_temp_4D_rd.c	56;"	d	file:
LAT_UNITS	test/C/pres_temp_4D_wr.c	57;"	d	file:
LAT_UNITS	test/C/sfc_pres_temp_rd.c	46;"	d	file:
LEN_OF	test/nc_test/tests.h	130;"	d
LINEPIND	src/utils/ncdump/dumplib.c	49;"	d	file:
LONG_MAX	src/lib/ncx.c	68;"	d	file:
LONG_MAX	src/lib/ncx.c	69;"	d	file:
LONG_MAX	src/lib/ncx.c	73;"	d	file:
LONG_MAX	src/lib/ncx.c	74;"	d	file:
LONG_MAX	test/nc_test/tests.h	57;"	d
LONG_MAX	test/nc_test/tests.h	58;"	d
LONG_MAX	test/nc_test/tests.h	62;"	d
LONG_MAX	test/nc_test/tests.h	63;"	d
LONG_MIN	src/lib/ncx.c	70;"	d	file:
LONG_MIN	src/lib/ncx.c	71;"	d	file:
LONG_MIN	src/lib/ncx.c	75;"	d	file:
LONG_MIN	src/lib/ncx.c	76;"	d	file:
LONG_MIN	test/nc_test/tests.h	59;"	d
LONG_MIN	test/nc_test/tests.h	60;"	d
LONG_MIN	test/nc_test/tests.h	64;"	d
LONG_MIN	test/nc_test/tests.h	65;"	d
LON_NAME	test/C/pres_temp_4D_rd.c	33;"	d	file:
LON_NAME	test/C/pres_temp_4D_wr.c	34;"	d	file:
LON_NAME	test/C/sfc_pres_temp_rd.c	32;"	d	file:
LON_NAME	test/C/sfc_pres_temp_wr.c	32;"	d	file:
LON_UNITS	test/C/pres_temp_4D_rd.c	57;"	d	file:
LON_UNITS	test/C/pres_temp_4D_wr.c	58;"	d	file:
LON_UNITS	test/C/sfc_pres_temp_rd.c	47;"	d	file:
LVL_NAME	test/C/pres_temp_4D_rd.c	36;"	d	file:
LVL_NAME	test/C/pres_temp_4D_wr.c	37;"	d	file:
MAGIC_NUM_LEN	src/lib/nc.c	25;"	d	file:
MAGIC_NUM_LEN	test/nc_test/test_write.c	1941;"	d	file:
MASK	src/lib/ncx.c	1115;"	d	file:
MAX	src/lib/macro.h	16;"	d
MAX	test/nc_test/tests.h	71;"	d
MAXTRST	src/utils/ncgen/ncgen.h	10;"	d
MAX_ATT_LEN	test/C/pres_temp_4D_rd.c	58;"	d	file:
MAX_ATT_LEN	test/C/pres_temp_4D_wr.c	59;"	d	file:
MAX_ATT_LEN	test/C/sfc_pres_temp_rd.c	48;"	d	file:
MAX_CFMT_LEN	src/utils/ncdump/dumplib.c	102;"	d	file:
MAX_DIM_LEN	test/nc_test/tests.h	93;"	d
MAX_NATTS	test/nc_test/tests.h	94;"	d
MAX_NC_ATTSIZE	src/utils/ncgen/ncgen.h	9;"	d
MAX_NC_ID	src/lib/mpincio.c	50;"	d	file:
MAX_NELS	test/nc_test/tests.h	92;"	d
MAX_RANK	test/nc_test/tests.h	91;"	d
METADATA_CONSISTENCY_CHECK	src/lib/header.c	1244;"	d	file:
MIN	src/lib/macro.h	19;"	d
MIN	test/nc_test/tests.h	75;"	d
MIN_NC_XSZ	src/lib/nc.h	36;"	d
MPINETCDF_IMPL_H	src/libf/mpinetcdf_impl.h	8;"	d
MPI_COLLECTIVE_FH	src/lib/ncio.h	107;"	d
MPI_INDEPENDENT_FH	src/lib/ncio.h	108;"	d
MSC_EXTRA	src/lib/pnetcdf.h	227;"	d
MSC_EXTRA	src/lib/pnetcdf.h	229;"	d
MSC_EXTRA	src/lib/pnetcdf.h	232;"	d
M_RNDDOWN	src/lib/rnd.h	15;"	d
M_RNDUP	src/lib/rnd.h	14;"	d
M_RND_UNIT	src/lib/rnd.h	13;"	d
NATTS	test/nc_test/tests.h	187;"	d
NC	src/lib/nc.h	/^struct NC {$/;"	s
NC	src/lib/nc.h	/^typedef struct NC NC; \/* forward reference *\/$/;"	t	typeref:struct:NC
NC::attrs	src/lib/nc.h	/^	NC_attrarray attrs;$/;"	m	struct:NC	access:public
NC::begin_rec	src/lib/nc.h	/^	MPI_Offset begin_rec; \/* position of the first 'record' *\/$/;"	m	struct:NC	access:public
NC::begin_var	src/lib/nc.h	/^	MPI_Offset begin_var; \/* position of the first (non-record) var *\/$/;"	m	struct:NC	access:public
NC::chunk	src/lib/nc.h	/^	MPI_Offset chunk;	\/* largest extent this layer will request from ncio->get() *\/$/;"	m	struct:NC	access:public
NC::dims	src/lib/nc.h	/^	NC_dimarray dims;$/;"	m	struct:NC	access:public
NC::flags	src/lib/nc.h	/^	int flags;$/;"	m	struct:NC	access:public
NC::head	src/lib/nc.h	/^        NC_req *head;$/;"	m	struct:NC	access:public
NC::nciop	src/lib/nc.h	/^	ncio *nciop;$/;"	m	struct:NC	access:public
NC::next	src/lib/nc.h	/^	struct NC *next;$/;"	m	struct:NC	typeref:struct:NC::NC	access:public
NC::numrecs	src/lib/nc.h	/^	MPI_Offset numrecs; \/* number of 'records' allocated *\/$/;"	m	struct:NC	access:public
NC::old	src/lib/nc.h	/^	struct NC *old;$/;"	m	struct:NC	typeref:struct:NC::NC	access:public
NC::prev	src/lib/nc.h	/^	struct NC *prev;$/;"	m	struct:NC	typeref:struct:NC::NC	access:public
NC::recsize	src/lib/nc.h	/^	MPI_Offset recsize;	\/* length of 'record': sum of single record sizes from all record variables *\/	$/;"	m	struct:NC	access:public
NC::tail	src/lib/nc.h	/^        NC_req *tail;$/;"	m	struct:NC	access:public
NC::vars	src/lib/nc.h	/^	NC_vararray vars;$/;"	m	struct:NC	access:public
NC::xsz	src/lib/nc.h	/^	MPI_Offset xsz;	\/* external size of this header, <= var[0].begin *\/$/;"	m	struct:NC	access:public
NCBYTE_T	src/lib/ncconfig.h	180;"	d
NCIO_CONST	src/lib/ncio.h	153;"	d
NCIO_CONST	src/lib/ncio.h	82;"	d
NCIO_CONST	src/lib/ncio.h	84;"	d
NCI_Calloc	src/lib/macro.h	28;"	d
NCI_Calloc_fn	src/lib/macro.h	/^void *NCI_Calloc_fn(size_t nelem, size_t elsize, int lineno, const char *fname);$/;"	p	signature:(size_t nelem, size_t elsize, int lineno, const char *fname)
NCI_Calloc_fn	src/lib/malloc.c	/^void *NCI_Calloc_fn(size_t nelem, size_t elsize, int lineno, const char *fname)$/;"	f	signature:(size_t nelem, size_t elsize, int lineno, const char *fname)
NCI_Calloc_fn	src/lib/malloc.c	/^void *NCI_Calloc_fn(size_t nelem, size_t elsize, int lineno, const char *fname);$/;"	p	file:	signature:(size_t nelem, size_t elsize, int lineno, const char *fname)
NCI_Free	src/lib/macro.h	30;"	d
NCI_Free_fn	src/lib/macro.h	/^void NCI_Free_fn(void *ptr, int lineno, const char *fname);$/;"	p	signature:(void *ptr, int lineno, const char *fname)
NCI_Free_fn	src/lib/malloc.c	/^void  NCI_Free_fn(void *ptr, int lineno, const char *fname);$/;"	p	file:	signature:(void *ptr, int lineno, const char *fname)
NCI_Free_fn	src/lib/malloc.c	/^void NCI_Free_fn(void *ptr, int lineno, const char *fname)$/;"	f	signature:(void *ptr, int lineno, const char *fname)
NCI_Malloc	src/lib/macro.h	27;"	d
NCI_Malloc_fn	src/lib/macro.h	/^void *NCI_Malloc_fn(size_t size, int lineno, const char *fname);$/;"	p	signature:(size_t size, int lineno, const char *fname)
NCI_Malloc_fn	src/lib/malloc.c	/^void *NCI_Malloc_fn(size_t size, int lineno, const char *fname)$/;"	f	signature:(size_t size, int lineno, const char *fname)
NCI_Malloc_fn	src/lib/malloc.c	/^void *NCI_Malloc_fn(size_t size, int lineno, const char *fname);$/;"	p	file:	signature:(size_t size, int lineno, const char *fname)
NCI_Realloc	src/lib/macro.h	29;"	d
NCI_Realloc_fn	src/lib/macro.h	/^void *NCI_Realloc_fn(void *ptr, size_t size, int lineno, const char *fname);$/;"	p	signature:(void *ptr, size_t size, int lineno, const char *fname)
NCI_Realloc_fn	src/lib/malloc.c	/^void *NCI_Realloc_fn(void *ptr, size_t size, int lineno, const char *fname)$/;"	f	signature:(void *ptr, size_t size, int lineno, const char *fname)
NCI_Realloc_fn	src/lib/malloc.c	/^void *NCI_Realloc_fn(void *ptr, size_t size, int lineno, const char *fname);$/;"	p	file:	signature:(void *ptr, size_t size, int lineno, const char *fname)
NCMPI_DTYPE_H	src/lib/ncmpidtype.h	7;"	d
NCSHORT_T	src/lib/ncconfig.h	183;"	d
NCTYPES_H	src/lib/nctypes.h	7;"	d
NCT_CHAR	test/nc_test/tests.h	475;"	d
NCT_DOUBLE	test/nc_test/tests.h	/^	NCT_DOUBLE =	40	\/* double *\/$/;"	e	enum:__anon2
NCT_FLOAT	test/nc_test/tests.h	/^	NCT_FLOAT =	36,	\/* float *\/$/;"	e	enum:__anon2
NCT_INT	test/nc_test/tests.h	/^	NCT_INT =	20,	\/* int *\/$/;"	e	enum:__anon2
NCT_LONG	test/nc_test/tests.h	/^	NCT_LONG =	22,	\/* long *\/$/;"	e	enum:__anon2
NCT_SCHAR	test/nc_test/tests.h	/^	NCT_SCHAR =	17,	\/* signed char *\/$/;"	e	enum:__anon2
NCT_SHORT	test/nc_test/tests.h	/^	NCT_SHORT =	18,	\/* short *\/$/;"	e	enum:__anon2
NCT_TEXT	test/nc_test/tests.h	/^	NCT_TEXT =	16,	\/* char *\/$/;"	e	enum:__anon2
NCT_UCHAR	test/nc_test/tests.h	/^	NCT_UCHAR =	1,	\/* unsigned char *\/$/;"	e	enum:__anon2
NCT_UNSPECIFIED	test/nc_test/tests.h	/^	NCT_UNSPECIFIED = 0,$/;"	e	enum:__anon2
NC_32BIT	src/lib/pnetcdf.h	106;"	d
NC_64BIT_DATA	src/lib/pnetcdf.h	105;"	d
NC_64BIT_OFFSET	src/lib/pnetcdf.h	104;"	d
NC_ALIGN_CHUNK	src/lib/pnetcdf.h	124;"	d
NC_ARRAY_GROWBY	src/lib/nc.h	25;"	d
NC_ATTRIBUTE	src/lib/nc.h	/^	NC_ATTRIBUTE =	12$/;"	e	enum:__anon6
NC_BYTE	src/lib/pnetcdf.h	/^	NC_BYTE =	1,	\/* signed 1 byte integer *\/$/;"	e	enum:__anon5
NC_CHAR	src/lib/pnetcdf.h	/^	NC_CHAR =	2,	\/* ISO\/ASCII character *\/$/;"	e	enum:__anon5
NC_CHECK	src/utils/ncdump/ncdump.h	9;"	d
NC_CHECK	test/testcases/vectors.c	8;"	d	file:
NC_CLOBBER	src/lib/pnetcdf.h	98;"	d
NC_CREAT	src/lib/nc.h	407;"	d
NC_DEFAULT_CHUNKSIZE	src/lib/nc.h	29;"	d
NC_DIMENSION	src/lib/nc.h	/^	NC_DIMENSION =	10,$/;"	e	enum:__anon6
NC_DOUBLE	src/lib/pnetcdf.h	/^	NC_DOUBLE =	6	\/* double precision floating point number *\/$/;"	e	enum:__anon5
NC_EAINT_TOO_SMALL	src/lib/pnetcdf.h	216;"	d
NC_EBADDIM	src/lib/pnetcdf.h	180;"	d
NC_EBADID	src/lib/pnetcdf.h	167;"	d
NC_EBADNAME	src/lib/pnetcdf.h	193;"	d
NC_EBADTYPE	src/lib/pnetcdf.h	179;"	d
NC_ECHAR	src/lib/pnetcdf.h	190;"	d
NC_EDIMSIZE	src/lib/pnetcdf.h	200;"	d
NC_EDIMS_NELEMS_MULTIDEFINE	src/lib/pnetcdf.h	206;"	d
NC_EDIMS_SIZE_MULTIDEFINE	src/lib/pnetcdf.h	207;"	d
NC_EEDGE	src/lib/pnetcdf.h	191;"	d
NC_EEXIST	src/lib/pnetcdf.h	169;"	d
NC_EFILE	src/lib/pnetcdf.h	162;"	d
NC_EGLOBAL	src/lib/pnetcdf.h	184;"	d
NC_EINDEFINE	src/lib/pnetcdf.h	173;"	d
NC_EINDEP	src/lib/pnetcdf.h	161;"	d
NC_EINVAL	src/lib/pnetcdf.h	170;"	d
NC_EINVALCOORDS	src/lib/pnetcdf.h	174;"	d
NC_EINVAL_REQUEST	src/lib/pnetcdf.h	215;"	d
NC_EIOMISMATCH	src/lib/pnetcdf.h	203;"	d
NC_EMAXATTS	src/lib/pnetcdf.h	178;"	d
NC_EMAXDIMS	src/lib/pnetcdf.h	175;"	d
NC_EMAXNAME	src/lib/pnetcdf.h	187;"	d
NC_EMAXVARS	src/lib/pnetcdf.h	182;"	d
NC_EMULTIDEFINE	src/lib/pnetcdf.h	165;"	d
NC_EMULTITYPES	src/lib/pnetcdf.h	202;"	d
NC_ENAMEINUSE	src/lib/pnetcdf.h	176;"	d
NC_ENEGATIVECNT	src/lib/pnetcdf.h	204;"	d
NC_ENFILE	src/lib/pnetcdf.h	168;"	d
NC_ENOMEM	src/lib/pnetcdf.h	197;"	d
NC_ENORECVARS	src/lib/pnetcdf.h	189;"	d
NC_ENOTATT	src/lib/pnetcdf.h	177;"	d
NC_ENOTINDEFINE	src/lib/pnetcdf.h	172;"	d
NC_ENOTINDEP	src/lib/pnetcdf.h	160;"	d
NC_ENOTNC	src/lib/pnetcdf.h	185;"	d
NC_ENOTVAR	src/lib/pnetcdf.h	183;"	d
NC_ENUMRECS_MULTIDEFINE	src/lib/pnetcdf.h	214;"	d
NC_EOFILE	src/lib/pnetcdf.h	166;"	d
NC_EPERM	src/lib/pnetcdf.h	171;"	d
NC_ERANGE	src/lib/pnetcdf.h	196;"	d
NC_EREAD	src/lib/pnetcdf.h	163;"	d
NC_ESMALL	src/lib/pnetcdf.h	159;"	d
NC_ESTRIDE	src/lib/pnetcdf.h	192;"	d
NC_ESTS	src/lib/pnetcdf.h	186;"	d
NC_EUNLIMIT	src/lib/pnetcdf.h	188;"	d
NC_EUNLIMPOS	src/lib/pnetcdf.h	181;"	d
NC_EUNSPTETYPE	src/lib/pnetcdf.h	205;"	d
NC_EVARSIZE	src/lib/pnetcdf.h	198;"	d
NC_EVARS_BEGIN_MULTIDEFINE	src/lib/pnetcdf.h	213;"	d
NC_EVARS_DIMIDS_MULTIDEFINE	src/lib/pnetcdf.h	210;"	d
NC_EVARS_LEN_MULTIDEFINE	src/lib/pnetcdf.h	212;"	d
NC_EVARS_NDIMS_MULTIDEFINE	src/lib/pnetcdf.h	209;"	d
NC_EVARS_NELEMS_MULTIDEFINE	src/lib/pnetcdf.h	208;"	d
NC_EVARS_TYPE_MULTIDEFINE	src/lib/pnetcdf.h	211;"	d
NC_EWRITE	src/lib/pnetcdf.h	164;"	d
NC_FILL	src/lib/pnetcdf.h	100;"	d
NC_FILL_BYTE	src/lib/pnetcdf.h	75;"	d
NC_FILL_CHAR	src/lib/pnetcdf.h	76;"	d
NC_FILL_DOUBLE	src/lib/pnetcdf.h	80;"	d
NC_FILL_FLOAT	src/lib/pnetcdf.h	79;"	d
NC_FILL_INT	src/lib/pnetcdf.h	78;"	d
NC_FILL_SHORT	src/lib/pnetcdf.h	77;"	d
NC_FLOAT	src/lib/pnetcdf.h	/^	NC_FLOAT =	5,	\/* single precision floating point number *\/$/;"	e	enum:__anon5
NC_FORMAT_64BIT	src/lib/pnetcdf.h	111;"	d
NC_FORMAT_64BIT_DATA	src/lib/pnetcdf.h	112;"	d
NC_FORMAT_CLASSIC	src/lib/pnetcdf.h	110;"	d
NC_FORMAT_UNKNOWN	src/lib/pnetcdf.h	113;"	d
NC_GENLIB_H	src/utils/ncgen/genlib.h	2;"	d
NC_GLOBAL	src/lib/pnetcdf.h	134;"	d
NC_HDIRTY	src/lib/nc.h	412;"	d
NC_HSYNC	src/lib/nc.h	410;"	d
NC_INDEF	src/lib/nc.h	408;"	d
NC_INDEP	src/lib/nc.h	406;"	d
NC_INT	src/lib/pnetcdf.h	/^	NC_INT =	4,	\/* signed 4 byte integer *\/$/;"	e	enum:__anon5
NC_ISSYSERR	src/lib/pnetcdf.h	155;"	d
NC_IsNew	src/lib/nc.h	434;"	d
NC_LOCK	src/lib/pnetcdf.h	102;"	d
NC_MAX_ATTRS	src/lib/pnetcdf.h	143;"	d
NC_MAX_DIMS	src/lib/pnetcdf.h	142;"	d
NC_MAX_NAME	src/lib/pnetcdf.h	145;"	d
NC_MAX_VARS	src/lib/pnetcdf.h	144;"	d
NC_MAX_VAR_DIMS	src/lib/pnetcdf.h	146;"	d
NC_NAT	src/lib/pnetcdf.h	/^	NC_NAT =	0,	\/* NAT = 'Not A Type' (c.f. NaN) *\/$/;"	e	enum:__anon5
NC_NCGEN_H	src/utils/ncgen/ncgen.h	2;"	d
NC_NDIRTY	src/lib/nc.h	411;"	d
NC_NOCLOBBER	src/lib/pnetcdf.h	99;"	d
NC_NOERR	src/lib/pnetcdf.h	157;"	d
NC_NOFILL	src/lib/pnetcdf.h	101;"	d
NC_NOWRITE	src/lib/pnetcdf.h	96;"	d
NC_NSYNC	src/lib/nc.h	409;"	d
NC_NUMRECS_EXTENT	src/lib/nc.c	516;"	d	file:
NC_NUMRECS_OFFSET	src/lib/nc.c	515;"	d	file:
NC_REQ_NULL	src/lib/pnetcdf.h	237;"	d
NC_SHARE	src/lib/pnetcdf.h	103;"	d
NC_SHORT	src/lib/pnetcdf.h	/^	NC_SHORT =	3,	\/* signed 2 byte integer *\/$/;"	e	enum:__anon5
NC_SIZEHINT_DEFAULT	src/lib/pnetcdf.h	119;"	d
NC_TEST	test/nc_test/nc_test.c	87;"	d	file:
NC_UNLIMITED	src/lib/pnetcdf.h	129;"	d
NC_UNLIMITED_K	src/utils/ncgen/ncgentab.c	/^     NC_UNLIMITED_K = 258,$/;"	e	enum:yytokentype	file:
NC_UNLIMITED_K	src/utils/ncgen/ncgentab.c	196;"	d	file:
NC_UNLIMITED_K	src/utils/ncgen/ncgentab.h	/^     NC_UNLIMITED_K = 258,$/;"	e	enum:yytokentype
NC_UNLIMITED_K	src/utils/ncgen/ncgentab.h	65;"	d
NC_UNSPECIFIED	src/lib/nc.h	/^	NC_UNSPECIFIED = 0,$/;"	e	enum:__anon6
NC_UNSPECIFIED	src/utils/ncgen/ncgentab.c	103;"	d	file:
NC_VARIABLE	src/lib/nc.h	/^	NC_VARIABLE =	11,$/;"	e	enum:__anon6
NC_WRITE	src/lib/pnetcdf.h	97;"	d
NC_attr	src/lib/nc.h	/^} NC_attr;$/;"	t	typeref:struct:__anon9
NC_attrarray	src/lib/nc.h	/^typedef struct NC_attrarray {$/;"	s
NC_attrarray	src/lib/nc.h	/^} NC_attrarray;$/;"	t	typeref:struct:NC_attrarray
NC_attrarray0	src/lib/attr.c	/^NC_attrarray0( NC *ncp, int varid)$/;"	f	file:	signature:( NC *ncp, int varid)
NC_attrarray::nalloc	src/lib/nc.h	/^	MPI_Offset nalloc;	\/* number allocated >= nelems *\/$/;"	m	struct:NC_attrarray	access:public
NC_attrarray::nelems	src/lib/nc.h	/^	MPI_Offset nelems;	\/* number of defined variables *\/$/;"	m	struct:NC_attrarray	access:public
NC_attrarray::value	src/lib/nc.h	/^	NC_attr **value;$/;"	m	struct:NC_attrarray	access:public
NC_begins	src/lib/nc.c	/^NC_begins(NC *ncp,$/;"	f	file:	signature:(NC *ncp, MPI_Offset h_minfree, MPI_Offset v_align, MPI_Offset v_minfree, MPI_Offset r_align)
NC_begins	src/lib/nc.c	/^static int NC_begins(NC *ncp, MPI_Offset h_minfree, MPI_Offset v_align,$/;"	p	file:	signature:(NC *ncp, MPI_Offset h_minfree, MPI_Offset v_align, MPI_Offset v_minfree, MPI_Offset r_align)
NC_check_def	src/lib/nc.c	/^NC_check_def(MPI_Comm comm, void *buf, MPI_Offset nn) {$/;"	f	file:	signature:(MPI_Comm comm, void *buf, MPI_Offset nn)
NC_check_def	src/lib/nc.c	/^static int NC_check_def(MPI_Comm comm, void *buf, MPI_Offset nn);$/;"	p	file:	signature:(MPI_Comm comm, void *buf, MPI_Offset nn)
NC_check_header	src/lib/nc.c	/^NC_check_header(MPI_Comm comm, void *buf, MPI_Offset hsz, NC *ncp) {$/;"	f	file:	signature:(MPI_Comm comm, void *buf, MPI_Offset hsz, NC *ncp)
NC_check_header	src/lib/nc.c	/^static int NC_check_header(MPI_Comm comm, void *buf, MPI_Offset nn, NC *ncp);$/;"	p	file:	signature:(MPI_Comm comm, void *buf, MPI_Offset nn, NC *ncp)
NC_collectiveFhOpened	src/lib/ncio.h	110;"	d
NC_computeshapes	src/lib/nc.h	/^NC_computeshapes(NC *ncp);$/;"	p	signature:(NC *ncp)
NC_dim	src/lib/nc.h	/^} NC_dim;$/;"	t	typeref:struct:__anon8
NC_dimarray	src/lib/nc.h	/^typedef struct NC_dimarray {$/;"	s
NC_dimarray	src/lib/nc.h	/^} NC_dimarray;$/;"	t	typeref:struct:NC_dimarray
NC_dimarray::nalloc	src/lib/nc.h	/^	size_t nalloc;		\/* number allocated >= nelems *\/$/;"	m	struct:NC_dimarray	access:public
NC_dimarray::nelems	src/lib/nc.h	/^	MPI_Offset nelems;		\/* number of defined variables *\/$/;"	m	struct:NC_dimarray	access:public
NC_dimarray::value	src/lib/nc.h	/^	NC_dim **value;$/;"	m	struct:NC_dimarray	access:public
NC_doHsync	src/lib/nc.h	458;"	d
NC_doNsync	src/lib/nc.h	461;"	d
NC_dofill	src/lib/nc.h	455;"	d
NC_finddim	src/lib/dim.c	/^NC_finddim(const NC_dimarray *ncap, const char *name, NC_dim **dimpp)$/;"	f	file:	signature:(const NC_dimarray *ncap, const char *name, NC_dim **dimpp)
NC_get_numrecs	src/lib/nc.h	464;"	d
NC_hdirty	src/lib/nc.h	452;"	d
NC_increase_numrecs	src/lib/nc.h	470;"	d
NC_indef	src/lib/nc.h	440;"	d
NC_indep	src/lib/nc.h	437;"	d
NC_independentFhOpened	src/lib/ncio.h	113;"	d
NC_lookupattr	src/lib/attr.c	/^NC_lookupattr(int ncid,$/;"	f	file:	signature:(int ncid, int varid, const char *name, NC_attr **attrpp)
NC_ndirty	src/lib/nc.h	446;"	d
NC_readonly	src/lib/nc.h	431;"	d
NC_req	src/lib/nc.h	/^typedef struct NC_req {$/;"	s
NC_req	src/lib/nc.h	/^} NC_req;$/;"	t	typeref:struct:NC_req
NC_req::buf	src/lib/nc.h	/^    void          *buf;$/;"	m	struct:NC_req	access:public
NC_req::bufcount	src/lib/nc.h	/^    MPI_Offset     bufcount;$/;"	m	struct:NC_req	access:public
NC_req::cbuf	src/lib/nc.h	/^    void          *cbuf;$/;"	m	struct:NC_req	access:public
NC_req::cnelems	src/lib/nc.h	/^    MPI_Offset     cnelems;$/;"	m	struct:NC_req	access:public
NC_req::count	src/lib/nc.h	/^    MPI_Offset    *count;  \/* [ndims] *\/$/;"	m	struct:NC_req	access:public
NC_req::datatype	src/lib/nc.h	/^    MPI_Datatype   datatype;$/;"	m	struct:NC_req	access:public
NC_req::id	src/lib/nc.h	/^    int            id;$/;"	m	struct:NC_req	access:public
NC_req::imaptype	src/lib/nc.h	/^    MPI_Datatype   imaptype;$/;"	m	struct:NC_req	access:public
NC_req::is_imap	src/lib/nc.h	/^    int            is_imap;$/;"	m	struct:NC_req	access:public
NC_req::iscontig_of_ptypes	src/lib/nc.h	/^    int            iscontig_of_ptypes;$/;"	m	struct:NC_req	access:public
NC_req::lbuf	src/lib/nc.h	/^    void          *lbuf;$/;"	m	struct:NC_req	access:public
NC_req::lnelems	src/lib/nc.h	/^    MPI_Offset     lnelems;$/;"	m	struct:NC_req	access:public
NC_req::ndims	src/lib/nc.h	/^    int            ndims;$/;"	m	struct:NC_req	access:public
NC_req::nelems	src/lib/nc.h	/^    MPI_Offset     nelems;$/;"	m	struct:NC_req	access:public
NC_req::next	src/lib/nc.h	/^    struct NC_req *next;$/;"	m	struct:NC_req	typeref:struct:NC_req::NC_req	access:public
NC_req::num_subreqs	src/lib/nc.h	/^    int            num_subreqs;$/;"	m	struct:NC_req	access:public
NC_req::offset_end	src/lib/nc.h	/^    MPI_Offset     offset_end;    \/*   ending of aggregate access region *\/$/;"	m	struct:NC_req	access:public
NC_req::offset_start	src/lib/nc.h	/^    MPI_Offset     offset_start;  \/* starting of aggregate access region *\/$/;"	m	struct:NC_req	access:public
NC_req::ptype	src/lib/nc.h	/^    MPI_Datatype   ptype;$/;"	m	struct:NC_req	access:public
NC_req::rw_flag	src/lib/nc.h	/^    int            rw_flag;$/;"	m	struct:NC_req	access:public
NC_req::start	src/lib/nc.h	/^    MPI_Offset    *start;  \/* [ndims] *\/$/;"	m	struct:NC_req	access:public
NC_req::status	src/lib/nc.h	/^    int           *status;$/;"	m	struct:NC_req	access:public
NC_req::stride	src/lib/nc.h	/^    MPI_Offset    *stride; \/* [ndims] *\/$/;"	m	struct:NC_req	access:public
NC_req::subreqs	src/lib/nc.h	/^    struct NC_req *subreqs;  \/* [num_subreq] *\/$/;"	m	struct:NC_req	typeref:struct:NC_req::NC_req	access:public
NC_req::varp	src/lib/nc.h	/^    NC_var        *varp;$/;"	m	struct:NC_req	access:public
NC_req::xbuf	src/lib/nc.h	/^    void          *xbuf;$/;"	m	struct:NC_req	access:public
NC_set_numrecs	src/lib/nc.h	467;"	d
NC_string	src/lib/nc.h	/^} NC_string;$/;"	t	typeref:struct:__anon7
NC_var	src/lib/nc.h	/^} NC_var;$/;"	t	typeref:struct:__anon10
NC_vararray	src/lib/nc.h	/^typedef struct NC_vararray {$/;"	s
NC_vararray	src/lib/nc.h	/^} NC_vararray;$/;"	t	typeref:struct:NC_vararray
NC_vararray::nalloc	src/lib/nc.h	/^	MPI_Offset nalloc;	\/* number allocated >= nelems *\/$/;"	m	struct:NC_vararray	access:public
NC_vararray::nelems	src/lib/nc.h	/^	MPI_Offset nelems;	\/* number of defined variables *\/$/;"	m	struct:NC_vararray	access:public
NC_vararray::value	src/lib/nc.h	/^	NC_var **value;$/;"	m	struct:NC_vararray	access:public
NCcoordck	src/lib/filetype.c	/^NCcoordck(NC               *ncp,$/;"	f	signature:(NC *ncp, const NC_var *varp, const MPI_Offset *coord)
NCcoordck	src/lib/nc.h	/^int NCcoordck(NC *ncp, const NC_var *varp, const MPI_Offset *coord);$/;"	p	signature:(NC *ncp, const NC_var *varp, const MPI_Offset *coord)
NCedgeck	src/lib/filetype.c	/^NCedgeck(const NC         *ncp,$/;"	f	signature:(const NC *ncp, const NC_var *varp, const MPI_Offset *start, const MPI_Offset *edges)
NCedgeck	src/lib/nc.h	/^int NCedgeck(const NC *ncp, const NC_var *varp, const MPI_Offset *start,$/;"	p	signature:(const NC *ncp, const NC_var *varp, const MPI_Offset *start, const MPI_Offset *edges)
NClist	src/lib/nc.c	/^static NC *NClist = NULL;$/;"	v	file:
NCstrideedgeck	src/lib/filetype.c	/^NCstrideedgeck(const NC         *ncp,$/;"	f	signature:(const NC *ncp, const NC_var *varp, const MPI_Offset *start, const MPI_Offset *edges, const MPI_Offset *stride)
NCstrideedgeck	src/lib/nc.h	/^int NCstrideedgeck(const NC *ncp, const NC_var *varp, const MPI_Offset *start,$/;"	p	signature:(const NC *ncp, const NC_var *varp, const MPI_Offset *start, const MPI_Offset *edges, const MPI_Offset *stride)
NCtype	src/lib/nc.h	/^} NCtype;$/;"	t	typeref:enum:__anon6
NDEBUG	src/lib/mpincio.c	35;"	d	file:
NDIMS	test/C/pres_temp_4D_rd.c	29;"	d	file:
NDIMS	test/C/pres_temp_4D_wr.c	30;"	d	file:
NDIMS	test/C/sfc_pres_temp_rd.c	27;"	d	file:
NDIMS	test/C/sfc_pres_temp_wr.c	28;"	d	file:
NDIMS	test/C/simple_xy_wr.c	26;"	d	file:
NDIMS	test/nc_test/tests.h	86;"	d
NDIMS	test/testcases/ncmpi_vars_null_stride.c	11;"	d	file:
NETCDF	src/utils/ncgen/ncgentab.c	/^     NETCDF = 275,$/;"	e	enum:yytokentype	file:
NETCDF	src/utils/ncgen/ncgentab.c	213;"	d	file:
NETCDF	src/utils/ncgen/ncgentab.h	/^     NETCDF = 275,$/;"	e	enum:yytokentype
NETCDF	src/utils/ncgen/ncgentab.h	82;"	d
NF_INT1_T	src/lib/ncconfig.h	192;"	d
NF_INT2_T	src/lib/ncconfig.h	198;"	d
NGATTS	test/nc_test/tests.h	89;"	d
NLAT	test/C/pres_temp_4D_rd.c	30;"	d	file:
NLAT	test/C/pres_temp_4D_wr.c	31;"	d	file:
NLAT	test/C/sfc_pres_temp_rd.c	28;"	d	file:
NLAT	test/C/sfc_pres_temp_wr.c	29;"	d	file:
NLON	test/C/pres_temp_4D_rd.c	31;"	d	file:
NLON	test/C/pres_temp_4D_wr.c	32;"	d	file:
NLON	test/C/sfc_pres_temp_rd.c	29;"	d	file:
NLON	test/C/sfc_pres_temp_wr.c	30;"	d	file:
NLVL	test/C/pres_temp_4D_rd.c	37;"	d	file:
NLVL	test/C/pres_temp_4D_wr.c	38;"	d	file:
NO_NETCDF_2	src/utils/ncdump/dumplib.h	9;"	d
NO_NETCDF_2	test/nc_test/tests.h	13;"	d
NREC	test/C/pres_temp_4D_rd.c	34;"	d	file:
NREC	test/C/pres_temp_4D_wr.c	35;"	d	file:
NRECS	test/nc_test/tests.h	88;"	d
NTYPES	test/nc_test/tests.h	85;"	d
NUMRECS	test/largefile/large_files.c	47;"	d	file:
NVARS	test/nc_test/tests.h	87;"	d
NX	test/C/simple_xy_rd.c	25;"	d	file:
NX	test/C/simple_xy_wr.c	27;"	d	file:
NY	test/C/simple_xy_rd.c	26;"	d	file:
NY	test/C/simple_xy_wr.c	28;"	d	file:
N_LEN	test/largefile/large_files.c	51;"	d	file:
Nclang	src/utils/ncdump/ncdump.h	/^enum {LANG_C, LANG_F} Nclang; $/;"	t	typeref:enum:__anon4
OFF_NONE	src/lib/ncio.h	21;"	d
PACKAGE_BUGREPORT	src/lib/ncconfig.h	213;"	d
PACKAGE_NAME	src/lib/ncconfig.h	216;"	d
PACKAGE_STRING	src/lib/ncconfig.h	219;"	d
PACKAGE_TARNAME	src/lib/ncconfig.h	222;"	d
PACKAGE_VERSION	src/lib/ncconfig.h	225;"	d
PNCDF_Error	test/testcases/redef1.cpp	/^void PNCDF_Error(const int status, const char *const msg)  {  $/;"	f	signature:(const int status, const char *const msg)
PNETCDF_VERSION	src/lib/ncconfig.h	228;"	d
PNETCDF_VERSION_MAJOR	src/lib/ncconfig.h	231;"	d
PNETCDF_VERSION_MAJOR	src/lib/pnetcdf.h	48;"	d
PNETCDF_VERSION_MINOR	src/lib/ncconfig.h	234;"	d
PNETCDF_VERSION_MINOR	src/lib/pnetcdf.h	49;"	d
PNETCDF_VERSION_PRE	src/lib/ncconfig.h	237;"	d
PNETCDF_VERSION_PRE	src/lib/pnetcdf.h	51;"	d
PNETCDF_VERSION_SUB	src/lib/ncconfig.h	240;"	d
PNETCDF_VERSION_SUB	src/lib/pnetcdf.h	50;"	d
PRES_NAME	test/C/pres_temp_4D_rd.c	40;"	d	file:
PRES_NAME	test/C/pres_temp_4D_wr.c	41;"	d	file:
PRES_NAME	test/C/sfc_pres_temp_rd.c	33;"	d	file:
PRES_NAME	test/C/sfc_pres_temp_wr.c	35;"	d	file:
PRES_UNITS	test/C/pres_temp_4D_rd.c	54;"	d	file:
PRES_UNITS	test/C/pres_temp_4D_wr.c	55;"	d	file:
PRES_UNITS	test/C/sfc_pres_temp_rd.c	44;"	d	file:
PUT_VAR1_COMMON	src/lib/getput_var1.c	54;"	d	file:
PUT_VARA_ALL_COMMON	src/lib/getput_vara.c	309;"	d	file:
PUT_VARA_COMMON	src/lib/getput_vara.c	51;"	d	file:
PUT_VARM_ALL_COMMON	src/lib/getput_varm.c	370;"	d	file:
PUT_VARM_COMMON	src/lib/getput_varm.c	77;"	d	file:
PUT_VARS_ALL_COMMON	src/lib/getput_vars.c	329;"	d	file:
PUT_VARS_COMMON	src/lib/getput_vars.c	53;"	d	file:
PUT_VAR_ALL_COMMON	src/lib/getput_var.c	297;"	d	file:
PUT_VAR_COMMON	src/lib/getput_var.c	54;"	d	file:
Printf	src/utils/ncdump/ncdump.h	15;"	d
RANK_var1	test/largefile/large_files.c	65;"	d	file:
RANK_x	test/largefile/large_files.c	66;"	d	file:
READ_REQ	src/lib/macro.h	10;"	d
RECDIM	test/nc_test/tests.h	90;"	d
REC_NAME	test/C/pres_temp_4D_rd.c	35;"	d	file:
REC_NAME	test/C/pres_temp_4D_wr.c	36;"	d	file:
REJECT	src/utils/ncgen/ncgenyy.c	661;"	d	file:
RGN_MODIFIED	src/lib/ncio.h	35;"	d
RGN_NOLOCK	src/lib/ncio.h	27;"	d
RGN_NOWAIT	src/lib/ncio.h	31;"	d
RGN_WRITE	src/lib/ncio.h	33;"	d
SAMPLE_PRESSURE	test/C/pres_temp_4D_rd.c	47;"	d	file:
SAMPLE_PRESSURE	test/C/pres_temp_4D_wr.c	48;"	d	file:
SAMPLE_PRESSURE	test/C/sfc_pres_temp_rd.c	37;"	d	file:
SAMPLE_PRESSURE	test/C/sfc_pres_temp_wr.c	42;"	d	file:
SAMPLE_TEMP	test/C/pres_temp_4D_rd.c	48;"	d	file:
SAMPLE_TEMP	test/C/pres_temp_4D_wr.c	49;"	d	file:
SAMPLE_TEMP	test/C/sfc_pres_temp_rd.c	38;"	d	file:
SAMPLE_TEMP	test/C/sfc_pres_temp_wr.c	43;"	d	file:
SEP	src/utils/ncgen/main.c	49;"	d	file:
SEP	src/utils/ncgen/main.c	52;"	d	file:
SEP	src/utils/ncgen/main.c	55;"	d	file:
SHORT_CONST	src/utils/ncgen/ncgentab.c	/^     SHORT_CONST = 269,$/;"	e	enum:yytokentype	file:
SHORT_CONST	src/utils/ncgen/ncgentab.c	207;"	d	file:
SHORT_CONST	src/utils/ncgen/ncgentab.h	/^     SHORT_CONST = 269,$/;"	e	enum:yytokentype
SHORT_CONST	src/utils/ncgen/ncgentab.h	76;"	d
SHORT_K	src/utils/ncgen/ncgentab.c	/^     SHORT_K = 261,$/;"	e	enum:yytokentype	file:
SHORT_K	src/utils/ncgen/ncgentab.c	199;"	d	file:
SHORT_K	src/utils/ncgen/ncgentab.h	/^     SHORT_K = 261,$/;"	e	enum:yytokentype
SHORT_K	src/utils/ncgen/ncgentab.h	68;"	d
SHORT_MAX	src/lib/ncx.c	38;"	d	file:
SHORT_MIN	src/lib/ncx.c	39;"	d	file:
SIZEOF_DOUBLE	src/lib/ncconfig.h	243;"	d
SIZEOF_FLOAT	src/lib/ncconfig.h	246;"	d
SIZEOF_INT	src/lib/ncconfig.h	249;"	d
SIZEOF_IX_INT	src/lib/ncx.c	486;"	d	file:
SIZEOF_IX_INT	src/lib/ncx.c	490;"	d	file:
SIZEOF_IX_INT	src/lib/ncx.c	494;"	d	file:
SIZEOF_IX_SHORT	src/lib/ncx.c	256;"	d	file:
SIZEOF_IX_SHORT	src/lib/ncx.c	260;"	d	file:
SIZEOF_IX_SHORT	src/lib/ncx.c	264;"	d	file:
SIZEOF_LONG	src/lib/ncconfig.h	252;"	d
SIZEOF_MPI_OFFSET	src/lib/ncconfig.h	255;"	d
SIZEOF_OFF_T	src/lib/ncconfig.h	258;"	d
SIZEOF_SHORT	src/lib/ncconfig.h	261;"	d
SIZEOF_SIZE_T	src/lib/ncconfig.h	264;"	d
START_LAT	test/C/pres_temp_4D_rd.c	49;"	d	file:
START_LAT	test/C/pres_temp_4D_wr.c	50;"	d	file:
START_LAT	test/C/sfc_pres_temp_rd.c	39;"	d	file:
START_LAT	test/C/sfc_pres_temp_wr.c	44;"	d	file:
START_LON	test/C/pres_temp_4D_rd.c	50;"	d	file:
START_LON	test/C/pres_temp_4D_wr.c	51;"	d	file:
START_LON	test/C/sfc_pres_temp_rd.c	40;"	d	file:
START_LON	test/C/sfc_pres_temp_wr.c	45;"	d	file:
STDC_HEADERS	src/lib/ncconfig.h	275;"	d
STREQ	src/utils/ncdump/ncdump.c	33;"	d	file:
STREQ	src/utils/ncdump/vardata.c	58;"	d	file:
STREQ	src/utils/ncgen/ncgentab.c	102;"	d	file:
STRIDE	test/testcases/vectors.c	18;"	d	file:
SWAP	src/lib/convert_swap.c	94;"	d	file:
SWAP2	src/lib/ncx.c	89;"	d	file:
SWAP4	src/lib/ncx.c	92;"	d	file:
SccsId	src/utils/ncgen/ncgentab.c	/^static char SccsId[] = "$Id: ncgen.y 886 2010-07-26 22:08:20Z robl $";$/;"	v	file:
Symbol	src/utils/ncgen/ncgentab.c	/^typedef struct Symbol {		\/* symbol table entry *\/$/;"	s	file:
Symbol::dnum	src/utils/ncgen/ncgentab.c	/^	int             dnum;	        \/* handle as a dimension *\/$/;"	m	struct:Symbol	file:	access:public
Symbol::is_att	src/utils/ncgen/ncgentab.c	/^	unsigned	is_att : 1;	\/* appears as netCDF attribute *\/$/;"	m	struct:Symbol	file:	access:public
Symbol::is_dim	src/utils/ncgen/ncgentab.c	/^	unsigned	is_dim : 1;	\/* appears as netCDF dimension *\/$/;"	m	struct:Symbol	file:	access:public
Symbol::is_var	src/utils/ncgen/ncgentab.c	/^	unsigned	is_var : 1;	\/* appears as netCDF variable *\/$/;"	m	struct:Symbol	file:	access:public
Symbol::name	src/utils/ncgen/ncgentab.c	/^	char    	*name;$/;"	m	struct:Symbol	file:	access:public
Symbol::next	src/utils/ncgen/ncgentab.c	/^	struct Symbol   *next;$/;"	m	struct:Symbol	typeref:struct:Symbol::Symbol	file:	access:public
Symbol::vnum	src/utils/ncgen/ncgentab.c	/^	int             vnum;	        \/* handle as a variable *\/$/;"	m	struct:Symbol	file:	access:public
TEMP_NAME	test/C/pres_temp_4D_rd.c	41;"	d	file:
TEMP_NAME	test/C/pres_temp_4D_wr.c	42;"	d	file:
TEMP_NAME	test/C/sfc_pres_temp_rd.c	34;"	d	file:
TEMP_NAME	test/C/sfc_pres_temp_wr.c	36;"	d	file:
TEMP_UNITS	test/C/pres_temp_4D_rd.c	55;"	d	file:
TEMP_UNITS	test/C/pres_temp_4D_wr.c	56;"	d	file:
TEMP_UNITS	test/C/sfc_pres_temp_rd.c	45;"	d	file:
TERMSTRING	src/utils/ncgen/ncgentab.c	/^     TERMSTRING = 266,$/;"	e	enum:yytokentype	file:
TERMSTRING	src/utils/ncgen/ncgentab.c	204;"	d	file:
TERMSTRING	src/utils/ncgen/ncgentab.h	/^     TERMSTRING = 266,$/;"	e	enum:yytokentype
TERMSTRING	src/utils/ncgen/ncgentab.h	73;"	d
TEST_ARRAY_ORDER	test/test_dtype/test_darray.c	15;"	d	file:
TEST_ARRAY_ORDER	test/test_dtype/test_nonblocking.c	15;"	d	file:
TEST_ARRAY_ORDER	test/test_dtype/test_subarray.c	15;"	d	file:
TEST_DEFAULT_FILE	test/test_dtype/test_darray.c	11;"	d	file:
TEST_DEFAULT_FILE	test/test_dtype/test_nonblocking.c	11;"	d	file:
TEST_DEFAULT_FILE	test/test_dtype/test_subarray.c	11;"	d	file:
TEST_DIMS	test/test_dtype/test_darray.c	12;"	d	file:
TEST_DIMS	test/test_dtype/test_nonblocking.c	12;"	d	file:
TEST_DIMS	test/test_dtype/test_subarray.c	12;"	d	file:
TEST_DTYPE_H	test/test_dtype/test_dtype.h	2;"	d
TEST_EXIT	test/test_dtype/test_dtype.h	130;"	d
TEST_GET_NCTYPE_STR	test/test_dtype/test_dtype.h	84;"	d
TEST_HANDLE_ERR	test/mcoll_perf/mcoll_perf.c	32;"	d	file:
TEST_HANDLE_ERR	test/test_dtype/test_dtype.h	102;"	d
TEST_M	test/test_dtype/test_darray.c	14;"	d	file:
TEST_M	test/test_dtype/test_nonblocking.c	14;"	d	file:
TEST_M	test/test_dtype/test_subarray.c	14;"	d	file:
TEST_MAX_INT	test/test_dtype/test_dtype.h	44;"	d
TEST_N	test/test_dtype/test_darray.c	13;"	d	file:
TEST_N	test/test_dtype/test_nonblocking.c	13;"	d	file:
TEST_N	test/test_dtype/test_subarray.c	13;"	d	file:
TEST_NATIVE_ETYPE	test/test_dtype/test_dtype.h	19;"	d
TEST_NATIVE_ETYPE	test/test_dtype/test_dtype.h	22;"	d
TEST_NATIVE_ETYPE	test/test_dtype/test_dtype.h	25;"	d
TEST_NATIVE_ETYPE	test/test_dtype/test_dtype.h	28;"	d
TEST_NATIVE_ETYPE	test/test_dtype/test_dtype.h	31;"	d
TEST_NATIVE_ETYPE	test/test_dtype/test_dtype.h	34;"	d
TEST_NATIVE_ETYPE	test/test_dtype/test_dtype.h	37;"	d
TEST_NATIVE_ETYPE	test/test_dtype/test_dtype.h	40;"	d
TEST_NATIVE_ETYPE_STR	test/test_dtype/test_dtype.h	20;"	d
TEST_NATIVE_ETYPE_STR	test/test_dtype/test_dtype.h	23;"	d
TEST_NATIVE_ETYPE_STR	test/test_dtype/test_dtype.h	26;"	d
TEST_NATIVE_ETYPE_STR	test/test_dtype/test_dtype.h	29;"	d
TEST_NATIVE_ETYPE_STR	test/test_dtype/test_dtype.h	32;"	d
TEST_NATIVE_ETYPE_STR	test/test_dtype/test_dtype.h	35;"	d
TEST_NATIVE_ETYPE_STR	test/test_dtype/test_dtype.h	38;"	d
TEST_NATIVE_ETYPE_STR	test/test_dtype/test_dtype.h	41;"	d
TEST_NCTYPE	test/test_dtype/test_dtype.h	6;"	d
TEST_NCTYPE_LEN	test/test_dtype/test_dtype.h	94;"	d
TEST_PRINT_LIST	test/test_dtype/test_dtype.h	119;"	d
TEST_REVERSE	test/test_dtype/test_dtype.h	108;"	d
TEST_SET_NCMPI_ETYPE	test/test_dtype/test_dtype.h	46;"	d
TEST_TYPE_INDEX	test/test_dtype/test_dtype.h	5;"	d
UD_GENERIC_H	src/utils/ncgen/generic.h	8;"	d
UINT16_MAX	src/utils/ncgen/ncgenyy.c	99;"	d	file:
UINT32_MAX	src/utils/ncgen/ncgenyy.c	102;"	d	file:
UINT8_MAX	src/utils/ncgen/ncgenyy.c	96;"	d	file:
UNITS	test/C/pres_temp_4D_rd.c	42;"	d	file:
UNITS	test/C/pres_temp_4D_rd.c	53;"	d	file:
UNITS	test/C/pres_temp_4D_wr.c	43;"	d	file:
UNITS	test/C/pres_temp_4D_wr.c	54;"	d	file:
UNITS	test/C/sfc_pres_temp_rd.c	43;"	d	file:
UNITS	test/C/sfc_pres_temp_wr.c	37;"	d	file:
USAGE	src/utils/ncdump/ncdump.c	40;"	d	file:
USHORT_MAX	src/lib/ncx.c	40;"	d	file:
VALBUFSIZ	src/utils/ncdump/vardata.c	715;"	d	file:
VARIABLES	src/utils/ncgen/ncgentab.c	/^     VARIABLES = 274,$/;"	e	enum:yytokentype	file:
VARIABLES	src/utils/ncgen/ncgentab.c	212;"	d	file:
VARIABLES	src/utils/ncgen/ncgentab.h	/^     VARIABLES = 274,$/;"	e	enum:yytokentype
VARIABLES	src/utils/ncgen/ncgentab.h	81;"	d
VARID	test/nc_test/tests.h	186;"	d
VAX_DBL_BIAS	src/lib/ncx.c	1113;"	d	file:
VAX_SNG_BIAS	src/lib/ncx.c	795;"	d	file:
VECCOUNT	test/testcases/vectors.c	16;"	d	file:
VER_64BIT_DATA	src/lib/nc.c	29;"	d	file:
VER_64BIT_OFFSET	src/lib/nc.c	27;"	d	file:
VER_CLASSIC	src/lib/nc.c	26;"	d	file:
VER_HDF5	src/lib/nc.c	28;"	d	file:
WARN_STR	src/lib/header.c	1247;"	d	file:
WRITE_REQ	src/lib/macro.h	9;"	d
XDR_INT_MAX	src/utils/ncgen/ncgenyy.c	680;"	d	file:
XDR_INT_MIN	src/utils/ncgen/ncgenyy.c	679;"	d	file:
X_ALIGN	src/lib/mpincio.c	47;"	d	file:
X_ALIGN	src/lib/ncx.h	105;"	d
X_BYTE_MAX	test/nc_test/tests.h	29;"	d
X_BYTE_MIN	test/nc_test/tests.h	28;"	d
X_CHAR_MAX	test/nc_test/tests.h	27;"	d
X_CHAR_MIN	test/nc_test/tests.h	26;"	d
X_DBL_MAX	src/lib/ncx.h	90;"	d
X_DOUBLE_MAX	src/lib/ncx.h	88;"	d
X_DOUBLE_MAX	test/nc_test/tests.h	43;"	d
X_DOUBLE_MAX	test/nc_test/tests.h	46;"	d
X_DOUBLE_MIN	src/lib/ncx.h	89;"	d
X_DOUBLE_MIN	test/nc_test/tests.h	48;"	d
X_FLOAT_MAX	src/lib/ncx.c	56;"	d	file:
X_FLOAT_MAX	src/lib/ncx.c	57;"	d	file:
X_FLOAT_MAX	src/lib/ncx.h	84;"	d
X_FLOAT_MAX	test/nc_test/tests.h	36;"	d
X_FLOAT_MAX	test/nc_test/tests.h	38;"	d
X_FLOAT_MIN	src/lib/ncx.c	58;"	d	file:
X_FLOAT_MIN	src/lib/ncx.c	59;"	d	file:
X_FLOAT_MIN	src/lib/ncx.h	85;"	d
X_FLOAT_MIN	test/nc_test/tests.h	40;"	d
X_FLT_MAX	src/lib/ncx.h	86;"	d
X_INT64_T_MAX	src/lib/ncx.h	95;"	d
X_INT_MAX	src/lib/mpincio.c	41;"	d	file:
X_INT_MAX	src/lib/ncx.h	77;"	d
X_INT_MAX	test/nc_test/tests.h	33;"	d
X_INT_MIN	src/lib/ncx.h	76;"	d
X_INT_MIN	test/nc_test/tests.h	32;"	d
X_OFF_MAX	src/lib/ncx.h	93;"	d
X_SCHAR_MAX	src/lib/ncx.h	68;"	d
X_SCHAR_MIN	src/lib/ncx.h	67;"	d
X_SHORT_MAX	src/lib/ncx.h	72;"	d
X_SHORT_MAX	test/nc_test/tests.h	31;"	d
X_SHORT_MIN	src/lib/ncx.h	70;"	d
X_SHORT_MIN	test/nc_test/tests.h	30;"	d
X_SHRT_MAX	src/lib/ncx.h	73;"	d
X_SHRT_MIN	src/lib/ncx.h	71;"	d
X_SIZEOF_CHAR	src/lib/ncx.h	43;"	d
X_SIZEOF_DOUBLE	src/lib/ncx.h	50;"	d
X_SIZEOF_FLOAT	src/lib/ncx.h	49;"	d
X_SIZEOF_INT	src/lib/ncx.h	45;"	d
X_SIZEOF_LONG	src/lib/ncx.h	47;"	d
X_SIZEOF_NCTYPE	src/lib/header.c	138;"	d	file:
X_SIZEOF_NC_TYPE	src/lib/header.c	137;"	d	file:
X_SIZEOF_OFF_T	src/lib/ncx.h	59;"	d
X_SIZEOF_SHORT	src/lib/ncx.h	44;"	d
X_SIZEOF_SIZE_T	src/lib/ncx.h	60;"	d
X_SIZE_MAX	src/lib/ncx.h	92;"	d
X_UCHAR_MAX	src/lib/ncx.h	69;"	d
X_UINT64_T_MAX	src/lib/ncx.h	96;"	d
X_UINT_MAX	src/lib/ncx.h	78;"	d
X_USHORT_MAX	src/lib/ncx.h	74;"	d
X_USHRT_MAX	src/lib/ncx.h	75;"	d
YYABORT	src/utils/ncgen/ncgentab.c	719;"	d	file:
YYACCEPT	src/utils/ncgen/ncgentab.c	718;"	d	file:
YYBACKUP	src/utils/ncgen/ncgentab.c	731;"	d	file:
YYBISON	src/utils/ncgen/ncgentab.c	46;"	d	file:
YYBISON_VERSION	src/utils/ncgen/ncgentab.c	49;"	d	file:
YYCOPY	src/utils/ncgen/ncgentab.c	412;"	d	file:
YYCOPY	src/utils/ncgen/ncgentab.c	415;"	d	file:
YYDEBUG	src/utils/ncgen/ncgentab.c	150;"	d	file:
YYDPRINTF	src/utils/ncgen/ncgentab.c	811;"	d	file:
YYDPRINTF	src/utils/ncgen/ncgentab.c	960;"	d	file:
YYEMPTY	src/utils/ncgen/ncgentab.c	715;"	d	file:
YYEOF	src/utils/ncgen/ncgentab.c	716;"	d	file:
YYERRCODE	src/utils/ncgen/ncgentab.c	750;"	d	file:
YYERROR	src/utils/ncgen/ncgentab.c	720;"	d	file:
YYERROR_VERBOSE	src/utils/ncgen/ncgentab.c	155;"	d	file:
YYERROR_VERBOSE	src/utils/ncgen/ncgentab.c	156;"	d	file:
YYERROR_VERBOSE	src/utils/ncgen/ncgentab.c	158;"	d	file:
YYFAIL	src/utils/ncgen/ncgentab.c	727;"	d	file:
YYFINAL	src/utils/ncgen/ncgentab.c	445;"	d	file:
YYFPRINTF	src/utils/ncgen/ncgentab.c	808;"	d	file:
YYFREE	src/utils/ncgen/ncgentab.c	378;"	d	file:
YYID	src/utils/ncgen/ncgentab.c	/^YYID (int yyi)$/;"	f	file:	signature:(int yyi)
YYID	src/utils/ncgen/ncgentab.c	302;"	d	file:
YYINITDEPTH	src/utils/ncgen/ncgentab.c	969;"	d	file:
YYLAST	src/utils/ncgen/ncgentab.c	447;"	d	file:
YYLEX	src/utils/ncgen/ncgentab.c	798;"	d	file:
YYLEX	src/utils/ncgen/ncgentab.c	800;"	d	file:
YYLLOC_DEFAULT	src/utils/ncgen/ncgentab.c	759;"	d	file:
YYLSP_NEEDED	src/utils/ncgen/ncgentab.c	64;"	d	file:
YYMALLOC	src/utils/ncgen/ncgentab.c	371;"	d	file:
YYMAXDEPTH	src/utils/ncgen/ncgentab.c	980;"	d	file:
YYMAXUTOK	src/utils/ncgen/ncgentab.c	460;"	d	file:
YYNNTS	src/utils/ncgen/ncgentab.c	452;"	d	file:
YYNRULES	src/utils/ncgen/ncgentab.c	454;"	d	file:
YYNSTATES	src/utils/ncgen/ncgentab.c	456;"	d	file:
YYNTOKENS	src/utils/ncgen/ncgentab.c	450;"	d	file:
YYPACT_NINF	src/utils/ncgen/ncgentab.c	638;"	d	file:
YYPOPSTACK	src/utils/ncgen/ncgentab.c	1320;"	d	file:
YYPULL	src/utils/ncgen/ncgentab.c	61;"	d	file:
YYPURE	src/utils/ncgen/ncgentab.c	55;"	d	file:
YYPUSH	src/utils/ncgen/ncgentab.c	58;"	d	file:
YYRECOVERING	src/utils/ncgen/ncgentab.c	729;"	d	file:
YYRHSLOC	src/utils/ncgen/ncgentab.c	757;"	d	file:
YYSIZE_MAXIMUM	src/utils/ncgen/ncgentab.c	279;"	d	file:
YYSIZE_T	src/utils/ncgen/ncgentab.c	267;"	d	file:
YYSIZE_T	src/utils/ncgen/ncgentab.c	269;"	d	file:
YYSIZE_T	src/utils/ncgen/ncgentab.c	273;"	d	file:
YYSIZE_T	src/utils/ncgen/ncgentab.c	275;"	d	file:
YYSKELETON_NAME	src/utils/ncgen/ncgentab.c	52;"	d	file:
YYSTACK_ALLOC	src/utils/ncgen/ncgentab.c	325;"	d	file:
YYSTACK_ALLOC	src/utils/ncgen/ncgentab.c	329;"	d	file:
YYSTACK_ALLOC	src/utils/ncgen/ncgentab.c	334;"	d	file:
YYSTACK_ALLOC	src/utils/ncgen/ncgentab.c	357;"	d	file:
YYSTACK_ALLOC_MAXIMUM	src/utils/ncgen/ncgentab.c	354;"	d	file:
YYSTACK_ALLOC_MAXIMUM	src/utils/ncgen/ncgentab.c	360;"	d	file:
YYSTACK_BYTES	src/utils/ncgen/ncgentab.c	404;"	d	file:
YYSTACK_FREE	src/utils/ncgen/ncgentab.c	348;"	d	file:
YYSTACK_FREE	src/utils/ncgen/ncgentab.c	358;"	d	file:
YYSTACK_GAP_MAXIMUM	src/utils/ncgen/ncgentab.c	400;"	d	file:
YYSTACK_RELOCATE	src/utils/ncgen/ncgentab.c	431;"	d	file:
YYSTATE	src/utils/ncgen/ncgenyy.c	151;"	d	file:
YYSTYPE	src/utils/ncgen/ncgentab.c	/^typedef int YYSTYPE;$/;"	t	file:
YYSTYPE	src/utils/ncgen/ncgentab.c	105;"	d	file:
YYSTYPE	src/utils/ncgen/ncgentab.h	/^typedef int YYSTYPE;$/;"	t
YYSTYPE1	src/utils/ncgen/ncgentab.c	/^	} *YYSTYPE1;$/;"	t	typeref:struct:Symbol	file:
YYSTYPE_IS_DECLARED	src/utils/ncgen/ncgentab.c	224;"	d	file:
YYSTYPE_IS_DECLARED	src/utils/ncgen/ncgentab.h	93;"	d
YYSTYPE_IS_TRIVIAL	src/utils/ncgen/ncgentab.c	222;"	d	file:
YYSTYPE_IS_TRIVIAL	src/utils/ncgen/ncgentab.h	91;"	d
YYTABLES_NAME	src/utils/ncgen/ncgenyy.c	2253;"	d	file:
YYTABLE_NINF	src/utils/ncgen/ncgentab.c	667;"	d	file:
YYTERROR	src/utils/ncgen/ncgentab.c	749;"	d	file:
YYTEXT_POINTER	src/lib/ncconfig.h	283;"	d
YYTOKENTYPE	src/utils/ncgen/ncgentab.c	169;"	d	file:
YYTOKENTYPE	src/utils/ncgen/ncgentab.h	38;"	d
YYTOKEN_TABLE	src/utils/ncgen/ncgentab.c	163;"	d	file:
YYTRANSLATE	src/utils/ncgen/ncgentab.c	462;"	d	file:
YYUNDEFTOK	src/utils/ncgen/ncgentab.c	459;"	d	file:
YYUSE	src/utils/ncgen/ncgentab.c	295;"	d	file:
YYUSE	src/utils/ncgen/ncgentab.c	297;"	d	file:
YY_	src/utils/ncgen/ncgentab.c	285;"	d	file:
YY_	src/utils/ncgen/ncgentab.c	289;"	d	file:
YY_AT_BOL	src/utils/ncgen/ncgenyy.c	358;"	d	file:
YY_BREAK	src/utils/ncgen/ncgenyy.c	689;"	d	file:
YY_BREAK	src/utils/ncgen/ncgenyy.c	867;"	d	file:
YY_BUFFER_EOF_PENDING	src/utils/ncgen/ncgenyy.c	274;"	d	file:
YY_BUFFER_NEW	src/utils/ncgen/ncgenyy.c	262;"	d	file:
YY_BUFFER_NORMAL	src/utils/ncgen/ncgenyy.c	263;"	d	file:
YY_BUFFER_STATE	src/utils/ncgen/ncgenyy.c	/^typedef struct yy_buffer_state *YY_BUFFER_STATE;$/;"	t	typeref:struct:yy_buffer_state	file:
YY_BUF_SIZE	src/utils/ncgen/ncgenyy.c	168;"	d	file:
YY_BUF_SIZE	src/utils/ncgen/ncgenyy.c	170;"	d	file:
YY_CHAR	src/utils/ncgen/ncgenyy.c	/^typedef unsigned char YY_CHAR;$/;"	t	file:
YY_CURRENT_BUFFER	src/utils/ncgen/ncgenyy.c	290;"	d	file:
YY_CURRENT_BUFFER_LVALUE	src/utils/ncgen/ncgenyy.c	297;"	d	file:
YY_DECL	src/utils/ncgen/ncgenyy.c	855;"	d	file:
YY_DECL_IS_OURS	src/utils/ncgen/ncgenyy.c	851;"	d	file:
YY_DO_BEFORE_ACTION	src/utils/ncgen/ncgenyy.c	381;"	d	file:
YY_END_OF_BUFFER	src/utils/ncgen/ncgenyy.c	389;"	d	file:
YY_END_OF_BUFFER_CHAR	src/utils/ncgen/ncgenyy.c	159;"	d	file:
YY_EXIT_FAILURE	src/utils/ncgen/ncgenyy.c	2051;"	d	file:
YY_EXTRA_TYPE	src/utils/ncgen/ncgenyy.c	707;"	d	file:
YY_FATAL_ERROR	src/utils/ncgen/ncgenyy.c	842;"	d	file:
YY_FLEX_MAJOR_VERSION	src/utils/ncgen/ncgenyy.c	28;"	d	file:
YY_FLEX_MINOR_VERSION	src/utils/ncgen/ncgenyy.c	29;"	d	file:
YY_FLEX_SUBMINOR_VERSION	src/utils/ncgen/ncgenyy.c	30;"	d	file:
YY_FLUSH_BUFFER	src/utils/ncgen/ncgenyy.c	326;"	d	file:
YY_INPUT	src/utils/ncgen/ncgenyy.c	795;"	d	file:
YY_INT_ALIGNED	src/utils/ncgen/ncgenyy.c	4;"	d	file:
YY_LESS_LINENO	src/utils/ncgen/ncgenyy.c	191;"	d	file:
YY_LOCATION_PRINT	src/utils/ncgen/ncgentab.c	785;"	d	file:
YY_LOCATION_PRINT	src/utils/ncgen/ncgentab.c	790;"	d	file:
YY_MORE_ADJ	src/utils/ncgen/ncgenyy.c	663;"	d	file:
YY_NEW_FILE	src/utils/ncgen/ncgenyy.c	157;"	d	file:
YY_NULL	src/utils/ncgen/ncgenyy.c	131;"	d	file:
YY_NUM_RULES	src/utils/ncgen/ncgenyy.c	388;"	d	file:
YY_READ_BUF_SIZE	src/utils/ncgen/ncgenyy.c	777;"	d	file:
YY_READ_BUF_SIZE	src/utils/ncgen/ncgenyy.c	779;"	d	file:
YY_REDUCE_PRINT	src/utils/ncgen/ncgentab.c	950;"	d	file:
YY_REDUCE_PRINT	src/utils/ncgen/ncgentab.c	963;"	d	file:
YY_RESTORE_YY_MORE_OFFSET	src/utils/ncgen/ncgenyy.c	664;"	d	file:
YY_RULE_SETUP	src/utils/ncgen/ncgenyy.c	870;"	d	file:
YY_SC_TO_UI	src/utils/ncgen/ncgenyy.c	138;"	d	file:
YY_STACK_PRINT	src/utils/ncgen/ncgentab.c	912;"	d	file:
YY_STACK_PRINT	src/utils/ncgen/ncgentab.c	962;"	d	file:
YY_START	src/utils/ncgen/ncgenyy.c	150;"	d	file:
YY_START_STACK_INCR	src/utils/ncgen/ncgenyy.c	837;"	d	file:
YY_STATE_BUF_SIZE	src/utils/ncgen/ncgenyy.c	176;"	d	file:
YY_STATE_EOF	src/utils/ncgen/ncgenyy.c	154;"	d	file:
YY_STRUCT_YY_BUFFER_STATE	src/utils/ncgen/ncgenyy.c	215;"	d	file:
YY_SYMBOL_PRINT	src/utils/ncgen/ncgentab.c	817;"	d	file:
YY_SYMBOL_PRINT	src/utils/ncgen/ncgentab.c	961;"	d	file:
YY_TYPEDEF_YY_BUFFER_STATE	src/utils/ncgen/ncgenyy.c	179;"	d	file:
YY_TYPEDEF_YY_SIZE_T	src/utils/ncgen/ncgenyy.c	210;"	d	file:
YY_USER_ACTION	src/utils/ncgen/ncgenyy.c	862;"	d	file:
YY_USE_CONST	src/utils/ncgen/ncgenyy.c	112;"	d	file:
YY_USE_CONST	src/utils/ncgen/ncgenyy.c	119;"	d	file:
_FBITS_H_	src/lib/fbits.h	8;"	d
_FILE_OFFSET_BITS	src/lib/ncconfig.h	286;"	d
_FillValue	src/lib/pnetcdf.h	90;"	d
_H_MACRO	src/lib/macro.h	7;"	d
_NCIO_H_	src/lib/ncio.h	8;"	d
_NCX_H_	src/lib/ncx.h	8;"	d
_NC_H_	src/lib/nc.h	7;"	d
_PNETCDF_	src/lib/pnetcdf.h	36;"	d
_RNDDOWN	src/lib/rnd.h	11;"	d
_RNDUP	src/lib/rnd.h	9;"	d
_STDLIB_H	src/utils/ncgen/ncgentab.c	339;"	d	file:
_STDLIB_H	src/utils/ncgen/ncgentab.c	367;"	d	file:
_UTILS_H	test/common/testutils.h	2;"	d
__STDC_LIMIT_MACROS	src/utils/ncgen/ncgenyy.c	58;"	d	file:
__anon10::attrs	src/lib/nc.h	/^	NC_attrarray attrs;$/;"	m	struct:__anon10	access:public
__anon10::begin	src/lib/nc.h	/^	MPI_Offset begin;$/;"	m	struct:__anon10	access:public
__anon10::dimids	src/lib/nc.h	/^	int *dimids;	\/* assoc->value *\/$/;"	m	struct:__anon10	access:public
__anon10::dsizes	src/lib/nc.h	/^	MPI_Offset *dsizes; \/* compiled info: the right to left product of shape *\/$/;"	m	struct:__anon10	access:public
__anon10::len	src/lib/nc.h	/^	MPI_Offset len;		\/* the total length originally allocated *\/$/;"	m	struct:__anon10	access:public
__anon10::name	src/lib/nc.h	/^	NC_string *name;$/;"	m	struct:__anon10	access:public
__anon10::ndims	src/lib/nc.h	/^	size_t ndims;	\/* assoc->count *\/$/;"	m	struct:__anon10	access:public
__anon10::shape	src/lib/nc.h	/^	MPI_Offset *shape; \/* compiled info: dim->size of each dim *\/$/;"	m	struct:__anon10	access:public
__anon10::type	src/lib/nc.h	/^	nc_type type;		\/* the discriminant *\/$/;"	m	struct:__anon10	access:public
__anon10::xsz	src/lib/nc.h	/^	MPI_Offset xsz;		\/* xszof 1 element *\/$/;"	m	struct:__anon10	access:public
__anon1::infname	test/common/testutils.h	/^	char infname[PATH_MAX];$/;"	m	struct:__anon1	access:public
__anon1::outfname	test/common/testutils.h	/^	char outfname[PATH_MAX];$/;"	m	struct:__anon1	access:public
__anon7::cp	src/lib/nc.h	/^	char *cp;$/;"	m	struct:__anon7	access:public
__anon7::nchars	src/lib/nc.h	/^	MPI_Offset nchars;$/;"	m	struct:__anon7	access:public
__anon8::name	src/lib/nc.h	/^	NC_string *name;$/;"	m	struct:__anon8	access:public
__anon8::size	src/lib/nc.h	/^	MPI_Offset size;$/;"	m	struct:__anon8	access:public
__anon9::name	src/lib/nc.h	/^	NC_string *name;$/;"	m	struct:__anon9	access:public
__anon9::nelems	src/lib/nc.h	/^	MPI_Offset nelems;	\/* number of defined variables *\/$/;"	m	struct:__anon9	access:public
__anon9::type	src/lib/nc.h	/^	nc_type type;		\/* the discriminant *\/$/;"	m	struct:__anon9	access:public
__anon9::xsz	src/lib/nc.h	/^	MPI_Offset xsz;		\/* amount of space at xvalue *\/$/;"	m	struct:__anon9	access:public
__anon9::xvalue	src/lib/nc.h	/^	void *xvalue;		\/* the actual data, in external representation *\/$/;"	m	struct:__anon9	access:public
absval	src/utils/ncdump/vardata.c	203;"	d	file:
alloca	src/utils/ncgen/ncgentab.c	332;"	d	file:
annotate	src/utils/ncdump/vardata.c	/^annotate($/;"	f	file:	signature:( const struct ncvar *vp, const struct fspec* fsp, const MPI_Offset *cor, long iel )
annotate	src/utils/ncdump/vardata.c	/^static void annotate(const struct ncvar* vp, const struct fspec* fsp,$/;"	p	file:	signature:(const struct ncvar* vp, const struct fspec* fsp, const MPI_Offset* cor, long iel)
att_len	test/nc_test/nc_test.c	/^size_t att_len[NVARS][MAX_NATTS];$/;"	v
att_len	test/nc_test/tests.h	/^extern size_t att_len[NVARS][MAX_NATTS];$/;"	x
att_name	test/nc_test/nc_test.c	/^char att_name[NVARS][MAX_NATTS][2];$/;"	v
att_name	test/nc_test/tests.h	/^extern char att_name[NVARS][MAX_NATTS][2];$/;"	x
att_space	src/utils/ncgen/ncgentab.c	/^static void *att_space;		\/* pointer to block for attribute values *\/$/;"	v	file:
att_type	test/nc_test/nc_test.c	/^ncmpi_type att_type[NVARS][NGATTS];$/;"	v
att_type	test/nc_test/tests.h	/^extern ncmpi_type att_type[NVARS][NGATTS];$/;"	x
attrs	src/lib/nc.h	/^	NC_attrarray attrs;$/;"	m	struct:NC	access:public
attrs	src/lib/nc.h	/^	NC_attrarray attrs;$/;"	m	struct:__anon10	access:public
atts	src/utils/ncgen/init.c	/^struct atts *atts;		\/* table of variable and global attributes *\/$/;"	v	typeref:struct:atts
atts	src/utils/ncgen/ncgen.h	/^extern struct atts {$/;"	s
atts	src/utils/ncgen/ncgen.h	/^} *atts;			\/* table of variable and global attributes *\/$/;"	x
atts::len	src/utils/ncgen/ncgen.h	/^    size_t len;$/;"	m	struct:atts	access:public
atts::lname	src/utils/ncgen/ncgen.h	/^    char *lname;		\/* with no "-" characters, for C and Fortran *\/$/;"	m	struct:atts	access:public
atts::name	src/utils/ncgen/ncgen.h	/^    char *name;$/;"	m	struct:atts	access:public
atts::type	src/utils/ncgen/ncgen.h	/^    nc_type type;$/;"	m	struct:atts	access:public
atts::val	src/utils/ncgen/ncgen.h	/^    void *val;$/;"	m	struct:atts	access:public
atts::var	src/utils/ncgen/ncgen.h	/^    int var;			\/* number of variable for this attribute *\/$/;"	m	struct:atts	access:public
atype_code	src/utils/ncgen/ncgentab.c	/^static nc_type atype_code;	\/* holds derived type for attributes *\/$/;"	v	file:
base	src/lib/nc.h	/^  void *base;     	\/* beginning of read\/write buffer *\/$/;"	m	struct:bufferinfo	access:public
begin	src/lib/nc.h	/^	MPI_Offset begin;$/;"	m	struct:__anon10	access:public
begin_rec	src/lib/nc.h	/^	MPI_Offset begin_rec; \/* position of the first 'record' *\/$/;"	m	struct:NC	access:public
begin_var	src/lib/nc.h	/^	MPI_Offset begin_var; \/* position of the first (non-record) var *\/$/;"	m	struct:NC	access:public
boolean	src/utils/ncdump/ncdump.h	/^typedef int boolean;$/;"	t
brief_data_cmnts	src/utils/ncdump/ncdump.h	/^    boolean brief_data_cmnts;	\/* if true, put \/\/ comments in data section$/;"	m	struct:fspec	access:public
buf	src/lib/nc.h	/^    void          *buf;$/;"	m	struct:NC_req	access:public
bufcount	src/lib/nc.h	/^    MPI_Offset     bufcount;$/;"	m	struct:NC_req	access:public
bufferinfo	src/lib/nc.h	/^typedef struct bufferinfo {$/;"	s
bufferinfo	src/lib/nc.h	/^} bufferinfo;  $/;"	t	typeref:struct:bufferinfo
bufferinfo::base	src/lib/nc.h	/^  void *base;     	\/* beginning of read\/write buffer *\/$/;"	m	struct:bufferinfo	access:public
bufferinfo::index	src/lib/nc.h	/^  MPI_Offset index;		\/* index of current position in buffer *\/$/;"	m	struct:bufferinfo	access:public
bufferinfo::nciop	src/lib/nc.h	/^  ncio *nciop;		$/;"	m	struct:bufferinfo	access:public
bufferinfo::offset	src/lib/nc.h	/^  MPI_Offset offset;	\/* current read\/write offset in the file *\/$/;"	m	struct:bufferinfo	access:public
bufferinfo::pos	src/lib/nc.h	/^  void *pos;      	\/* current position in buffer *\/$/;"	m	struct:bufferinfo	access:public
bufferinfo::size	src/lib/nc.h	/^  MPI_Offset size;		\/* size of the buffer *\/$/;"	m	struct:bufferinfo	access:public
bufferinfo::version	src/lib/nc.h	/^  int version;		\/* either 1 for normal netcdf or $/;"	m	struct:bufferinfo	access:public
byte_val	src/utils/ncgen/ncgentab.c	/^static signed char byte_val;	\/* last byte value read *\/$/;"	v	file:
byte_valp	src/utils/ncgen/ncgentab.c	/^static signed char *byte_valp;$/;"	v	file:
c_flag	src/utils/ncgen/genlib.c	/^extern int c_flag;$/;"	x
c_flag	src/utils/ncgen/init.c	/^extern int c_flag;$/;"	x
c_flag	src/utils/ncgen/load.c	/^extern int c_flag;$/;"	x
c_flag	src/utils/ncgen/main.c	/^int c_flag;$/;"	v
cbuf	src/lib/nc.h	/^    void          *cbuf;$/;"	m	struct:NC_req	access:public
cdlname	src/utils/ncgen/genlib.h	/^extern const char *cdlname;	\/* for error messages *\/$/;"	x
cdlname	src/utils/ncgen/main.c	/^const char *cdlname;$/;"	v
char2type	test/nc_test/util.c	/^char2type(char letter) {$/;"	f	file:	signature:(char letter)
char_val	src/utils/ncgen/ncgentab.c	/^static char char_val;		\/* last char value read *\/$/;"	v	file:
char_valp	src/utils/ncgen/ncgentab.c	/^static char *char_valp;		\/* pointers used to accumulate data values *\/$/;"	v	file:
charv	src/utils/ncgen/generic.h	/^    char charv;$/;"	m	union:generic	access:public
check_atts	test/nc_test/tests.h	/^void check_atts(int  ncid);$/;"	p	signature:(int ncid)
check_atts	test/nc_test/util.c	/^check_atts(int  ncid) $/;"	f	signature:(int ncid)
check_dims	test/nc_test/tests.h	/^void check_dims(int  ncid);$/;"	p	signature:(int ncid)
check_dims	test/nc_test/util.c	/^check_dims(int  ncid)$/;"	f	signature:(int ncid)
check_err	src/utils/ncgen/genlib.c	/^check_err(int stat) {$/;"	f	signature:(int stat)
check_err	src/utils/ncgen/genlib.h	/^extern void	check_err ( int status );$/;"	p	signature:( int status )
check_err	test/C/pres_temp_4D_wr.c	/^check_err(const int stat, const int line, const char *file) {$/;"	f	signature:(const int stat, const int line, const char *file)
check_err	test/largefile/large_files.c	/^check_err(const int stat, const int line, const char *file) {$/;"	f	signature:(const int stat, const int line, const char *file)
check_file	test/nc_test/tests.h	/^void check_file(char *filename);$/;"	p	signature:(char *filename)
check_file	test/nc_test/util.c	/^check_file(char *filename) $/;"	f	signature:(char *filename)
check_recsize_too_big	src/lib/filetype.c	/^check_recsize_too_big(NC *ncp)$/;"	f	file:	signature:(NC *ncp)
check_recsize_too_big	src/lib/filetype.c	/^static int check_recsize_too_big(NC *ncp);$/;"	p	file:	signature:(NC *ncp)
check_vars	test/nc_test/tests.h	/^void check_vars(int  ncid);$/;"	p	signature:(int ncid)
check_vars	test/nc_test/util.c	/^check_vars(int  ncid)$/;"	f	signature:(int ncid)
chunk	src/lib/nc.h	/^	MPI_Offset chunk;	\/* largest extent this layer will request from ncio->get() *\/$/;"	m	struct:NC	access:public
cl_c	src/utils/ncgen/genlib.c	/^cl_c(void)$/;"	f	file:	signature:(void)
cl_fortran	src/utils/ncgen/genlib.c	/^cl_fortran(void)$/;"	f	file:	signature:(void)
cl_netcdf	src/utils/ncgen/genlib.c	/^cl_netcdf(void)$/;"	f	file:	signature:(void)
clearout	src/utils/ncgen/genlib.h	/^extern void clearout(void);$/;"	p	signature:(void)
clearout	src/utils/ncgen/ncgentab.c	/^clearout(void)	\/* reset symbol table to empty *\/$/;"	f	signature:(void)
cline	src/utils/ncgen/genlib.c	/^cline($/;"	f	signature:( const char *stmnt)
cline	src/utils/ncgen/genlib.h	/^extern void cline ( const char* stmnt );$/;"	p	signature:( const char* stmnt )
close_netcdf	src/utils/ncgen/genlib.c	/^close_netcdf(void)$/;"	f	signature:(void)
close_netcdf	src/utils/ncgen/genlib.h	/^extern void close_netcdf ( void );$/;"	p	signature:( void )
cnelems	src/lib/nc.h	/^    MPI_Offset     cnelems;$/;"	m	struct:NC_req	access:public
collective_fh	src/lib/ncio.h	/^	MPI_File collective_fh;$/;"	m	struct:ncio	access:public
comm	src/lib/ncio.h	/^	MPI_Comm comm;$/;"	m	struct:ncio	access:public
comm	test/nc_test/nc_test.c	/^MPI_Comm comm = MPI_COMM_WORLD; \/* mpi communicator for parallel-netcdf *\/$/;"	v
comm	test/nc_test/tests.h	/^extern MPI_Comm comm;$/;"	x
comm_cart	test/fandc/csnap.c	/^MPI_Comm comm_cart;                         \/* Cartesian communicator *\/$/;"	v
compare_vec	test/fandc/csnap.c	/^void compare_vec(double *a, double *b, int ndims, MPI_Offset *sizes, int corr_data) {$/;"	f	signature:(double *a, double *b, int ndims, MPI_Offset *sizes, int corr_data)
compare_vec	test/fandc/csnap.c	/^void compare_vec(double *a, double *b, int ndims, MPI_Offset *sizes, int corr_data);$/;"	p	file:	signature:(double *a, double *b, int ndims, MPI_Offset *sizes, int corr_data)
coord_vals	src/utils/ncdump/ncdump.h	/^    boolean coord_vals;		\/* if true, print header and coordinate$/;"	m	struct:fspec	access:public
count	src/lib/nc.h	/^    MPI_Offset    *count;  \/* [ndims] *\/$/;"	m	struct:NC_req	access:public
cp	src/lib/nc.h	/^	char *cp;$/;"	m	struct:__anon7	access:public
create_file	test/nc_test/nc_test.c	/^static int  create_file;	\/* if 1, create file test.nc *\/$/;"	v	file:
create_subarray_c_order_byte	src/lib/filetype.c	/^create_subarray_c_order_byte(int ndims,$/;"	f	file:	signature:(int ndims, int sizes[], int subsizes[], int starts[], MPI_Datatype *newtype)
create_subarray_c_order_byte	src/lib/filetype.c	/^static int create_subarray_c_order_byte(int ndims, int sizes[], int subsizes[],$/;"	p	file:	signature:(int ndims, int sizes[], int subsizes[], int starts[], MPI_Datatype *newtype)
cstring	src/utils/ncgen/genlib.c	/^cstring($/;"	f	file:	signature:( ncmpi_type type, void *valp, int num)
cstrstr	src/utils/ncgen/genlib.c	/^cstrstr($/;"	f	signature:( const char *valp, size_t len)
cstrstr	src/utils/ncgen/genlib.h	/^extern char* cstrstr ( const char* valp, size_t len );$/;"	p	signature:( const char* valp, size_t len )
d	src/lib/ncx.c	/^	struct	vax_double d;$/;"	m	struct:dbl_limits	typeref:struct:dbl_limits::vax_double	file:	access:public
data_lang	src/utils/ncdump/ncdump.h	/^    Nclang data_lang;		\/* Specifies index conventions used in data$/;"	m	struct:fspec	access:public
data_stmnt	src/utils/ncgen/ncgen.h	/^    char *data_stmnt;		\/* for record variables, to avoid$/;"	m	struct:vars	access:public
datatype	src/lib/nc.h	/^    MPI_Datatype   datatype;$/;"	m	struct:NC_req	access:public
dbl2nc	test/nc_test/tests.h	/^int dbl2nc ( const double d, const ncmpi_type datatype, void *p);$/;"	p	signature:( const double d, const ncmpi_type datatype, void *p)
dbl2nc	test/nc_test/util.c	/^int dbl2nc ( const double d, const ncmpi_type datatype, void *p)$/;"	f	signature:( const double d, const ncmpi_type datatype, void *p)
dbl_limits	src/lib/ncx.c	/^static const struct dbl_limits {$/;"	s	file:
dbl_limits	src/lib/ncx.c	/^} dbl_limits[2] = {$/;"	v	typeref:struct:dbl_limits	file:
dbl_limits::d	src/lib/ncx.c	/^	struct	vax_double d;$/;"	m	struct:dbl_limits	typeref:struct:dbl_limits::vax_double	file:	access:public
dbl_limits::ieee	src/lib/ncx.c	/^	struct	ieee_double ieee;$/;"	m	struct:dbl_limits	typeref:struct:dbl_limits::ieee_double	file:	access:public
decodify	src/utils/ncgen/genlib.c	/^decodify ($/;"	f	signature:( const char *name)
decodify	src/utils/ncgen/genlib.h	/^extern char*	decodify (const char *name);$/;"	p	signature:(const char *name)
def_dims	test/nc_test/tests.h	/^void def_dims(int ncid);$/;"	p	signature:(int ncid)
def_dims	test/nc_test/util.c	/^def_dims(int ncid)$/;"	f	signature:(int ncid)
def_vars	test/nc_test/tests.h	/^void def_vars(int ncid);$/;"	p	signature:(int ncid)
def_vars	test/nc_test/util.c	/^def_vars(int ncid)$/;"	f	signature:(int ncid)
default_create_format	src/lib/nc.c	/^static int default_create_format = NC_FORMAT_CLASSIC;$/;"	v	file:
define_netcdf	src/utils/ncgen/genlib.c	/^define_netcdf($/;"	f	signature:( char *netcdfname)
define_netcdf	src/utils/ncgen/genlib.h	/^extern void define_netcdf(char *netcdfname);$/;"	p	signature:(char *netcdfname)
derror	src/utils/ncgen/genlib.c	/^derror(const char *fmt, ...)$/;"	f	signature:(const char *fmt, ...)
derror	src/utils/ncgen/genlib.h	/^extern void	derror ( const char *fmt, ... )$/;"	p	signature:( const char *fmt, ... )
derror_count	src/utils/ncgen/genlib.c	/^int	derror_count = 0;$/;"	v
derror_count	src/utils/ncgen/ncgentab.c	/^extern int derror_count;	\/* counts errors in netcdf definition *\/$/;"	x
dim_len	test/nc_test/nc_test.c	/^MPI_Offset dim_len[NDIMS];$/;"	v
dim_len	test/nc_test/tests.h	/^extern MPI_Offset dim_len[NDIMS];$/;"	x
dim_name	test/nc_test/nc_test.c	/^char dim_name[NDIMS][3];$/;"	v
dim_name	test/nc_test/tests.h	/^extern char dim_name[NDIMS][3];$/;"	x
dimids	src/lib/nc.h	/^	int *dimids;	\/* assoc->value *\/$/;"	m	struct:__anon10	access:public
dimnum	src/utils/ncgen/init.c	/^int dimnum;			\/* dimension number index for variables *\/$/;"	v
dimnum	src/utils/ncgen/ncgen.h	/^extern int dimnum;		\/* dimension number index for variables *\/$/;"	x
dims	src/lib/nc.h	/^	NC_dimarray dims;$/;"	m	struct:NC	access:public
dims	src/utils/ncdump/ncdump.h	/^    int dims[NC_MAX_VAR_DIMS];$/;"	m	struct:ncvar	access:public
dims	src/utils/ncgen/init.c	/^struct dims *dims;		\/* table of netcdf dimensions *\/$/;"	v	typeref:struct:dims
dims	src/utils/ncgen/ncgen.h	/^    int *dims;			\/* array of dimension ids *\/$/;"	m	struct:vars	access:public
dims	src/utils/ncgen/ncgen.h	/^extern struct dims {$/;"	s
dims	src/utils/ncgen/ncgen.h	/^} *dims;			\/* table of dimensions *\/$/;"	x
dims::lname	src/utils/ncgen/ncgen.h	/^    char *lname;		\/* with no "-" characters, for C and Fortran *\/$/;"	m	struct:dims	access:public
dims::name	src/utils/ncgen/ncgen.h	/^    char *name;$/;"	m	struct:dims	access:public
dims::size	src/utils/ncgen/ncgen.h	/^    size_t size;$/;"	m	struct:dims	access:public
dnum	src/utils/ncgen/ncgentab.c	/^	int             dnum;	        \/* handle as a dimension *\/$/;"	m	struct:Symbol	file:	access:public
do_ncdump	src/utils/ncdump/ncdump.c	/^do_ncdump(const char *path, struct fspec* specp)$/;"	f	file:	signature:(const char *path, struct fspec* specp)
do_ncdump	src/utils/ncdump/ncdump.c	/^static void do_ncdump(const char* path, struct fspec* specp);$/;"	p	file:	signature:(const char* path, struct fspec* specp)
double_att_fmt	src/utils/ncdump/dumplib.c	/^char double_att_fmt[] = "%#.NNg";$/;"	v
double_att_fmt	src/utils/ncdump/dumplib.h	/^extern char double_att_fmt[];$/;"	x
double_eps	src/utils/ncdump/vardata.c	/^static double double_eps;$/;"	v	file:
double_epsilon	src/utils/ncdump/vardata.c	/^double_epsilon(void)$/;"	f	file:	signature:(void)
double_epsilon	src/utils/ncdump/vardata.c	/^static double double_epsilon(void);$/;"	p	file:	signature:(void)
double_max	test/nc_test/tests.h	115;"	d
double_min	test/nc_test/tests.h	106;"	d
double_precision_specified	src/utils/ncdump/dumplib.c	/^int double_precision_specified = 0; \/* -p option specified double precision *\/$/;"	v
double_precision_specified	src/utils/ncdump/dumplib.h	/^extern int double_precision_specified; \/* -p option specified double precision *\/$/;"	x
double_val	src/utils/ncgen/ncgentab.c	/^static double double_val;	\/* last double value read *\/$/;"	v	file:
double_valp	src/utils/ncgen/ncgentab.c	/^static double *double_valp;$/;"	v	file:
double_var_fmt	src/utils/ncdump/dumplib.c	/^char double_var_fmt[] = "%.NNg";$/;"	v
double_var_fmt	src/utils/ncdump/dumplib.h	/^extern char double_var_fmt[];$/;"	x
doublev	src/utils/ncgen/generic.h	/^    double doublev;$/;"	m	union:generic	access:public
dset_name	test/testcases/redef1.cpp	/^char dset_name[] = "redef1.nc";$/;"	v
dsizes	src/lib/nc.h	/^	MPI_Offset *dsizes; \/* compiled info: the right to left product of shape *\/$/;"	m	struct:__anon10	access:public
dup_NC_attr	src/lib/attr.c	/^dup_NC_attr(const NC_attr *rattrp)$/;"	f	file:	signature:(const NC_attr *rattrp)
dup_NC_dim	src/lib/dim.c	/^dup_NC_dim(const NC_dim *dimp)$/;"	f	file:	signature:(const NC_dim *dimp)
dup_NC_var	src/lib/var.c	/^dup_NC_var(const NC_var *rvarp)$/;"	f	file:	signature:(const NC_var *rvarp)
ecalloc	src/utils/ncgen/genlib.c	/^ecalloc (			\/* check return from calloc *\/$/;"	f	signature:( size_t size)
ecalloc	src/utils/ncgen/genlib.h	/^extern void	*ecalloc ( size_t size );$/;"	p	signature:( size_t size )
elem_NC_attrarray	src/lib/attr.c	/^elem_NC_attrarray(const NC_attrarray *ncap, MPI_Offset elem)$/;"	f	file:	signature:(const NC_attrarray *ncap, MPI_Offset elem)
elem_NC_vararray	src/lib/var.c	/^elem_NC_vararray(const NC_vararray *ncap, MPI_Offset elem)$/;"	f	file:	signature:(const NC_vararray *ncap, MPI_Offset elem)
emalloc	src/utils/ncgen/genlib.c	/^emalloc (			\/* check return from malloc *\/$/;"	f	signature:( size_t size)
emalloc	src/utils/ncgen/genlib.h	/^extern void	*emalloc ( size_t size );$/;"	p	signature:( size_t size )
equal	test/nc_test/tests.h	/^int equal(const double x, const double y, ncmpi_type extType, nct_itype itype);$/;"	p	signature:(const double x, const double y, ncmpi_type extType, nct_itype itype)
equal	test/nc_test/util.c	/^equal($/;"	f	signature:( const double x, const double y, ncmpi_type extType, nct_itype itype)
erealloc	src/utils/ncgen/genlib.c	/^erealloc (		\/* check return from realloc *\/$/;"	f	signature:( void *ptr, size_t size)
erealloc	src/utils/ncgen/genlib.h	/^extern void	*erealloc ( void *ptr, size_t size );$/;"	p	signature:( void *ptr, size_t size )
error	src/utils/ncdump/dumplib.c	/^error(const char *fmt, ...)$/;"	f	signature:(const char *fmt, ...)
error	src/utils/ncdump/dumplib.h	/^extern void	error ( const char *fmt, ... );$/;"	p	signature:( const char *fmt, ... )
error	test/nc_test/error.c	/^error(const char *fmt, ...)$/;"	f	signature:(const char *fmt, ...)
error	test/nc_test/error.c	/^void error(const char *fmt, ...);$/;"	p	file:	signature:(const char *fmt, ...)
error	test/nc_test/error.h	/^extern void	error (const char *fmt, ...)$/;"	p	signature:(const char *fmt, ...)
errstr	src/utils/ncgen/ncgenyy.c	/^char errstr[100];		\/* for short error messages *\/$/;"	v
exp	src/lib/ncx.c	/^	unsigned int	exp       : 8;$/;"	m	struct:vax_double	file:	access:public
exp	src/lib/ncx.c	/^	unsigned int	exp       : 8;$/;"	m	struct:vax_single	file:	access:public
exp_hi	src/lib/ncx.c	/^	unsigned int	exp_hi       : 7;$/;"	m	struct:ieee_single	file:	access:public
exp_hi	src/lib/ncx.c	/^	unsigned int	exp_hi   : 7;$/;"	m	struct:ieee_double	file:	access:public
exp_lo	src/lib/ncx.c	/^	unsigned int	exp_lo       : 1;$/;"	m	struct:ieee_single	file:	access:public
exp_lo	src/lib/ncx.c	/^	unsigned int	exp_lo   : 4;$/;"	m	struct:ieee_double	file:	access:public
expand_escapes	src/utils/ncgen/escapes.c	/^expand_escapes($/;"	f	signature:( char *termstring, char *yytext, int yyleng)
expand_escapes	src/utils/ncgen/genlib.h	/^extern void expand_escapes ( char* termstring, char* yytext, int yyleng );$/;"	p	signature:( char* termstring, char* yytext, int yyleng )
expe2d	src/utils/ncgen/genlib.c	/^expe2d($/;"	f	signature:( char *cp)
expe2d	src/utils/ncgen/genlib.h	/^extern void	expe2d ( char *ptr );$/;"	p	signature:( char *ptr )
extra_flags	test/nc_test/nc_test.c	/^int extra_flags = 0; \/* if using CDF-2 format, will be set to NC_64BIT_OFFSET *\/$/;"	v
extra_flags	test/nc_test/tests.h	/^extern int  extra_flags;	\/* if using CDF-2, need extra flags for create*\/$/;"	x
fClr	src/lib/fbits.h	14;"	d
fIsSet	src/lib/fbits.h	15;"	d
fMask	src/lib/fbits.h	16;"	d
fSet	src/lib/fbits.h	13;"	d
f_fill_name	src/utils/ncgen/genlib.c	/^f_fill_name($/;"	f	file:	signature:( ncmpi_type type )
f_var_init	src/utils/ncgen/load.c	/^f_var_init($/;"	f	file:	signature:( int varnum, void *rec_start )
false	src/utils/ncdump/ncdump.h	/^enum {false=0, true=1};$/;"	e	enum:__anon3
fd	src/lib/ncio.h	/^	NCIO_CONST int fd;$/;"	m	struct:ncio	access:public
filename	src/lib/ncio.h	/^	char* filename;$/;"	m	struct:ncio	access:public
filename	test/test_dtype/test_darray.c	/^char *filename = TEST_DEFAULT_FILE;$/;"	v
filename	test/test_dtype/test_nonblocking.c	/^char *filename = TEST_DEFAULT_FILE;$/;"	v
filename	test/test_dtype/test_subarray.c	/^char *filename = TEST_DEFAULT_FILE;$/;"	v
fill_value	src/utils/ncgen/ncgen.h	/^    union generic fill_value;	\/* set to value of _FillValue attribute *\/$/;"	m	struct:vars	typeref:union:vars::generic	access:public
fillmode	test/fandc/csnap.c	/^const int fillmode = NC_NOFILL;             \/* NC_FILL or NC_NOFILL; actually$/;"	v
fillval	src/utils/ncdump/ncdump.h	/^    double fillval;$/;"	m	struct:ncvar	access:public
find_locnx	test/fandc/csnap.c	/^void find_locnx(MPI_Offset nx, int mype, int totpes, MPI_Offset *locnx, MPI_Offset *xbegin) {$/;"	f	signature:(MPI_Offset nx, int mype, int totpes, MPI_Offset *locnx, MPI_Offset *xbegin)
find_locnx	test/fandc/csnap.c	/^void find_locnx(MPI_Offset nx, int mype, int totpes, MPI_Offset *locnx, MPI_Offset *xbegin);$/;"	p	file:	signature:(MPI_Offset nx, int mype, int totpes, MPI_Offset *locnx, MPI_Offset *xbegin)
flags	src/lib/nc.h	/^	int flags;$/;"	m	struct:NC	access:public
flex_int16_t	src/utils/ncgen/ncgenyy.c	/^typedef int16_t flex_int16_t;$/;"	t	file:
flex_int16_t	src/utils/ncgen/ncgenyy.c	/^typedef short int flex_int16_t;$/;"	t	file:
flex_int32_t	src/utils/ncgen/ncgenyy.c	/^typedef int flex_int32_t;$/;"	t	file:
flex_int32_t	src/utils/ncgen/ncgenyy.c	/^typedef int32_t flex_int32_t;$/;"	t	file:
flex_int8_t	src/utils/ncgen/ncgenyy.c	/^typedef int8_t flex_int8_t;$/;"	t	file:
flex_int8_t	src/utils/ncgen/ncgenyy.c	/^typedef signed char flex_int8_t;$/;"	t	file:
flex_uint16_t	src/utils/ncgen/ncgenyy.c	/^typedef uint16_t flex_uint16_t;$/;"	t	file:
flex_uint16_t	src/utils/ncgen/ncgenyy.c	/^typedef unsigned short int flex_uint16_t;$/;"	t	file:
flex_uint32_t	src/utils/ncgen/ncgenyy.c	/^typedef uint32_t flex_uint32_t;$/;"	t	file:
flex_uint32_t	src/utils/ncgen/ncgenyy.c	/^typedef unsigned int flex_uint32_t;$/;"	t	file:
flex_uint8_t	src/utils/ncgen/ncgenyy.c	/^typedef uint8_t flex_uint8_t;$/;"	t	file:
flex_uint8_t	src/utils/ncgen/ncgenyy.c	/^typedef unsigned char flex_uint8_t; $/;"	t	file:
fline	src/utils/ncgen/genlib.c	/^fline($/;"	f	signature:( const char *stmnt)
fline	src/utils/ncgen/genlib.h	/^extern void fline ( const char* stmnt );$/;"	p	signature:( const char* stmnt )
float_att_fmt	src/utils/ncdump/dumplib.c	/^char float_att_fmt[] = "%#.NNgf";$/;"	v
float_att_fmt	src/utils/ncdump/dumplib.h	/^extern char float_att_fmt[];$/;"	x
float_eps	src/utils/ncdump/vardata.c	/^static float float_eps;$/;"	v	file:
float_epsilon	src/utils/ncdump/vardata.c	/^float_epsilon(void)$/;"	f	file:	signature:(void)
float_epsilon	src/utils/ncdump/vardata.c	/^static float float_epsilon(void);$/;"	p	file:	signature:(void)
float_max	test/nc_test/tests.h	114;"	d
float_min	test/nc_test/tests.h	105;"	d
float_precision_specified	src/utils/ncdump/dumplib.c	/^int float_precision_specified = 0; \/* -p option specified float precision *\/$/;"	v
float_precision_specified	src/utils/ncdump/dumplib.h	/^extern int float_precision_specified; \/* -p option specified float precision *\/$/;"	x
float_val	src/utils/ncgen/ncgentab.c	/^static float float_val;		\/* last float value read *\/$/;"	v	file:
float_valp	src/utils/ncgen/ncgentab.c	/^static float *float_valp;$/;"	v	file:
float_var_fmt	src/utils/ncdump/dumplib.c	/^char float_var_fmt[] = "%.NNg";$/;"	v
float_var_fmt	src/utils/ncdump/dumplib.h	/^extern char float_var_fmt[];$/;"	x
floatv	src/utils/ncgen/generic.h	/^    float floatv;$/;"	m	union:generic	access:public
fortran_flag	src/utils/ncgen/genlib.c	/^extern int fortran_flag;$/;"	x
fortran_flag	src/utils/ncgen/init.c	/^extern int fortran_flag;$/;"	x
fortran_flag	src/utils/ncgen/load.c	/^extern int fortran_flag;$/;"	x
fortran_flag	src/utils/ncgen/main.c	/^int fortran_flag;$/;"	v
fpr	src/utils/ncgen/load.c	20;"	d	file:
free	src/lib/ncio.h	/^	ncmpiio_freefunc *NCIO_CONST free; \/* Implementation private *\/$/;"	m	struct:ncio	access:public
free	src/utils/ncgen/ncgentab.c	/^void free (void *); \/* INFRINGES ON USER NAME SPACE *\/$/;"	p	file:	signature:(void *)
fromMixedBase	test/nc_test/tests.h	/^fromMixedBase($/;"	p	signature:( size_t length, MPI_Offset number[], MPI_Offset base[])
fromMixedBase	test/nc_test/util.c	/^fromMixedBase($/;"	f	signature:( size_t length, MPI_Offset number[], MPI_Offset base[])
fspec	src/utils/ncdump/ncdump.h	/^struct fspec {			\/* specification for how to format dump *\/$/;"	s
fspec::brief_data_cmnts	src/utils/ncdump/ncdump.h	/^    boolean brief_data_cmnts;	\/* if true, put \/\/ comments in data section$/;"	m	struct:fspec	access:public
fspec::coord_vals	src/utils/ncdump/ncdump.h	/^    boolean coord_vals;		\/* if true, print header and coordinate$/;"	m	struct:fspec	access:public
fspec::data_lang	src/utils/ncdump/ncdump.h	/^    Nclang data_lang;		\/* Specifies index conventions used in data$/;"	m	struct:fspec	access:public
fspec::full_data_cmnts	src/utils/ncdump/ncdump.h	/^    boolean full_data_cmnts;	\/* if true, put \/\/ comments in data section$/;"	m	struct:fspec	access:public
fspec::header_only	src/utils/ncdump/ncdump.h	/^    boolean header_only;	\/* if true, don't print any variable data *\/$/;"	m	struct:fspec	access:public
fspec::lvars	src/utils/ncdump/ncdump.h	/^    char** lvars;		\/* list of variable names specified with -v$/;"	m	struct:fspec	access:public
fspec::name	src/utils/ncdump/ncdump.h	/^    char *name;			\/* name specified with -n or derived from$/;"	m	struct:fspec	access:public
fspec::nlvars	src/utils/ncdump/ncdump.h	/^    int nlvars;			\/* Number of variables specified with -v$/;"	m	struct:fspec	access:public
fspec::version	src/utils/ncdump/ncdump.h	/^    boolean version;	       \/* if true, print version*\/$/;"	m	struct:fspec	access:public
fstrcat	src/utils/ncgen/load.c	/^fstrcat($/;"	f	file:	signature:( char *s, const char *t, size_t *slenp )
fstring	src/utils/ncgen/genlib.c	/^fstring($/;"	f	signature:( ncmpi_type type, void *valp, int num)
fstring	src/utils/ncgen/genlib.h	/^extern char* fstring ( nc_type  type, void* valp, int num );$/;"	p	signature:( nc_type type, void* valp, int num )
fstrstr	src/utils/ncgen/genlib.c	/^fstrstr($/;"	f	signature:( const char *str, size_t ilen)
fstrstr	src/utils/ncgen/genlib.h	/^extern char* fstrstr ( const char* str, size_t ilen );$/;"	p	signature:( const char* str, size_t ilen )
ftypename	src/utils/ncgen/genlib.c	/^ftypename($/;"	f	file:	signature:( ncmpi_type type)
full_data_cmnts	src/utils/ncdump/ncdump.h	/^    boolean full_data_cmnts;	\/* if true, put \/\/ comments in data section$/;"	m	struct:fspec	access:public
gatt_len	test/nc_test/nc_test.c	/^size_t gatt_len[NGATTS];$/;"	v
gatt_len	test/nc_test/tests.h	/^extern size_t gatt_len[NGATTS];$/;"	x
gatt_name	test/nc_test/nc_test.c	/^char gatt_name[NGATTS][3];$/;"	v
gatt_name	test/nc_test/tests.h	/^extern char gatt_name[NGATTS][3];$/;"	x
gatt_type	test/nc_test/nc_test.c	/^ncmpi_type gatt_type[NGATTS];$/;"	v
gatt_type	test/nc_test/tests.h	/^extern ncmpi_type gatt_type[NGATTS];$/;"	x
gen_c	src/utils/ncgen/genlib.c	/^gen_c($/;"	f	file:	signature:( const char *filename)
gen_fortran	src/utils/ncgen/genlib.c	/^gen_fortran($/;"	f	file:	signature:( const char *filename)
gen_load_c	src/utils/ncgen/load.c	/^gen_load_c($/;"	f	file:	signature:( void *rec_start )
gen_load_fortran	src/utils/ncgen/load.c	/^gen_load_fortran($/;"	f	file:	signature:( void *rec_start )
gen_netcdf	src/utils/ncgen/genlib.c	/^gen_netcdf($/;"	f	file:	signature:( char *filename)
generic	src/utils/ncgen/generic.h	/^union generic {			\/* used to hold any kind of fill_value *\/$/;"	u
generic::charv	src/utils/ncgen/generic.h	/^    char charv;$/;"	m	union:generic	access:public
generic::doublev	src/utils/ncgen/generic.h	/^    double doublev;$/;"	m	union:generic	access:public
generic::floatv	src/utils/ncgen/generic.h	/^    float floatv;$/;"	m	union:generic	access:public
generic::intv	src/utils/ncgen/generic.h	/^    int intv;$/;"	m	union:generic	access:public
generic::shortv	src/utils/ncgen/generic.h	/^    short shortv;$/;"	m	union:generic	access:public
get	src/lib/ncio.h	/^	ncmpiio_getfunc *NCIO_CONST get;$/;"	m	struct:ncio	access:public
get_fields	test/fandc/csnap.c	/^void get_fields(double *tt, double *smf) {$/;"	f	signature:(double *tt, double *smf)
get_fields	test/fandc/csnap.c	/^void get_fields(double *tt, double *smf);$/;"	p	file:	signature:(double *tt, double *smf)
get_fmt	src/utils/ncdump/dumplib.c	/^get_fmt($/;"	f	signature:( int ncid, int varid, ncmpi_type type )
get_fmt	src/utils/ncdump/dumplib.h	/^const char *		get_fmt ( int ncid, int varid, nc_type type );$/;"	p	signature:( int ncid, int varid, nc_type type )
get_ix_double	src/lib/ncx.c	/^get_ix_double(const void *xp, double *ip)$/;"	f	file:	signature:(const void *xp, double *ip)
get_ix_float	src/lib/ncx.c	/^get_ix_float(const void *xp, float *ip)$/;"	f	file:	signature:(const void *xp, float *ip)
get_ix_int	src/lib/ncx.c	/^get_ix_int(const void *xp, ix_int *ip)$/;"	f	file:	signature:(const void *xp, ix_int *ip)
get_ix_short	src/lib/ncx.c	/^get_ix_short(const void *xp, ix_short *ip)$/;"	f	file:	signature:(const void *xp, ix_short *ip)
giantfile_flag	src/utils/ncgen/genlib.c	/^extern int giantfile_flag;$/;"	x
giantfile_flag	src/utils/ncgen/main.c	/^int giantfile_flag;$/;"	v
giantvar_flag	src/utils/ncgen/genlib.c	/^extern int giantvar_flag;$/;"	x
giantvar_flag	src/utils/ncgen/main.c	/^int giantvar_flag;$/;"	v
grow_aarray	src/utils/ncgen/genlib.c	/^grow_aarray($/;"	f	signature:( int nar, struct atts **arpp)
grow_aarray	src/utils/ncgen/genlib.h	/^extern void	grow_aarray ( int narray, struct atts **array );$/;"	p	signature:( int narray, struct atts **array )
grow_darray	src/utils/ncgen/genlib.c	/^grow_darray($/;"	f	signature:( int nar, struct dims **arpp)
grow_darray	src/utils/ncgen/genlib.h	/^extern void	grow_darray ( int narray, struct dims **array );$/;"	p	signature:( int narray, struct dims **array )
grow_iarray	src/utils/ncgen/genlib.c	/^grow_iarray($/;"	f	signature:( int nar, int **arpp)
grow_iarray	src/utils/ncgen/genlib.h	/^extern void	grow_iarray ( int narray, int **array );$/;"	p	signature:( int narray, int **array )
grow_varray	src/utils/ncgen/genlib.c	/^grow_varray($/;"	f	signature:( int nar, struct vars **arpp)
grow_varray	src/utils/ncgen/genlib.h	/^extern void	grow_varray ( int narray, struct vars **array );$/;"	p	signature:( int narray, struct vars **array )
handle_error	test/test_check_header/test_check_header.c	/^static void handle_error(int status) {$/;"	f	file:	signature:(int status)
handle_error	test/test_check_header/test_check_header.c	/^static void handle_error(int status);$/;"	p	file:	signature:(int status)
handle_error	test/test_check_header/test_check_header1.c	/^static void handle_error(int status) {$/;"	f	file:	signature:(int status)
handle_error	test/test_check_header/test_check_header1.c	/^static void handle_error(int status);$/;"	p	file:	signature:(int status)
handle_error	test/test_double/test_read.c	/^static void handle_error(int status) {$/;"	f	file:	signature:(int status)
handle_error	test/test_double/test_read.c	/^static void handle_error(int status);$/;"	p	file:	signature:(int status)
handle_error	test/test_double/test_read_indep.c	/^static void handle_error(int status) {$/;"	f	file:	signature:(int status)
handle_error	test/test_double/test_read_indep.c	/^static void handle_error(int status);$/;"	p	file:	signature:(int status)
handle_error	test/test_double/test_write.c	/^static void handle_error(int status) {$/;"	f	file:	signature:(int status)
handle_error	test/test_double/test_write.c	/^static void handle_error(int status);$/;"	p	file:	signature:(int status)
handle_error	test/test_double/test_write_indep.c	/^static void handle_error(int status) {$/;"	f	file:	signature:(int status)
handle_error	test/test_double/test_write_indep.c	/^static void handle_error(int status);$/;"	p	file:	signature:(int status)
handle_error	test/test_double/test_write_orginal.c	/^static void handle_error(int status) {$/;"	f	file:	signature:(int status)
handle_error	test/test_double/test_write_orginal.c	/^static void handle_error(int status);$/;"	p	file:	signature:(int status)
handle_error	test/test_double_int/test_read.c	/^static void handle_error(int status) {$/;"	f	file:	signature:(int status)
handle_error	test/test_double_int/test_read.c	/^static void handle_error(int status);$/;"	p	file:	signature:(int status)
handle_error	test/test_double_int/test_read_indep.c	/^static void handle_error(int status) {$/;"	f	file:	signature:(int status)
handle_error	test/test_double_int/test_read_indep.c	/^static void handle_error(int status);$/;"	p	file:	signature:(int status)
handle_error	test/test_double_int/test_write.c	/^static void handle_error(int status) {$/;"	f	file:	signature:(int status)
handle_error	test/test_double_int/test_write.c	/^static void handle_error(int status);$/;"	p	file:	signature:(int status)
handle_error	test/test_double_int/test_write_indep.c	/^static void handle_error(int status) {$/;"	f	file:	signature:(int status)
handle_error	test/test_double_int/test_write_indep.c	/^static void handle_error(int status);$/;"	p	file:	signature:(int status)
handle_error	test/test_float/test_read.c	/^static void handle_error(int status) {$/;"	f	file:	signature:(int status)
handle_error	test/test_float/test_read.c	/^static void handle_error(int status);$/;"	p	file:	signature:(int status)
handle_error	test/test_float/test_read_indep.c	/^static void handle_error(int status) {$/;"	f	file:	signature:(int status)
handle_error	test/test_float/test_read_indep.c	/^static void handle_error(int status);$/;"	p	file:	signature:(int status)
handle_error	test/test_float/test_write.c	/^static void handle_error(int status) {$/;"	f	file:	signature:(int status)
handle_error	test/test_float/test_write.c	/^static void handle_error(int status);$/;"	p	file:	signature:(int status)
handle_error	test/test_float/test_write_indep.c	/^static void handle_error(int status) {$/;"	f	file:	signature:(int status)
handle_error	test/test_float/test_write_indep.c	/^static void handle_error(int status);$/;"	p	file:	signature:(int status)
handle_error	test/test_int/test_read.c	/^static void handle_error(int status) {$/;"	f	file:	signature:(int status)
handle_error	test/test_int/test_read.c	/^static void handle_error(int status);$/;"	p	file:	signature:(int status)
handle_error	test/test_int/test_read64.c	/^static void handle_error(int status) {$/;"	f	file:	signature:(int status)
handle_error	test/test_int/test_read64.c	/^static void handle_error(int status);$/;"	p	file:	signature:(int status)
handle_error	test/test_int/test_read_indep.c	/^static void handle_error(int status) {$/;"	f	file:	signature:(int status)
handle_error	test/test_int/test_read_indep.c	/^static void handle_error(int status);$/;"	p	file:	signature:(int status)
handle_error	test/test_int/test_write.c	/^static void handle_error(int status) {$/;"	f	file:	signature:(int status)
handle_error	test/test_int/test_write.c	/^static void handle_error(int status);$/;"	p	file:	signature:(int status)
handle_error	test/test_int/test_write64.c	/^static void handle_error(int status) {$/;"	f	file:	signature:(int status)
handle_error	test/test_int/test_write64.c	/^static void handle_error(int status);$/;"	p	file:	signature:(int status)
handle_error	test/test_int/test_write_indep.c	/^static void handle_error(int status) {$/;"	f	file:	signature:(int status)
handle_error	test/test_int/test_write_indep.c	/^static void handle_error(int status);$/;"	p	file:	signature:(int status)
handle_error	test/testcases/ncmpi_vars_null_stride.c	/^static void handle_error(int status)$/;"	f	file:	signature:(int status)
handle_error_nc	test/testcases/vectors.c	/^static void handle_error_nc(int ncerr, char *str)$/;"	f	file:	signature:(int ncerr, char *str)
has_2d	test/fandc/csnap.c	/^int has_2d;                                 \/* contains valid 2D data? *\/$/;"	v
has_c_format_att	src/utils/ncdump/dumplib.c	/^has_c_format_att($/;"	f	file:	signature:( int ncid, int varid )
has_c_format_att	src/utils/ncdump/dumplib.c	/^static char* has_c_format_att(int ncid, int varid);$/;"	p	file:	signature:(int ncid, int varid)
has_data	src/utils/ncgen/ncgen.h	/^    int has_data;		\/* 1 if data specified, 0 otherwise *\/$/;"	m	struct:vars	access:public
has_fillval	src/utils/ncdump/ncdump.h	/^    boolean has_fillval;$/;"	m	struct:ncvar	access:public
hash	test/nc_test/tests.h	/^double hash( const ncmpi_type type, const int rank, const MPI_Offset *index );$/;"	p	signature:( const ncmpi_type type, const int rank, const MPI_Offset *index )
hash	test/nc_test/util.c	/^hash( const ncmpi_type type, const int rank, const MPI_Offset *index ) $/;"	f	signature:( const ncmpi_type type, const int rank, const MPI_Offset *index )
hash4	test/nc_test/tests.h	/^double hash4($/;"	p	signature:( const ncmpi_type type, const int rank, const MPI_Offset *index, const nct_itype itype)
hash4	test/nc_test/util.c	/^hash4($/;"	f	signature:( const ncmpi_type type, const int rank, const MPI_Offset *index, const nct_itype itype)
hdr_check_buffer	src/lib/header.c	/^hdr_check_buffer(bufferinfo *gbp, MPI_Offset nextread) {$/;"	f	file:	signature:(bufferinfo *gbp, MPI_Offset nextread)
hdr_check_buffer	src/lib/header.c	/^static int hdr_check_buffer(bufferinfo *gbp, MPI_Offset nextread);$/;"	p	file:	signature:(bufferinfo *gbp, MPI_Offset nextread)
hdr_fetch	src/lib/header.c	/^hdr_fetch(bufferinfo *gbp) {$/;"	f	file:	signature:(bufferinfo *gbp)
hdr_fetch	src/lib/header.c	/^static int hdr_fetch(bufferinfo *gbp);$/;"	p	file:	signature:(bufferinfo *gbp)
hdr_get_NC_attr	src/lib/header.c	/^hdr_get_NC_attr(bufferinfo *gbp, NC_attr **attrpp) {$/;"	f	file:	signature:(bufferinfo *gbp, NC_attr **attrpp)
hdr_get_NC_attr	src/lib/header.c	/^static int hdr_get_NC_attr(bufferinfo *gbp, NC_attr **attrpp);$/;"	p	file:	signature:(bufferinfo *gbp, NC_attr **attrpp)
hdr_get_NC_attrV	src/lib/header.c	/^hdr_get_NC_attrV(bufferinfo *gbp, NC_attr *attrp) {$/;"	f	file:	signature:(bufferinfo *gbp, NC_attr *attrp)
hdr_get_NC_attrV	src/lib/header.c	/^static int hdr_get_NC_attrV(bufferinfo *gbp, NC_attr *attrp);$/;"	p	file:	signature:(bufferinfo *gbp, NC_attr *attrp)
hdr_get_NC_attrarray	src/lib/header.c	/^hdr_get_NC_attrarray(bufferinfo *gbp, NC_attrarray *ncap){$/;"	f	file:	signature:(bufferinfo *gbp, NC_attrarray *ncap)
hdr_get_NC_attrarray	src/lib/header.c	/^static int hdr_get_NC_attrarray(bufferinfo *gbp, NC_attrarray *ncap);$/;"	p	file:	signature:(bufferinfo *gbp, NC_attrarray *ncap)
hdr_get_NC_dim	src/lib/header.c	/^hdr_get_NC_dim(bufferinfo *gbp, NC_dim **dimpp) {$/;"	f	file:	signature:(bufferinfo *gbp, NC_dim **dimpp)
hdr_get_NC_dim	src/lib/header.c	/^static int hdr_get_NC_dim(bufferinfo *gbp, NC_dim **dimpp);$/;"	p	file:	signature:(bufferinfo *gbp, NC_dim **dimpp)
hdr_get_NC_dimarray	src/lib/header.c	/^hdr_get_NC_dimarray(bufferinfo *gbp, NC_dimarray *ncap) {$/;"	f	file:	signature:(bufferinfo *gbp, NC_dimarray *ncap)
hdr_get_NC_dimarray	src/lib/header.c	/^static int hdr_get_NC_dimarray(bufferinfo *gbp, NC_dimarray *ncap);$/;"	p	file:	signature:(bufferinfo *gbp, NC_dimarray *ncap)
hdr_get_NC_string	src/lib/header.c	/^hdr_get_NC_string(bufferinfo *gbp, NC_string **ncstrpp) {$/;"	f	file:	signature:(bufferinfo *gbp, NC_string **ncstrpp)
hdr_get_NC_string	src/lib/header.c	/^static int hdr_get_NC_string(bufferinfo *gbp, NC_string **ncstrpp);$/;"	p	file:	signature:(bufferinfo *gbp, NC_string **ncstrpp)
hdr_get_NC_var	src/lib/header.c	/^hdr_get_NC_var(bufferinfo *gbp, NC_var **varpp) {$/;"	f	file:	signature:(bufferinfo *gbp, NC_var **varpp)
hdr_get_NC_var	src/lib/header.c	/^static int hdr_get_NC_var(bufferinfo *gbp, NC_var **varpp);$/;"	p	file:	signature:(bufferinfo *gbp, NC_var **varpp)
hdr_get_NC_vararray	src/lib/header.c	/^hdr_get_NC_vararray(bufferinfo *gbp, NC_vararray *ncap) {$/;"	f	file:	signature:(bufferinfo *gbp, NC_vararray *ncap)
hdr_get_NC_vararray	src/lib/header.c	/^static int hdr_get_NC_vararray(bufferinfo *gbp, NC_vararray *ncap);$/;"	p	file:	signature:(bufferinfo *gbp, NC_vararray *ncap)
hdr_get_NCtype	src/lib/header.c	/^hdr_get_NCtype(bufferinfo *gbp, NCtype *typep) {$/;"	f	file:	signature:(bufferinfo *gbp, NCtype *typep)
hdr_get_NCtype	src/lib/header.c	/^static int hdr_get_NCtype(bufferinfo *gbp, NCtype *typep);$/;"	p	file:	signature:(bufferinfo *gbp, NCtype *typep)
hdr_get_nc_type	src/lib/header.c	/^hdr_get_nc_type(bufferinfo *gbp, nc_type *typep) {$/;"	f	file:	signature:(bufferinfo *gbp, nc_type *typep)
hdr_get_nc_type	src/lib/header.c	/^static int hdr_get_nc_type(bufferinfo *gbp, nc_type *typep);$/;"	p	file:	signature:(bufferinfo *gbp, nc_type *typep)
hdr_get_size_t	src/lib/header.c	/^hdr_get_size_t(bufferinfo *gbp, MPI_Offset *sp) {$/;"	f	file:	signature:(bufferinfo *gbp, MPI_Offset *sp)
hdr_get_size_t	src/lib/header.c	/^static int hdr_get_size_t(bufferinfo *gbp, MPI_Offset *sp);$/;"	p	file:	signature:(bufferinfo *gbp, MPI_Offset *sp)
hdr_len_NC_attr	src/lib/header.c	/^hdr_len_NC_attr(const NC_attr *attrp, MPI_Offset sizeof_t)$/;"	f	file:	signature:(const NC_attr *attrp, MPI_Offset sizeof_t)
hdr_len_NC_attr	src/lib/header.c	/^static MPI_Offset hdr_len_NC_attr(const NC_attr *attrp, MPI_Offset sizeof_t);$/;"	p	file:	signature:(const NC_attr *attrp, MPI_Offset sizeof_t)
hdr_len_NC_attrarray	src/lib/header.c	/^hdr_len_NC_attrarray(const NC_attrarray *ncap, MPI_Offset sizeof_t)$/;"	f	file:	signature:(const NC_attrarray *ncap, MPI_Offset sizeof_t)
hdr_len_NC_attrarray	src/lib/header.c	/^static MPI_Offset hdr_len_NC_attrarray(const NC_attrarray *ncap, MPI_Offset sizeof_t);$/;"	p	file:	signature:(const NC_attrarray *ncap, MPI_Offset sizeof_t)
hdr_len_NC_dim	src/lib/header.c	/^hdr_len_NC_dim(const NC_dim *dimp, MPI_Offset sizeof_t)$/;"	f	file:	signature:(const NC_dim *dimp, MPI_Offset sizeof_t)
hdr_len_NC_dim	src/lib/header.c	/^static MPI_Offset hdr_len_NC_dim(const NC_dim *dimp, MPI_Offset sizeof_t);$/;"	p	file:	signature:(const NC_dim *dimp, MPI_Offset sizeof_t)
hdr_len_NC_dimarray	src/lib/header.c	/^hdr_len_NC_dimarray(const NC_dimarray *ncap, MPI_Offset sizeof_t)$/;"	f	file:	signature:(const NC_dimarray *ncap, MPI_Offset sizeof_t)
hdr_len_NC_dimarray	src/lib/header.c	/^static MPI_Offset hdr_len_NC_dimarray(const NC_dimarray *ncap, MPI_Offset sizeof_t);$/;"	p	file:	signature:(const NC_dimarray *ncap, MPI_Offset sizeof_t)
hdr_len_NC_string	src/lib/header.c	/^hdr_len_NC_string(const NC_string *ncstrp, MPI_Offset sizeof_t)$/;"	f	file:	signature:(const NC_string *ncstrp, MPI_Offset sizeof_t)
hdr_len_NC_string	src/lib/header.c	/^static MPI_Offset hdr_len_NC_string(const NC_string *ncstrp, MPI_Offset sizeof_t);$/;"	p	file:	signature:(const NC_string *ncstrp, MPI_Offset sizeof_t)
hdr_len_NC_var	src/lib/header.c	/^hdr_len_NC_var(const NC_var *varp, MPI_Offset sizeof_off_t, MPI_Offset sizeof_t)$/;"	f	file:	signature:(const NC_var *varp, MPI_Offset sizeof_off_t, MPI_Offset sizeof_t)
hdr_len_NC_var	src/lib/header.c	/^static MPI_Offset hdr_len_NC_var(const NC_var *varp, MPI_Offset sizeof_off_t, MPI_Offset sizeof_t);$/;"	p	file:	signature:(const NC_var *varp, MPI_Offset sizeof_off_t, MPI_Offset sizeof_t)
hdr_len_NC_vararray	src/lib/header.c	/^hdr_len_NC_vararray(const NC_vararray *ncap, MPI_Offset sizeof_off_t, MPI_Offset sizeof_t)$/;"	f	file:	signature:(const NC_vararray *ncap, MPI_Offset sizeof_off_t, MPI_Offset sizeof_t)
hdr_len_NC_vararray	src/lib/header.c	/^static MPI_Offset hdr_len_NC_vararray(const NC_vararray *ncap, MPI_Offset sizeof_off_t, MPI_Offset sizeof_t);$/;"	p	file:	signature:(const NC_vararray *ncap, MPI_Offset sizeof_off_t, MPI_Offset sizeof_t)
hdr_put_NC_attr	src/lib/header.c	/^hdr_put_NC_attr(bufferinfo *pbp, const NC_attr *attrp) {$/;"	f	file:	signature:(bufferinfo *pbp, const NC_attr *attrp)
hdr_put_NC_attr	src/lib/header.c	/^static int hdr_put_NC_attr(bufferinfo *pbp, const NC_attr *attrp);$/;"	p	file:	signature:(bufferinfo *pbp, const NC_attr *attrp)
hdr_put_NC_attrV	src/lib/header.c	/^hdr_put_NC_attrV(bufferinfo *pbp, const NC_attr *attrp) {$/;"	f	file:	signature:(bufferinfo *pbp, const NC_attr *attrp)
hdr_put_NC_attrV	src/lib/header.c	/^static int hdr_put_NC_attrV(bufferinfo *pbp, const NC_attr *attrp);$/;"	p	file:	signature:(bufferinfo *pbp, const NC_attr *attrp)
hdr_put_NC_attrarray	src/lib/header.c	/^hdr_put_NC_attrarray(bufferinfo *pbp, const NC_attrarray *ncap) {$/;"	f	file:	signature:(bufferinfo *pbp, const NC_attrarray *ncap)
hdr_put_NC_attrarray	src/lib/header.c	/^static int hdr_put_NC_attrarray(bufferinfo *pbp, const NC_attrarray *ncap);$/;"	p	file:	signature:(bufferinfo *pbp, const NC_attrarray *ncap)
hdr_put_NC_dim	src/lib/header.c	/^hdr_put_NC_dim(bufferinfo *pbp, const NC_dim *dimp) {$/;"	f	file:	signature:(bufferinfo *pbp, const NC_dim *dimp)
hdr_put_NC_dim	src/lib/header.c	/^static int hdr_put_NC_dim(bufferinfo *pbp, const NC_dim *dimp);$/;"	p	file:	signature:(bufferinfo *pbp, const NC_dim *dimp)
hdr_put_NC_dimarray	src/lib/header.c	/^hdr_put_NC_dimarray(bufferinfo *pbp, const NC_dimarray *ncap) {$/;"	f	file:	signature:(bufferinfo *pbp, const NC_dimarray *ncap)
hdr_put_NC_dimarray	src/lib/header.c	/^static int hdr_put_NC_dimarray(bufferinfo *pbp, const NC_dimarray *ncap);$/;"	p	file:	signature:(bufferinfo *pbp, const NC_dimarray *ncap)
hdr_put_NC_string	src/lib/header.c	/^hdr_put_NC_string(bufferinfo *pbp, const NC_string *ncstrp) {$/;"	f	file:	signature:(bufferinfo *pbp, const NC_string *ncstrp)
hdr_put_NC_string	src/lib/header.c	/^static int hdr_put_NC_string(bufferinfo *pbp, const NC_string *ncstrp);$/;"	p	file:	signature:(bufferinfo *pbp, const NC_string *ncstrp)
hdr_put_NC_var	src/lib/header.c	/^hdr_put_NC_var(bufferinfo *pbp, const NC_var *varp) {$/;"	f	file:	signature:(bufferinfo *pbp, const NC_var *varp)
hdr_put_NC_var	src/lib/header.c	/^static int hdr_put_NC_var(bufferinfo *pbp, const NC_var *varp);$/;"	p	file:	signature:(bufferinfo *pbp, const NC_var *varp)
hdr_put_NC_vararray	src/lib/header.c	/^hdr_put_NC_vararray(bufferinfo *pbp, const NC_vararray *ncap){$/;"	f	file:	signature:(bufferinfo *pbp, const NC_vararray *ncap)
hdr_put_NC_vararray	src/lib/header.c	/^static int hdr_put_NC_vararray(bufferinfo *pbp, const NC_vararray *ncap);$/;"	p	file:	signature:(bufferinfo *pbp, const NC_vararray *ncap)
hdr_put_NCtype	src/lib/header.c	/^hdr_put_NCtype(bufferinfo *pbp, NCtype type) {$/;"	f	file:	signature:(bufferinfo *pbp, NCtype type)
hdr_put_NCtype	src/lib/header.c	/^static int hdr_put_NCtype(bufferinfo *pbp, NCtype type);$/;"	p	file:	signature:(bufferinfo *pbp, NCtype type)
hdr_put_nc_type	src/lib/header.c	/^hdr_put_nc_type(bufferinfo *pbp, const nc_type *typep) {$/;"	f	file:	signature:(bufferinfo *pbp, const nc_type *typep)
hdr_put_nc_type	src/lib/header.c	/^static int hdr_put_nc_type(bufferinfo *pbp, const nc_type *typep);$/;"	p	file:	signature:(bufferinfo *pbp, const nc_type *typep)
head	src/lib/nc.h	/^        NC_req *head;$/;"	m	struct:NC	access:public
header_only	src/utils/ncdump/ncdump.h	/^    boolean header_only;	\/* if true, don't print any variable data *\/$/;"	m	struct:fspec	access:public
id	src/lib/nc.h	/^    int            id;$/;"	m	struct:NC_req	access:public
id	src/utils/ncdump/dumplib.h	/^    int id;$/;"	m	struct:vnode	access:public
ieee	src/lib/ncx.c	/^	struct	ieee_double ieee;$/;"	m	struct:dbl_limits	typeref:struct:dbl_limits::ieee_double	file:	access:public
ieee	src/lib/ncx.c	/^	struct ieee_single ieee;$/;"	m	struct:sgl_limits	typeref:struct:sgl_limits::ieee_single	file:	access:public
ieee_double	src/lib/ncx.c	/^struct	ieee_double {$/;"	s	file:
ieee_double::exp_hi	src/lib/ncx.c	/^	unsigned int	exp_hi   : 7;$/;"	m	struct:ieee_double	file:	access:public
ieee_double::exp_lo	src/lib/ncx.c	/^	unsigned int	exp_lo   : 4;$/;"	m	struct:ieee_double	file:	access:public
ieee_double::mant_4	src/lib/ncx.c	/^	unsigned int	mant_4   : 8;$/;"	m	struct:ieee_double	file:	access:public
ieee_double::mant_5	src/lib/ncx.c	/^	unsigned int	mant_5   : 8;$/;"	m	struct:ieee_double	file:	access:public
ieee_double::mant_6	src/lib/ncx.c	/^	unsigned int 	mant_6   : 4;$/;"	m	struct:ieee_double	file:	access:public
ieee_double::mant_lo	src/lib/ncx.c	/^	unsigned int	mant_lo  : 32;$/;"	m	struct:ieee_double	file:	access:public
ieee_double::sign	src/lib/ncx.c	/^	unsigned int	sign     : 1;$/;"	m	struct:ieee_double	file:	access:public
ieee_single	src/lib/ncx.c	/^struct	ieee_single {$/;"	s	file:
ieee_single::exp_hi	src/lib/ncx.c	/^	unsigned int	exp_hi       : 7;$/;"	m	struct:ieee_single	file:	access:public
ieee_single::exp_lo	src/lib/ncx.c	/^	unsigned int	exp_lo       : 1;$/;"	m	struct:ieee_single	file:	access:public
ieee_single::mant_hi	src/lib/ncx.c	/^	unsigned int 	mant_hi      : 7;$/;"	m	struct:ieee_single	file:	access:public
ieee_single::mant_lo_hi	src/lib/ncx.c	/^	unsigned int	mant_lo_hi   : 8;$/;"	m	struct:ieee_single	file:	access:public
ieee_single::mant_lo_lo	src/lib/ncx.c	/^	unsigned int	mant_lo_lo   : 8;$/;"	m	struct:ieee_single	file:	access:public
ieee_single::sign	src/lib/ncx.c	/^	unsigned int	sign         : 1;$/;"	m	struct:ieee_single	file:	access:public
ifFail	test/nc_test/error.c	/^ifFail(const int expr, const int line, const char *file)$/;"	f	signature:(const int expr, const int line, const char *file)
ifFail	test/nc_test/error.c	/^int ifFail(const int expr, const int line, const char *file);$/;"	p	file:	signature:(const int expr, const int line, const char *file)
ifFail	test/nc_test/error.h	/^extern int ifFail(const int expr, const int line, const char *file);$/;"	p	signature:(const int expr, const int line, const char *file)
imaptype	src/lib/nc.h	/^    MPI_Datatype   imaptype;$/;"	m	struct:NC_req	access:public
inRange	test/nc_test/tests.h	/^int inRange(const double value, const ncmpi_type datatype);$/;"	p	signature:(const double value, const ncmpi_type datatype)
inRange	test/nc_test/util.c	/^inRange(const double value, const ncmpi_type datatype)$/;"	f	signature:(const double value, const ncmpi_type datatype)
inRange3	test/nc_test/tests.h	/^int inRange3(const double value, const ncmpi_type datatype, const nct_itype itype);$/;"	p	signature:(const double value, const ncmpi_type datatype, const nct_itype itype)
inRange3	test/nc_test/util.c	/^inRange3($/;"	f	signature:( const double value, const ncmpi_type datatype, const nct_itype itype)
inRange_float	test/nc_test/util.c	/^inRange_float(const double value, const ncmpi_type datatype)$/;"	f	file:	signature:(const double value, const ncmpi_type datatype)
inRange_float	test/nc_test/util.c	/^static int inRange_float(const double value, const ncmpi_type datatype);$/;"	p	file:	signature:(const double value, const ncmpi_type datatype)
inRange_uchar	test/nc_test/util.c	/^inRange_uchar(const double value, const ncmpi_type datatype)$/;"	f	file:	signature:(const double value, const ncmpi_type datatype)
incr_NC_attrarray	src/lib/attr.c	/^incr_NC_attrarray(NC_attrarray *ncap, NC_attr *newelemp)$/;"	f	file:	signature:(NC_attrarray *ncap, NC_attr *newelemp)
incr_NC_dimarray	src/lib/dim.c	/^incr_NC_dimarray(NC_dimarray *ncap, NC_dim *newelemp)$/;"	f	file:	signature:(NC_dimarray *ncap, NC_dim *newelemp)
incr_NC_vararray	src/lib/var.c	/^incr_NC_vararray(NC_vararray *ncap, NC_var *newelemp)$/;"	f	file:	signature:(NC_vararray *ncap, NC_var *newelemp)
independent_fh	src/lib/ncio.h	/^	MPI_File independent_fh;$/;"	m	struct:ncio	access:public
index	src/lib/nc.h	/^  MPI_Offset index;		\/* index of current position in buffer *\/$/;"	m	struct:bufferinfo	access:public
infname	test/common/testutils.h	/^	char infname[PATH_MAX];$/;"	m	struct:__anon1	access:public
init_dims	test/nc_test/util.c	/^init_dims(const char *digit)$/;"	f	file:	signature:(const char *digit)
init_epsilons	src/utils/ncdump/vardata.c	/^init_epsilons(void)$/;"	f	file:	signature:(void)
init_epsilons	src/utils/ncdump/vardata.c	/^static void init_epsilons(void);$/;"	p	file:	signature:(void)
init_gatts	test/nc_test/util.c	/^init_gatts(const char *type_letter)$/;"	f	file:	signature:(const char *type_letter)
init_gvars	test/nc_test/tests.h	/^void init_gvars(void);$/;"	p	signature:(void)
init_gvars	test/nc_test/util.c	/^init_gvars (void)$/;"	f	signature:(void)
init_netcdf	src/utils/ncgen/genlib.h	/^extern void init_netcdf ( void );$/;"	p	signature:( void )
init_netcdf	src/utils/ncgen/init.c	/^init_netcdf(void) {			\/* initialize global counts, flags *\/$/;"	f	signature:(void)
input	src/utils/ncgen/ncgenyy.c	/^static int input (void );$/;"	p	file:	signature:(void )
install	src/utils/ncgen/ncgentab.c	/^YYSTYPE install(  \/* install sname in symbol table *\/$/;"	f	signature:( const char *sname)
int_max	test/nc_test/tests.h	112;"	d
int_min	test/nc_test/tests.h	103;"	d
int_val	src/utils/ncgen/ncgentab.c	/^static int int_val;		\/* last int value read *\/$/;"	v	file:
int_valp	src/utils/ncgen/ncgentab.c	/^static int *int_valp;$/;"	v	file:
int_vec_eq	test/nc_test/tests.h	/^int int_vec_eq(const int *v1, const int *v2, const int n);$/;"	p	signature:(const int *v1, const int *v2, const int n)
int_vec_eq	test/nc_test/util.c	/^int_vec_eq(const int *v1, const int *v2, const int n)$/;"	f	signature:(const int *v1, const int *v2, const int n)
intv	src/utils/ncgen/generic.h	/^    int intv;$/;"	m	union:generic	access:public
ioflags	src/lib/ncio.h	/^	int ioflags;$/;"	m	struct:ncio	access:public
is_att	src/utils/ncgen/ncgentab.c	/^	unsigned	is_att : 1;	\/* appears as netCDF attribute *\/$/;"	m	struct:Symbol	file:	access:public
is_dim	src/utils/ncgen/ncgentab.c	/^	unsigned	is_dim : 1;	\/* appears as netCDF dimension *\/$/;"	m	struct:Symbol	file:	access:public
is_imap	src/lib/nc.h	/^    int            is_imap;$/;"	m	struct:NC_req	access:public
is_var	src/utils/ncgen/ncgentab.c	/^	unsigned	is_var : 1;	\/* appears as netCDF variable *\/$/;"	m	struct:Symbol	file:	access:public
isatty	src/utils/ncgen/ncgenyy.c	/^extern int isatty (int );$/;"	p	file:	signature:(int )
iscontig_of_ptypes	src/lib/nc.h	/^    int            iscontig_of_ptypes;$/;"	m	struct:NC_req	access:public
istart	test/fandc/csnap.c	/^MPI_Offset istart, jstart, kstart;                 \/* offsets of 3D field *\/$/;"	v
ix_int	src/lib/ncx.c	/^typedef int ix_int;$/;"	t	file:
ix_int	src/lib/ncx.c	/^typedef long ix_int;$/;"	t	file:
ix_int	src/lib/ncx.c	/^typedef short ix_int;$/;"	t	file:
ix_short	src/lib/ncx.c	/^typedef int ix_short;$/;"	t	file:
ix_short	src/lib/ncx.c	/^typedef long ix_short;$/;"	t	file:
ix_short	src/lib/ncx.c	/^typedef short ix_short;$/;"	t	file:
jstart	test/fandc/csnap.c	/^MPI_Offset istart, jstart, kstart;                 \/* offsets of 3D field *\/$/;"	v
kstart	test/fandc/csnap.c	/^MPI_Offset istart, jstart, kstart;                 \/* offsets of 3D field *\/$/;"	v
lastdelim	src/utils/ncdump/vardata.c	/^lastdelim (boolean more, boolean lastrow)$/;"	f	file:	signature:(boolean more, boolean lastrow)
lastdelim	src/utils/ncdump/vardata.c	/^static void lastdelim(boolean  more, boolean lastrow);$/;"	p	file:	signature:(boolean more, boolean lastrow)
lastdelim2	src/utils/ncdump/vardata.c	/^lastdelim2 (boolean more, boolean lastrow)$/;"	f	file:	signature:(boolean more, boolean lastrow)
lastdelim2	src/utils/ncdump/vardata.c	/^static void lastdelim2 (boolean more, boolean lastrow);$/;"	p	file:	signature:(boolean more, boolean lastrow)
lbuf	src/lib/nc.h	/^    void          *lbuf;$/;"	m	struct:NC_req	access:public
len	src/lib/nc.h	/^	MPI_Offset len;		\/* the total length originally allocated *\/$/;"	m	struct:__anon10	access:public
len	src/utils/ncdump/ncdump.h	/^    MPI_Offset len;$/;"	m	struct:ncatt	access:public
len	src/utils/ncgen/ncgen.h	/^    size_t len;$/;"	m	struct:atts	access:public
lineno	src/utils/ncgen/genlib.c	/^int	lineno = 1;$/;"	v
lineno	src/utils/ncgen/ncgentab.c	/^extern int lineno;		\/* line number for error messages *\/$/;"	x
linep	src/utils/ncdump/dumplib.c	/^static int linep;$/;"	v	file:
lld	src/lib/header.c	21;"	d	file:
lld	src/lib/header.c	23;"	d	file:
lld	test/mcoll_perf/mcoll_perf.c	18;"	d	file:
lld	test/mcoll_perf/mcoll_perf.c	20;"	d	file:
lname	src/utils/ncgen/ncgen.h	/^    char *lname;		\/* with no "-" characters, for C and Fortran *\/$/;"	m	struct:atts	access:public
lname	src/utils/ncgen/ncgen.h	/^    char *lname;		\/* with no "-" characters, for C and Fortran *\/$/;"	m	struct:dims	access:public
lname	src/utils/ncgen/ncgen.h	/^    char *lname;		\/* with no "-" characters, for C and Fortran *\/$/;"	m	struct:vars	access:public
lnelems	src/lib/nc.h	/^    MPI_Offset     lnelems;$/;"	m	struct:NC_req	access:public
load_netcdf	src/utils/ncgen/genlib.h	/^extern void load_netcdf ( void* rec_start );$/;"	p	signature:( void* rec_start )
load_netcdf	src/utils/ncgen/load.c	/^load_netcdf($/;"	f	signature:( void *rec_start )
locsiz_2d	test/fandc/csnap.c	/^MPI_Offset locsiz_2d[2];                           \/* local sizes of 2D fields *\/$/;"	v
locsiz_3d	test/fandc/csnap.c	/^MPI_Offset locsiz_3d[3];                           \/* local sizes of 3D fields *\/$/;"	v
long_max	test/nc_test/tests.h	113;"	d
long_min	test/nc_test/tests.h	104;"	d
lookup	src/utils/ncgen/ncgentab.c	/^YYSTYPE lookup(       \/* find sname in symbol table (linear search) *\/$/;"	f	signature:( const char *sname)
lput	src/utils/ncdump/dumplib.c	/^lput(const char *cp)$/;"	f	signature:(const char *cp)
lput	src/utils/ncdump/dumplib.h	/^extern void	lput ( const char *string );$/;"	p	signature:( const char *string )
lvars	src/utils/ncdump/ncdump.h	/^    char** lvars;		\/* list of variable names specified with -v$/;"	m	struct:fspec	access:public
main	src/lib/validator.c	/^main(int argc, char **argv) {$/;"	f	signature:(int argc, char **argv)
main	src/utils/ncdiff/ncmpidiff.c	/^int main(int argc, char **argv) {$/;"	f	signature:(int argc, char **argv)
main	src/utils/ncdump/ncdump.c	/^int main(int argc, char** argv);$/;"	p	file:	signature:(int argc, char** argv)
main	src/utils/ncdump/ncdump.c	/^main(int argc, char *argv[])$/;"	f	signature:(int argc, char *argv[])
main	src/utils/ncgen/main.c	/^int main ( int argc, char** argv );$/;"	p	file:	signature:( int argc, char** argv )
main	src/utils/ncgen/main.c	/^main($/;"	f	signature:( int argc, char *argv[])
main	test/C/pres_temp_4D_rd.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	test/C/pres_temp_4D_wr.c	/^main(int argc, char ** argv)$/;"	f	signature:(int argc, char ** argv)
main	test/C/sfc_pres_temp_rd.c	/^main()$/;"	f
main	test/C/sfc_pres_temp_wr.c	/^main()$/;"	f
main	test/C/simple_xy_rd.c	/^main()$/;"	f
main	test/C/simple_xy_wr.c	/^main()$/;"	f
main	test/fandc/csnap.c	/^int main(int argc, char *argv[]) {$/;"	f	signature:(int argc, char *argv[])
main	test/fandc/pnctest.c	/^int main (int argc, char *argv[]) {$/;"	f	signature:(int argc, char *argv[])
main	test/largefile/large_files.c	/^main(int argc, char **argv) {$/;"	f	signature:(int argc, char **argv)
main	test/mcoll_perf/mcoll_perf.c	/^int main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	test/nc_test/nc_test.c	/^main(int argc, char *argv[])$/;"	f	signature:(int argc, char *argv[])
main	test/test_check_header/test_check_header.c	/^int main(int argc, char **argv) {$/;"	f	signature:(int argc, char **argv)
main	test/test_check_header/test_check_header1.c	/^int main(int argc, char **argv) {$/;"	f	signature:(int argc, char **argv)
main	test/test_double/test_read.c	/^int main(int argc, char **argv) {$/;"	f	signature:(int argc, char **argv)
main	test/test_double/test_read_indep.c	/^int main(int argc, char **argv) {$/;"	f	signature:(int argc, char **argv)
main	test/test_double/test_write.c	/^int main(int argc, char **argv) {$/;"	f	signature:(int argc, char **argv)
main	test/test_double/test_write_indep.c	/^int main(int argc, char **argv) {$/;"	f	signature:(int argc, char **argv)
main	test/test_double/test_write_orginal.c	/^int main(int argc, char **argv) {$/;"	f	signature:(int argc, char **argv)
main	test/test_double_int/test_read.c	/^int main(int argc, char **argv) {$/;"	f	signature:(int argc, char **argv)
main	test/test_double_int/test_read_indep.c	/^int main(int argc, char **argv) {$/;"	f	signature:(int argc, char **argv)
main	test/test_double_int/test_write.c	/^int main(int argc, char **argv) {$/;"	f	signature:(int argc, char **argv)
main	test/test_double_int/test_write_indep.c	/^int main(int argc, char **argv) {$/;"	f	signature:(int argc, char **argv)
main	test/test_dtype/test_darray.c	/^int main(int argc, char** argv) {$/;"	f	signature:(int argc, char** argv)
main	test/test_dtype/test_nonblocking.c	/^int main(int argc, char** argv) {$/;"	f	signature:(int argc, char** argv)
main	test/test_dtype/test_subarray.c	/^int main(int argc, char** argv) {$/;"	f	signature:(int argc, char** argv)
main	test/test_float/test_read.c	/^int main(int argc, char **argv) {$/;"	f	signature:(int argc, char **argv)
main	test/test_float/test_read_indep.c	/^int main(int argc, char **argv) {$/;"	f	signature:(int argc, char **argv)
main	test/test_float/test_write.c	/^int main(int argc, char **argv) {$/;"	f	signature:(int argc, char **argv)
main	test/test_float/test_write_indep.c	/^int main(int argc, char **argv) {$/;"	f	signature:(int argc, char **argv)
main	test/test_inq_format/test_inq_format.c	/^int main(int argc, char **argv) {$/;"	f	signature:(int argc, char **argv)
main	test/test_int/test_read.c	/^int main(int argc, char **argv) {$/;"	f	signature:(int argc, char **argv)
main	test/test_int/test_read64.c	/^int main(int argc, char **argv) {$/;"	f	signature:(int argc, char **argv)
main	test/test_int/test_read_indep.c	/^int main(int argc, char **argv) {$/;"	f	signature:(int argc, char **argv)
main	test/test_int/test_write.c	/^int main(int argc, char **argv) {$/;"	f	signature:(int argc, char **argv)
main	test/test_int/test_write64.c	/^int main(int argc, char **argv) {$/;"	f	signature:(int argc, char **argv)
main	test/test_int/test_write_indep.c	/^int main(int argc, char **argv) {$/;"	f	signature:(int argc, char **argv)
main	test/testcases/collective_error.c	/^int main(int argc, char *argv[])$/;"	f	signature:(int argc, char *argv[])
main	test/testcases/ncmpi_vars_null_stride.c	/^int main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	test/testcases/redef1.cpp	/^int main(int argc, char** argv)$/;"	f	signature:(int argc, char** argv)
main	test/testcases/vectors.c	/^int main(int argc, char ** argv)$/;"	f	signature:(int argc, char ** argv)
make_lvars	src/utils/ncdump/ncdump.c	/^make_lvars(char *optarg, struct fspec* fspecp)$/;"	f	file:	signature:(char *optarg, struct fspec* fspecp)
make_lvars	src/utils/ncdump/ncdump.c	/^static void make_lvars(char* optarg, struct fspec* fspecp);$/;"	p	file:	signature:(char* optarg, struct fspec* fspecp)
malloc	src/utils/ncgen/ncgentab.c	/^void *malloc (YYSIZE_T); \/* INFRINGES ON USER NAME SPACE *\/$/;"	p	file:
mant_4	src/lib/ncx.c	/^	unsigned int	mant_4   : 8;$/;"	m	struct:ieee_double	file:	access:public
mant_5	src/lib/ncx.c	/^	unsigned int	mant_5   : 8;$/;"	m	struct:ieee_double	file:	access:public
mant_6	src/lib/ncx.c	/^	unsigned int 	mant_6   : 4;$/;"	m	struct:ieee_double	file:	access:public
mant_hi	src/lib/ncx.c	/^	unsigned int 	mant_hi      : 7;$/;"	m	struct:ieee_single	file:	access:public
mant_lo	src/lib/ncx.c	/^	unsigned int	mant_lo  : 32;$/;"	m	struct:ieee_double	file:	access:public
mant_lo_hi	src/lib/ncx.c	/^	unsigned int	mant_lo_hi   : 8;$/;"	m	struct:ieee_single	file:	access:public
mant_lo_lo	src/lib/ncx.c	/^	unsigned int	mant_lo_lo   : 8;$/;"	m	struct:ieee_single	file:	access:public
mantissa1	src/lib/ncx.c	/^	unsigned int	mantissa1 : 7;$/;"	m	struct:vax_double	file:	access:public
mantissa1	src/lib/ncx.c	/^	unsigned int	mantissa1 : 7;$/;"	m	struct:vax_single	file:	access:public
mantissa2	src/lib/ncx.c	/^	unsigned int	mantissa2 : 16;$/;"	m	struct:vax_double	file:	access:public
mantissa2	src/lib/ncx.c	/^	unsigned int	mantissa2 : 16;$/;"	m	struct:vax_single	file:	access:public
mantissa3	src/lib/ncx.c	/^	unsigned int	mantissa3 : 16;$/;"	m	struct:vax_double	file:	access:public
mantissa4	src/lib/ncx.c	/^	unsigned int	mantissa4 : 16;$/;"	m	struct:vax_double	file:	access:public
max	src/lib/ncx.c	/^} max = {$/;"	v	typeref:struct:sgl_limits	file:
max_double_	test/nf_test/fortlib.c	/^FORTRAN_API double max_double_() {$/;"	f
max_double_	test/nf_test/fortlib.c	190;"	d	file:
max_double_	test/nf_test/fortlib.c	192;"	d	file:
max_double_	test/nf_test/fortlib.c	194;"	d	file:
max_float_	test/nf_test/fortlib.c	/^FORTRAN_API double max_float_() {$/;"	f
max_float_	test/nf_test/fortlib.c	178;"	d	file:
max_float_	test/nf_test/fortlib.c	180;"	d	file:
max_float_	test/nf_test/fortlib.c	182;"	d	file:
max_int_	test/nf_test/fortlib.c	/^FORTRAN_API double max_int_() {$/;"	f
max_int_	test/nf_test/fortlib.c	142;"	d	file:
max_int_	test/nf_test/fortlib.c	144;"	d	file:
max_int_	test/nf_test/fortlib.c	146;"	d	file:
max_line_len	src/utils/ncdump/dumplib.c	/^static int max_line_len;$/;"	v	file:
max_nmpt	test/nc_test/error.c	/^extern int  max_nmpt;		\/* max. number of messages per test *\/$/;"	x
max_nmpt	test/nc_test/nc_test.c	/^int  max_nmpt;		\/* max. number of messages per test *\/$/;"	v
max_nmpt	test/nc_test/tests.h	/^extern int max_nmpt;		\/* max number of messages per test *\/$/;"	x
max_schar_	test/nf_test/fortlib.c	/^FORTRAN_API double max_schar_() {$/;"	f
max_schar_	test/nf_test/fortlib.c	154;"	d	file:
max_schar_	test/nf_test/fortlib.c	156;"	d	file:
max_schar_	test/nf_test/fortlib.c	158;"	d	file:
max_short_	test/nf_test/fortlib.c	/^FORTRAN_API double max_short_() {$/;"	f
max_short_	test/nf_test/fortlib.c	166;"	d	file:
max_short_	test/nf_test/fortlib.c	168;"	d	file:
max_short_	test/nf_test/fortlib.c	170;"	d	file:
min	src/lib/ncx.c	/^static struct sgl_limits min = {$/;"	v	typeref:struct:sgl_limits	file:
min_int_	test/nf_test/fortlib.c	/^FORTRAN_API double min_int_() {$/;"	f
min_int_	test/nf_test/fortlib.c	106;"	d	file:
min_int_	test/nf_test/fortlib.c	108;"	d	file:
min_int_	test/nf_test/fortlib.c	110;"	d	file:
min_schar_	test/nf_test/fortlib.c	/^FORTRAN_API double min_schar_() {$/;"	f
min_schar_	test/nf_test/fortlib.c	118;"	d	file:
min_schar_	test/nf_test/fortlib.c	120;"	d	file:
min_schar_	test/nf_test/fortlib.c	122;"	d	file:
min_short_	test/nf_test/fortlib.c	/^FORTRAN_API double min_short_() {$/;"	f
min_short_	test/nf_test/fortlib.c	130;"	d	file:
min_short_	test/nf_test/fortlib.c	132;"	d	file:
min_short_	test/nf_test/fortlib.c	134;"	d	file:
move	src/lib/ncio.h	/^	ncmpiio_movefunc *NCIO_CONST move;$/;"	m	struct:ncio	access:public
move_data_r	src/lib/nc.c	/^move_data_r(NC *ncp, NC *old) {$/;"	f	file:	signature:(NC *ncp, NC *old)
move_data_r	src/lib/nc.c	/^static int move_data_r(NC *ncp, NC *old);$/;"	p	file:	signature:(NC *ncp, NC *old)
move_recs_r	src/lib/nc.c	/^move_recs_r(NC *ncp, NC *old) {$/;"	f	file:	signature:(NC *ncp, NC *old)
move_recs_r	src/lib/nc.c	/^static int move_recs_r(NC *ncp, NC *old);$/;"	p	file:	signature:(NC *ncp, NC *old)
move_vars_r	src/lib/nc.c	/^move_vars_r(NC *ncp, NC *old) {$/;"	f	file:	signature:(NC *ncp, NC *old)
move_vars_r	src/lib/nc.c	/^static int move_vars_r(NC *ncp, NC *old);$/;"	p	file:	signature:(NC *ncp, NC *old)
mpiinfo	src/lib/ncio.h	/^	MPI_Info mpiinfo;$/;"	m	struct:ncio	access:public
mpioflags	src/lib/ncio.h	/^	int mpioflags;$/;"	m	struct:ncio	access:public
mpiomode	src/lib/ncio.h	/^	int mpiomode;$/;"	m	struct:ncio	access:public
mype	test/fandc/csnap.c	/^int mype;                                   \/* rank in comm_cart *\/$/;"	v
nada	src/lib/ncx.c	/^static const char nada[X_ALIGN] = {0, 0, 0, 0};$/;"	v	file:
nalloc	src/lib/nc.h	/^	MPI_Offset nalloc;	\/* number allocated >= nelems *\/$/;"	m	struct:NC_attrarray	access:public
nalloc	src/lib/nc.h	/^	MPI_Offset nalloc;	\/* number allocated >= nelems *\/$/;"	m	struct:NC_vararray	access:public
nalloc	src/lib/nc.h	/^	size_t nalloc;		\/* number allocated >= nelems *\/$/;"	m	struct:NC_dimarray	access:public
name	src/lib/nc.h	/^	NC_string *name;$/;"	m	struct:__anon10	access:public
name	src/lib/nc.h	/^	NC_string *name;$/;"	m	struct:__anon8	access:public
name	src/lib/nc.h	/^	NC_string *name;$/;"	m	struct:__anon9	access:public
name	src/utils/ncdump/ncdump.h	/^    char *name;			\/* name specified with -n or derived from$/;"	m	struct:fspec	access:public
name	src/utils/ncdump/ncdump.h	/^    char name[NC_MAX_NAME];$/;"	m	struct:ncatt	access:public
name	src/utils/ncdump/ncdump.h	/^    char name[NC_MAX_NAME];$/;"	m	struct:ncdim	access:public
name	src/utils/ncdump/ncdump.h	/^    char name[NC_MAX_NAME];$/;"	m	struct:ncvar	access:public
name	src/utils/ncgen/ncgen.h	/^    char *name;$/;"	m	struct:atts	access:public
name	src/utils/ncgen/ncgen.h	/^    char *name;$/;"	m	struct:dims	access:public
name	src/utils/ncgen/ncgen.h	/^    char *name;$/;"	m	struct:vars	access:public
name	src/utils/ncgen/ncgentab.c	/^	char    	*name;$/;"	m	struct:Symbol	file:	access:public
name_path	src/utils/ncdump/ncdump.c	/^name_path(const char *path)$/;"	f	file:	signature:(const char *path)
name_path	src/utils/ncdump/ncdump.c	/^static char* name_path(const char* path);$/;"	p	file:	signature:(const char* path)
natts	src/utils/ncdump/ncdump.h	/^    int natts;$/;"	m	struct:ncvar	access:public
natts	src/utils/ncgen/init.c	/^int natts;			\/* number of attributes *\/$/;"	v
natts	src/utils/ncgen/ncgen.h	/^extern int natts;		\/* number of attributes *\/$/;"	x
nc2dbl	test/nc_test/tests.h	/^int nc2dbl ( const ncmpi_type datatype, const void *p, double *result);$/;"	p	signature:( const ncmpi_type datatype, const void *p, double *result)
nc2dbl	test/nc_test/util.c	/^int nc2dbl ( const ncmpi_type datatype, const void *p, double *result)$/;"	f	signature:( const ncmpi_type datatype, const void *p, double *result)
nc_fill	src/utils/ncgen/genlib.h	/^extern void nc_fill ( nc_type  type, size_t num, void* datp,$/;"	p	signature:( nc_type type, size_t num, void* datp, union generic fill_val )
nc_fill	src/utils/ncgen/getfill.c	/^nc_fill($/;"	f	signature:( nc_type type, size_t num, void *datp, union generic fill_val)
nc_get_NC	src/lib/nc.h	/^nc_get_NC( NC *ncp);$/;"	p	signature:( NC *ncp)
nc_getfill	src/utils/ncgen/genlib.h	/^extern void nc_getfill ( nc_type  type, union generic* gval );$/;"	p	signature:( nc_type type, union generic* gval )
nc_getfill	src/utils/ncgen/getfill.c	/^nc_getfill($/;"	f	signature:( nc_type type, union generic *gval)
nc_ignorefpe_	test/nf_test/fortlib.c	/^FORTRAN_API void FORT_CALL nc_ignorefpe_(int *doit)$/;"	f	signature:(int *doit)
nc_ignorefpe_	test/nf_test/fortlib.c	91;"	d	file:
nc_ignorefpe_	test/nf_test/fortlib.c	93;"	d	file:
nc_ignorefpe_	test/nf_test/fortlib.c	95;"	d	file:
nc_putfill	src/utils/ncgen/genlib.h	/^extern void nc_putfill ( nc_type  type, void* val, union generic* gval );$/;"	p	signature:( nc_type type, void* val, union generic* gval )
nc_putfill	src/utils/ncgen/getfill.c	/^nc_putfill($/;"	f	signature:( nc_type type, void *val, union generic *gval)
nc_strerror	src/lib/nc.h	/^const char * nc_strerror(int err);$/;"	p	signature:(int err)
nc_type	src/lib/pnetcdf.h	/^} nc_type;$/;"	t	typeref:enum:__anon5
ncatt	src/utils/ncdump/ncdump.h	/^struct ncatt {			\/* attribute *\/$/;"	s
ncatt::len	src/utils/ncdump/ncdump.h	/^    MPI_Offset len;$/;"	m	struct:ncatt	access:public
ncatt::name	src/utils/ncdump/ncdump.h	/^    char name[NC_MAX_NAME];$/;"	m	struct:ncatt	access:public
ncatt::string	src/utils/ncdump/ncdump.h	/^    char *string;		\/* for text attributes (type = NC_CHAR) *\/$/;"	m	struct:ncatt	access:public
ncatt::type	src/utils/ncdump/ncdump.h	/^    nc_type type;$/;"	m	struct:ncatt	access:public
ncatt::vals	src/utils/ncdump/ncdump.h	/^    double *vals;		\/* for numeric attributes of all types *\/$/;"	m	struct:ncatt	access:public
ncatt::var	src/utils/ncdump/ncdump.h	/^    int var;$/;"	m	struct:ncatt	access:public
ncatype	src/utils/ncgen/genlib.c	/^ncatype($/;"	f	signature:( ncmpi_type type)
ncatype	src/utils/ncgen/genlib.h	/^extern const char* ncatype ( nc_type  type );$/;"	p	signature:( nc_type type )
ncctype	src/utils/ncgen/genlib.c	/^ncctype($/;"	f	signature:( ncmpi_type type)
ncctype	src/utils/ncgen/genlib.h	/^extern const char* ncctype ( nc_type  type );$/;"	p	signature:( nc_type type )
ncdim	src/utils/ncdump/ncdump.h	/^struct ncdim {			\/* dimension *\/$/;"	s
ncdim::name	src/utils/ncdump/ncdump.h	/^    char name[NC_MAX_NAME];$/;"	m	struct:ncdim	access:public
ncdim::size	src/utils/ncdump/ncdump.h	/^    MPI_Offset size;$/;"	m	struct:ncdim	access:public
ncftype	src/utils/ncgen/genlib.c	/^ncftype($/;"	f	file:	signature:( ncmpi_type type)
nchars	src/lib/nc.h	/^	MPI_Offset nchars;$/;"	m	struct:__anon7	access:public
ncid	src/utils/ncgen/init.c	/^int ncid;			\/* handle for netCDF *\/$/;"	v
ncid	src/utils/ncgen/ncgen.h	/^extern int ncid;		\/* handle for netCDF *\/$/;"	x
ncio	src/lib/ncio.h	/^struct ncio {$/;"	s
ncio	src/lib/ncio.h	/^typedef struct ncio ncio;	\/* forward reference *\/$/;"	t	typeref:struct:ncio
ncio::collective_fh	src/lib/ncio.h	/^	MPI_File collective_fh;$/;"	m	struct:ncio	access:public
ncio::comm	src/lib/ncio.h	/^	MPI_Comm comm;$/;"	m	struct:ncio	access:public
ncio::fd	src/lib/ncio.h	/^	NCIO_CONST int fd;$/;"	m	struct:ncio	access:public
ncio::filename	src/lib/ncio.h	/^	char* filename;$/;"	m	struct:ncio	access:public
ncio::free	src/lib/ncio.h	/^	ncmpiio_freefunc *NCIO_CONST free; \/* Implementation private *\/$/;"	m	struct:ncio	access:public
ncio::get	src/lib/ncio.h	/^	ncmpiio_getfunc *NCIO_CONST get;$/;"	m	struct:ncio	access:public
ncio::independent_fh	src/lib/ncio.h	/^	MPI_File independent_fh;$/;"	m	struct:ncio	access:public
ncio::ioflags	src/lib/ncio.h	/^	int ioflags;$/;"	m	struct:ncio	access:public
ncio::move	src/lib/ncio.h	/^	ncmpiio_movefunc *NCIO_CONST move;$/;"	m	struct:ncio	access:public
ncio::mpiinfo	src/lib/ncio.h	/^	MPI_Info mpiinfo;$/;"	m	struct:ncio	access:public
ncio::mpioflags	src/lib/ncio.h	/^	int mpioflags;$/;"	m	struct:ncio	access:public
ncio::mpiomode	src/lib/ncio.h	/^	int mpiomode;$/;"	m	struct:ncio	access:public
ncio::path	src/lib/ncio.h	/^	const char *path;$/;"	m	struct:ncio	access:public
ncio::pvt	src/lib/ncio.h	/^	void *NCIO_CONST pvt;$/;"	m	struct:ncio	access:public
ncio::rel	src/lib/ncio.h	/^	ncmpiio_relfunc *NCIO_CONST rel;$/;"	m	struct:ncio	access:public
ncio::sync	src/lib/ncio.h	/^	ncmpiio_syncfunc *NCIO_CONST sync;$/;"	m	struct:ncio	access:public
nciop	src/lib/nc.h	/^	ncio *nciop;$/;"	m	struct:NC	access:public
nciop	src/lib/nc.h	/^  ncio *nciop;		$/;"	m	struct:bufferinfo	access:public
ncmagic	src/lib/header.c	/^static const schar ncmagic[] = {'C', 'D', 'F', 0x02}; $/;"	v	file:
ncmagic	src/lib/validator.c	/^static const schar ncmagic[] = {'C', 'D', 'F', 0x01}; $/;"	v	file:
ncmagic1	src/lib/header.c	/^static const schar ncmagic1[] = {'C', 'D', 'F', 0x01}; $/;"	v	file:
ncmagic2	src/lib/header.c	/^static const schar ncmagic2[] = {'C', 'D', 'F', 0x05}; $/;"	v	file:
ncmpi_abort	src/lib/mpinetcdf.c	/^ncmpi_abort(int ncid) {$/;"	f	signature:(int ncid)
ncmpi_abort	src/lib/pnetcdf.h	/^int ncmpi_abort(int ncid);$/;"	p	signature:(int ncid)
ncmpi_advise	src/utils/ncdump/dumplib.c	19;"	d	file:
ncmpi_begin_indep_data	src/lib/mpinetcdf.c	/^ncmpi_begin_indep_data(int ncid) {$/;"	f	signature:(int ncid)
ncmpi_begin_indep_data	src/lib/pnetcdf.h	/^int ncmpi_begin_indep_data(int ncid);$/;"	p	signature:(int ncid)
ncmpi_cancel	src/lib/nonblocking.c	/^ncmpi_cancel(int  ncid,$/;"	f	signature:(int ncid, int num_req, int *req_ids, int *statuses)
ncmpi_cancel	src/lib/pnetcdf.h	/^int ncmpi_cancel(int ncid, int num, int *requests, int *statuses);$/;"	p	signature:(int ncid, int num, int *requests, int *statuses)
ncmpi_close	src/lib/mpinetcdf.c	/^ncmpi_close(int ncid) {$/;"	f	signature:(int ncid)
ncmpi_close	src/lib/pnetcdf.h	/^int ncmpi_close(int ncid);$/;"	p	signature:(int ncid)
ncmpi_copy_att	src/lib/attr.c	/^ncmpi_copy_att(int ncid_in, int varid_in, const char *name, int ncid_out, int ovarid)$/;"	f	signature:(int ncid_in, int varid_in, const char *name, int ncid_out, int ovarid)
ncmpi_copy_att	src/lib/nc.h	/^ncmpi_copy_att(int ncid_in, int varid_in, const char *name, $/;"	p	signature:(int ncid_in, int varid_in, const char *name, int ncid_out, int ovarid)
ncmpi_copy_att	src/lib/pnetcdf.h	/^int ncmpi_copy_att(int ncid_in, int varid_in, const char *name,$/;"	p	signature:(int ncid_in, int varid_in, const char *name, int ncid_out, int varid_out)
ncmpi_create	src/lib/mpinetcdf.c	/^ncmpi_create(MPI_Comm    comm,$/;"	f	signature:(MPI_Comm comm, const char *path, int cmode, MPI_Info info, int *ncidp)
ncmpi_create	src/lib/pnetcdf.h	/^int ncmpi_create(MPI_Comm comm, const char *path, int cmode, MPI_Info info, int *ncidp); $/;"	p	signature:(MPI_Comm comm, const char *path, int cmode, MPI_Info info, int *ncidp)
ncmpi_create_buffer	src/utils/ncgen/ncgenyy.c	/^    YY_BUFFER_STATE ncmpi_create_buffer  (FILE * file, int  size )$/;"	f	signature:(FILE * file, int size )
ncmpi_create_buffer	src/utils/ncgen/ncgenyy.c	/^YY_BUFFER_STATE ncmpi_create_buffer (FILE *file,int size  );$/;"	p	file:	signature:(FILE *file,int size )
ncmpi_def_dim	src/lib/dim.c	/^ncmpi_def_dim(int ncid, const char *name, MPI_Offset size, int *dimidp)$/;"	f	signature:(int ncid, const char *name, MPI_Offset size, int *dimidp)
ncmpi_def_dim	src/lib/nc.h	/^ncmpi_def_dim(int ncid, const char *name, MPI_Offset size, int *dimidp);$/;"	p	signature:(int ncid, const char *name, MPI_Offset size, int *dimidp)
ncmpi_def_dim	src/lib/pnetcdf.h	/^int ncmpi_def_dim(int ncid, const char *name, MPI_Offset len, int *idp);$/;"	p	signature:(int ncid, const char *name, MPI_Offset len, int *idp)
ncmpi_def_var	src/lib/nc.h	/^ncmpi_def_var( int ncid, const char *name, nc_type type,$/;"	p	signature:( int ncid, const char *name, nc_type type, int ndims, const int *dimidsp, int *varidp)
ncmpi_def_var	src/lib/pnetcdf.h	/^int ncmpi_def_var(int ncid, const char *name, nc_type xtype, $/;"	p	signature:(int ncid, const char *name, nc_type xtype, int ndims, const int *dimidsp, int *varidp)
ncmpi_def_var	src/lib/var.c	/^ncmpi_def_var( int ncid, const char *name, nc_type type,$/;"	f	signature:( int ncid, const char *name, nc_type type, int ndims, const int *dimids, int *varidp)
ncmpi_del_att	src/lib/attr.c	/^ncmpi_del_att(int ncid, int varid, const char *name)$/;"	f	signature:(int ncid, int varid, const char *name)
ncmpi_del_att	src/lib/nc.h	/^ncmpi_del_att(int ncid, int varid, const char *name);$/;"	p	signature:(int ncid, int varid, const char *name)
ncmpi_del_att	src/lib/pnetcdf.h	/^int ncmpi_del_att(int ncid, int varid, const char *name);$/;"	p	signature:(int ncid, int varid, const char *name)
ncmpi_delete	src/lib/mpinetcdf.c	/^ncmpi_delete(char     *filename,$/;"	f	signature:(char *filename, MPI_Info info)
ncmpi_delete	src/lib/pnetcdf.h	/^int ncmpi_delete(char *filename, MPI_Info info);$/;"	p	signature:(char *filename, MPI_Info info)
ncmpi_delete_buffer	src/utils/ncgen/ncgenyy.c	/^    void ncmpi_delete_buffer (YY_BUFFER_STATE  b )$/;"	f	signature:(YY_BUFFER_STATE b )
ncmpi_delete_buffer	src/utils/ncgen/ncgenyy.c	/^void ncmpi_delete_buffer (YY_BUFFER_STATE b  );$/;"	p	file:	signature:(YY_BUFFER_STATE b )
ncmpi_diff	test/mcoll_perf/mcoll_perf.c	/^int ncmpi_diff(char *filename1, char *filename2) {$/;"	f	signature:(char *filename1, char *filename2)
ncmpi_end_indep_data	src/lib/mpinetcdf.c	/^ncmpi_end_indep_data(int ncid) {$/;"	f	signature:(int ncid)
ncmpi_end_indep_data	src/lib/pnetcdf.h	/^int ncmpi_end_indep_data(int ncid);$/;"	p	signature:(int ncid)
ncmpi_enddef	src/lib/mpinetcdf.c	/^ncmpi_enddef(int ncid) {$/;"	f	signature:(int ncid)
ncmpi_enddef	src/lib/pnetcdf.h	/^int ncmpi_enddef(int ncid);$/;"	p	signature:(int ncid)
ncmpi_flex_debug	src/utils/ncgen/ncgenyy.c	/^extern int ncmpi_flex_debug;$/;"	x
ncmpi_flex_debug	src/utils/ncgen/ncgenyy.c	/^int ncmpi_flex_debug = 0;$/;"	v
ncmpi_flush_buffer	src/utils/ncgen/ncgenyy.c	/^    void ncmpi_flush_buffer (YY_BUFFER_STATE  b )$/;"	f	signature:(YY_BUFFER_STATE b )
ncmpi_flush_buffer	src/utils/ncgen/ncgenyy.c	/^void ncmpi_flush_buffer (YY_BUFFER_STATE b  );$/;"	p	file:	signature:(YY_BUFFER_STATE b )
ncmpi_get_att_double	src/lib/attr.c	/^ncmpi_get_att_double(int ncid, int varid, const char *name, double *tp)$/;"	f	signature:(int ncid, int varid, const char *name, double *tp)
ncmpi_get_att_double	src/lib/nc.h	/^ncmpi_get_att_double(int ncid, int varid, const char *name, double *tp);$/;"	p	signature:(int ncid, int varid, const char *name, double *tp)
ncmpi_get_att_double	src/lib/pnetcdf.h	/^int ncmpi_get_att_double(int ncid, int varid, const char *name, double *ip);$/;"	p	signature:(int ncid, int varid, const char *name, double *ip)
ncmpi_get_att_float	src/lib/attr.c	/^ncmpi_get_att_float(int ncid, int varid, const char *name, float *tp)$/;"	f	signature:(int ncid, int varid, const char *name, float *tp)
ncmpi_get_att_float	src/lib/nc.h	/^ncmpi_get_att_float(int ncid, int varid, const char *name, float *tp);$/;"	p	signature:(int ncid, int varid, const char *name, float *tp)
ncmpi_get_att_float	src/lib/pnetcdf.h	/^int ncmpi_get_att_float(int ncid, int varid, const char *name, float *ip);$/;"	p	signature:(int ncid, int varid, const char *name, float *ip)
ncmpi_get_att_int	src/lib/attr.c	/^ncmpi_get_att_int(int ncid, int varid, const char *name, int *tp)$/;"	f	signature:(int ncid, int varid, const char *name, int *tp)
ncmpi_get_att_int	src/lib/nc.h	/^ncmpi_get_att_int(int ncid, int varid, const char *name, int *tp);$/;"	p	signature:(int ncid, int varid, const char *name, int *tp)
ncmpi_get_att_int	src/lib/pnetcdf.h	/^int ncmpi_get_att_int(int ncid, int varid, const char *name, int *ip);$/;"	p	signature:(int ncid, int varid, const char *name, int *ip)
ncmpi_get_att_long	src/lib/attr.c	/^ncmpi_get_att_long(int ncid, int varid, const char *name, long *tp)$/;"	f	signature:(int ncid, int varid, const char *name, long *tp)
ncmpi_get_att_long	src/lib/nc.h	/^ncmpi_get_att_long(int ncid, int varid, const char *name, long *tp);$/;"	p	signature:(int ncid, int varid, const char *name, long *tp)
ncmpi_get_att_long	src/lib/pnetcdf.h	/^int ncmpi_get_att_long(int ncid, int varid, const char *name, long *ip);$/;"	p	signature:(int ncid, int varid, const char *name, long *ip)
ncmpi_get_att_schar	src/lib/attr.c	/^ncmpi_get_att_schar(int ncid, int varid, const char *name, signed char *tp)$/;"	f	signature:(int ncid, int varid, const char *name, signed char *tp)
ncmpi_get_att_schar	src/lib/nc.h	/^ncmpi_get_att_schar(int ncid, int varid, const char *name, signed char *tp);$/;"	p	signature:(int ncid, int varid, const char *name, signed char *tp)
ncmpi_get_att_schar	src/lib/pnetcdf.h	/^int ncmpi_get_att_schar(int ncid, int varid, const char *name,$/;"	p	signature:(int ncid, int varid, const char *name, signed char *ip)
ncmpi_get_att_short	src/lib/attr.c	/^ncmpi_get_att_short(int ncid, int varid, const char *name, short *tp)$/;"	f	signature:(int ncid, int varid, const char *name, short *tp)
ncmpi_get_att_short	src/lib/nc.h	/^ncmpi_get_att_short(int ncid, int varid, const char *name, short *tp);$/;"	p	signature:(int ncid, int varid, const char *name, short *tp)
ncmpi_get_att_short	src/lib/pnetcdf.h	/^int ncmpi_get_att_short(int ncid, int varid, const char *name, short *ip);$/;"	p	signature:(int ncid, int varid, const char *name, short *ip)
ncmpi_get_att_text	src/lib/attr.c	/^ncmpi_get_att_text(int ncid, int varid, const char *name, char *str)$/;"	f	signature:(int ncid, int varid, const char *name, char *str)
ncmpi_get_att_text	src/lib/nc.h	/^ncmpi_get_att_text(int ncid, int varid, const char *name, char *str);$/;"	p	signature:(int ncid, int varid, const char *name, char *str)
ncmpi_get_att_text	src/lib/pnetcdf.h	/^int ncmpi_get_att_text(int ncid, int varid, const char *name, char *ip);$/;"	p	signature:(int ncid, int varid, const char *name, char *ip)
ncmpi_get_att_uchar	src/lib/attr.c	/^ncmpi_get_att_uchar(int ncid, int varid, const char *name, unsigned char *tp)$/;"	f	signature:(int ncid, int varid, const char *name, unsigned char *tp)
ncmpi_get_att_uchar	src/lib/nc.h	/^ncmpi_get_att_uchar(int ncid, int varid, const char *name, unsigned char *tp);$/;"	p	signature:(int ncid, int varid, const char *name, unsigned char *tp)
ncmpi_get_att_uchar	src/lib/pnetcdf.h	/^int ncmpi_get_att_uchar(int ncid, int varid, const char *name,$/;"	p	signature:(int ncid, int varid, const char *name, unsigned char *ip)
ncmpi_get_default_format	src/lib/nc.h	/^ncmpi_get_default_format(void);$/;"	p	signature:(void)
ncmpi_get_file_info	src/lib/mpinetcdf.c	/^ncmpi_get_file_info(int       ncid,$/;"	f	signature:(int ncid, MPI_Info *info_used)
ncmpi_get_file_info	src/lib/pnetcdf.h	/^int ncmpi_get_file_info(int ncid, MPI_Info *info_used);$/;"	p	signature:(int ncid, MPI_Info *info_used)
ncmpi_get_file_version	test/nc_test/test_write.c	/^ncmpi_get_file_version(char *path, int *version)$/;"	f	file:	signature:(char *path, int *version)
ncmpi_get_var	src/lib/getput_var.c	/^ncmpi_get_var(int           ncid,$/;"	f	signature:(int ncid, int varid, void *buf, MPI_Offset bufcount, MPI_Datatype datatype)
ncmpi_get_var	src/lib/pnetcdf.h	/^int ncmpi_get_var(int ncid, int varid, void *buf, MPI_Offset bufcount,$/;"	p	signature:(int ncid, int varid, void *buf, MPI_Offset bufcount, MPI_Datatype datatype)
ncmpi_get_var1	src/lib/getput_var1.c	/^ncmpi_get_var1(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], void *buf, MPI_Offset bufcount, MPI_Datatype datatype)
ncmpi_get_var1	src/lib/pnetcdf.h	/^int ncmpi_get_var1(int ncid, int varid, const MPI_Offset index[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset index[], void *buf, MPI_Offset bufcount, MPI_Datatype datatype)
ncmpi_get_var1_double	src/lib/getput_var1.c	/^ncmpi_get_var1_double(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], double *ip)
ncmpi_get_var1_double	src/lib/pnetcdf.h	/^int ncmpi_get_var1_double(int ncid, int varid, const MPI_Offset index[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset index[], double *ip)
ncmpi_get_var1_float	src/lib/getput_var1.c	/^ncmpi_get_var1_float(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], float *ip)
ncmpi_get_var1_float	src/lib/pnetcdf.h	/^int ncmpi_get_var1_float(int ncid, int varid, const MPI_Offset index[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset index[], float *ip)
ncmpi_get_var1_int	src/lib/getput_var1.c	/^ncmpi_get_var1_int(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], int *ip)
ncmpi_get_var1_int	src/lib/pnetcdf.h	/^int ncmpi_get_var1_int(int ncid, int varid, const MPI_Offset index[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset index[], int *ip)
ncmpi_get_var1_long	src/lib/getput_var1.c	/^ncmpi_get_var1_long(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], long *ip)
ncmpi_get_var1_long	src/lib/pnetcdf.h	/^int ncmpi_get_var1_long(int ncid, int varid, const MPI_Offset index[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset index[], long *ip)
ncmpi_get_var1_schar	src/lib/getput_var1.c	/^ncmpi_get_var1_schar(int                ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], signed char *ip)
ncmpi_get_var1_schar	src/lib/pnetcdf.h	/^int ncmpi_get_var1_schar(int ncid, int varid, const MPI_Offset index[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset index[], signed char *ip)
ncmpi_get_var1_short	src/lib/getput_var1.c	/^ncmpi_get_var1_short(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], short *ip)
ncmpi_get_var1_short	src/lib/pnetcdf.h	/^int ncmpi_get_var1_short(int ncid, int varid, const MPI_Offset index[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset index[], short *ip)
ncmpi_get_var1_text	src/lib/getput_var1.c	/^ncmpi_get_var1_text(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], char *ip)
ncmpi_get_var1_text	src/lib/pnetcdf.h	/^int ncmpi_get_var1_text(int ncid, int varid, const MPI_Offset index[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset index[], char *ip)
ncmpi_get_var1_uchar	src/lib/getput_var1.c	/^ncmpi_get_var1_uchar(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], unsigned char *ip)
ncmpi_get_var1_uchar	src/lib/pnetcdf.h	/^int ncmpi_get_var1_uchar(int ncid, int varid, const MPI_Offset index[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset index[], unsigned char *ip)
ncmpi_get_var_all	src/lib/getput_var.c	/^ncmpi_get_var_all(int           ncid,$/;"	f	signature:(int ncid, int varid, void *buf, MPI_Offset bufcount, MPI_Datatype datatype)
ncmpi_get_var_all	src/lib/pnetcdf.h	/^int ncmpi_get_var_all(int ncid, int varid, void *buf, MPI_Offset bufcount,$/;"	p	signature:(int ncid, int varid, void *buf, MPI_Offset bufcount, MPI_Datatype datatype)
ncmpi_get_var_double	src/lib/getput_var.c	/^ncmpi_get_var_double(int     ncid,$/;"	f	signature:(int ncid, int varid, double *ip)
ncmpi_get_var_double	src/lib/pnetcdf.h	/^int ncmpi_get_var_double(int ncid, int varid, double *ip);$/;"	p	signature:(int ncid, int varid, double *ip)
ncmpi_get_var_double_all	src/lib/getput_var.c	/^ncmpi_get_var_double_all(int     ncid,$/;"	f	signature:(int ncid, int varid, double *ip)
ncmpi_get_var_double_all	src/lib/pnetcdf.h	/^int ncmpi_get_var_double_all(int ncid, int varid, double *ip);$/;"	p	signature:(int ncid, int varid, double *ip)
ncmpi_get_var_float	src/lib/getput_var.c	/^ncmpi_get_var_float(int    ncid,$/;"	f	signature:(int ncid, int varid, float *ip)
ncmpi_get_var_float	src/lib/pnetcdf.h	/^int ncmpi_get_var_float(int ncid, int varid, float *ip);$/;"	p	signature:(int ncid, int varid, float *ip)
ncmpi_get_var_float_all	src/lib/getput_var.c	/^ncmpi_get_var_float_all(int    ncid,$/;"	f	signature:(int ncid, int varid, float *ip)
ncmpi_get_var_float_all	src/lib/pnetcdf.h	/^int ncmpi_get_var_float_all(int ncid, int varid, float *ip);$/;"	p	signature:(int ncid, int varid, float *ip)
ncmpi_get_var_int	src/lib/getput_var.c	/^ncmpi_get_var_int(int  ncid,$/;"	f	signature:(int ncid, int varid, int *ip)
ncmpi_get_var_int	src/lib/pnetcdf.h	/^int ncmpi_get_var_int(int ncid, int varid, int *ip);$/;"	p	signature:(int ncid, int varid, int *ip)
ncmpi_get_var_int_all	src/lib/getput_var.c	/^ncmpi_get_var_int_all(int  ncid,$/;"	f	signature:(int ncid, int varid, int *ip)
ncmpi_get_var_int_all	src/lib/pnetcdf.h	/^int ncmpi_get_var_int_all(int ncid, int varid, int *ip);$/;"	p	signature:(int ncid, int varid, int *ip)
ncmpi_get_var_long	src/lib/getput_var.c	/^ncmpi_get_var_long(int   ncid,$/;"	f	signature:(int ncid, int varid, long *ip)
ncmpi_get_var_long	src/lib/pnetcdf.h	/^int ncmpi_get_var_long(int ncid, int varid, long *ip);$/;"	p	signature:(int ncid, int varid, long *ip)
ncmpi_get_var_long_all	src/lib/getput_var.c	/^ncmpi_get_var_long_all(int   ncid,$/;"	f	signature:(int ncid, int varid, long *ip)
ncmpi_get_var_long_all	src/lib/pnetcdf.h	/^int ncmpi_get_var_long_all(int ncid, int varid, long *ip);$/;"	p	signature:(int ncid, int varid, long *ip)
ncmpi_get_var_schar	src/lib/getput_var.c	/^ncmpi_get_var_schar(int          ncid,$/;"	f	signature:(int ncid, int varid, signed char *ip)
ncmpi_get_var_schar	src/lib/pnetcdf.h	/^int ncmpi_get_var_schar(int ncid, int varid, signed char *ip);$/;"	p	signature:(int ncid, int varid, signed char *ip)
ncmpi_get_var_schar_all	src/lib/getput_var.c	/^ncmpi_get_var_schar_all(int          ncid,$/;"	f	signature:(int ncid, int varid, signed char *ip)
ncmpi_get_var_schar_all	src/lib/pnetcdf.h	/^int ncmpi_get_var_schar_all(int ncid, int varid, signed char *ip);$/;"	p	signature:(int ncid, int varid, signed char *ip)
ncmpi_get_var_short	src/lib/getput_var.c	/^ncmpi_get_var_short(int    ncid,$/;"	f	signature:(int ncid, int varid, short *ip)
ncmpi_get_var_short	src/lib/pnetcdf.h	/^int ncmpi_get_var_short(int ncid, int varid, short *ip);$/;"	p	signature:(int ncid, int varid, short *ip)
ncmpi_get_var_short_all	src/lib/getput_var.c	/^ncmpi_get_var_short_all(int    ncid,$/;"	f	signature:(int ncid, int varid, short *ip)
ncmpi_get_var_short_all	src/lib/pnetcdf.h	/^int ncmpi_get_var_short_all(int ncid, int varid, short *ip);$/;"	p	signature:(int ncid, int varid, short *ip)
ncmpi_get_var_text	src/lib/getput_var.c	/^ncmpi_get_var_text(int   ncid,$/;"	f	signature:(int ncid, int varid, char *ip)
ncmpi_get_var_text	src/lib/pnetcdf.h	/^int ncmpi_get_var_text(int ncid, int varid, char *ip);$/;"	p	signature:(int ncid, int varid, char *ip)
ncmpi_get_var_text_all	src/lib/getput_var.c	/^ncmpi_get_var_text_all(int   ncid,$/;"	f	signature:(int ncid, int varid, char *ip)
ncmpi_get_var_text_all	src/lib/pnetcdf.h	/^int ncmpi_get_var_text_all(int ncid, int varid, char *ip);$/;"	p	signature:(int ncid, int varid, char *ip)
ncmpi_get_var_uchar	src/lib/getput_var.c	/^ncmpi_get_var_uchar(int            ncid,$/;"	f	signature:(int ncid, int varid, unsigned char *ip)
ncmpi_get_var_uchar	src/lib/pnetcdf.h	/^int ncmpi_get_var_uchar(int ncid, int varid, unsigned char *ip);$/;"	p	signature:(int ncid, int varid, unsigned char *ip)
ncmpi_get_var_uchar_all	src/lib/getput_var.c	/^ncmpi_get_var_uchar_all(int            ncid,$/;"	f	signature:(int ncid, int varid, unsigned char *ip)
ncmpi_get_var_uchar_all	src/lib/pnetcdf.h	/^int ncmpi_get_var_uchar_all(int ncid, int varid, unsigned char *ip);$/;"	p	signature:(int ncid, int varid, unsigned char *ip)
ncmpi_get_vara	src/lib/getput_vara.c	/^ncmpi_get_vara(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], void *buf, MPI_Offset bufcount, MPI_Datatype datatype)
ncmpi_get_vara	src/lib/pnetcdf.h	/^int ncmpi_get_vara(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], void *buf, MPI_Offset bufcount, MPI_Datatype datatype)
ncmpi_get_vara_all	src/lib/getput_vara.c	/^ncmpi_get_vara_all(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], void *buf, MPI_Offset bufcount, MPI_Datatype datatype)
ncmpi_get_vara_all	src/lib/pnetcdf.h	/^int ncmpi_get_vara_all(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], void *buf, MPI_Offset bufcount, MPI_Datatype datatype)
ncmpi_get_vara_double	src/lib/getput_vara.c	/^ncmpi_get_vara_double(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], double *ip)
ncmpi_get_vara_double	src/lib/pnetcdf.h	/^int ncmpi_get_vara_double(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], double *ip)
ncmpi_get_vara_double_all	src/lib/getput_vara.c	/^ncmpi_get_vara_double_all(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], double *ip)
ncmpi_get_vara_double_all	src/lib/pnetcdf.h	/^int ncmpi_get_vara_double_all(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], double *ip)
ncmpi_get_vara_float	src/lib/getput_vara.c	/^ncmpi_get_vara_float(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], float *ip)
ncmpi_get_vara_float	src/lib/pnetcdf.h	/^int ncmpi_get_vara_float(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], float *ip)
ncmpi_get_vara_float_all	src/lib/getput_vara.c	/^ncmpi_get_vara_float_all(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], float *ip)
ncmpi_get_vara_float_all	src/lib/pnetcdf.h	/^int ncmpi_get_vara_float_all(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], float *ip)
ncmpi_get_vara_int	src/lib/getput_vara.c	/^ncmpi_get_vara_int(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], int *ip)
ncmpi_get_vara_int	src/lib/pnetcdf.h	/^int ncmpi_get_vara_int(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], int *ip)
ncmpi_get_vara_int_all	src/lib/getput_vara.c	/^ncmpi_get_vara_int_all(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], int *ip)
ncmpi_get_vara_int_all	src/lib/pnetcdf.h	/^int ncmpi_get_vara_int_all(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], int *ip)
ncmpi_get_vara_long	src/lib/getput_vara.c	/^ncmpi_get_vara_long(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], long *ip)
ncmpi_get_vara_long	src/lib/pnetcdf.h	/^int ncmpi_get_vara_long(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], long *ip)
ncmpi_get_vara_long_all	src/lib/getput_vara.c	/^ncmpi_get_vara_long_all(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], long *ip)
ncmpi_get_vara_long_all	src/lib/pnetcdf.h	/^int ncmpi_get_vara_long_all(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], long *ip)
ncmpi_get_vara_schar	src/lib/getput_vara.c	/^ncmpi_get_vara_schar(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], signed char *ip)
ncmpi_get_vara_schar	src/lib/pnetcdf.h	/^int ncmpi_get_vara_schar(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], signed char *ip)
ncmpi_get_vara_schar_all	src/lib/getput_vara.c	/^ncmpi_get_vara_schar_all(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], signed char *ip)
ncmpi_get_vara_schar_all	src/lib/pnetcdf.h	/^int ncmpi_get_vara_schar_all(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], signed char *ip)
ncmpi_get_vara_short	src/lib/getput_vara.c	/^ncmpi_get_vara_short(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], short *ip)
ncmpi_get_vara_short	src/lib/pnetcdf.h	/^int ncmpi_get_vara_short(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], short *ip)
ncmpi_get_vara_short_all	src/lib/getput_vara.c	/^ncmpi_get_vara_short_all(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], short *ip)
ncmpi_get_vara_short_all	src/lib/pnetcdf.h	/^int ncmpi_get_vara_short_all(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], short *ip)
ncmpi_get_vara_text	src/lib/getput_vara.c	/^ncmpi_get_vara_text(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], char *ip)
ncmpi_get_vara_text	src/lib/pnetcdf.h	/^int ncmpi_get_vara_text(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], char *ip)
ncmpi_get_vara_text_all	src/lib/getput_vara.c	/^ncmpi_get_vara_text_all(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], char *ip)
ncmpi_get_vara_text_all	src/lib/pnetcdf.h	/^int ncmpi_get_vara_text_all(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], char *ip)
ncmpi_get_vara_uchar	src/lib/getput_vara.c	/^ncmpi_get_vara_uchar(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], unsigned char *ip)
ncmpi_get_vara_uchar	src/lib/pnetcdf.h	/^int ncmpi_get_vara_uchar(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], unsigned char *ip)
ncmpi_get_vara_uchar_all	src/lib/getput_vara.c	/^ncmpi_get_vara_uchar_all(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], unsigned char *ip)
ncmpi_get_vara_uchar_all	src/lib/pnetcdf.h	/^int ncmpi_get_vara_uchar_all(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], unsigned char *ip)
ncmpi_get_varm	src/lib/getput_varm.c	/^ncmpi_get_varm(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], void *buf, MPI_Offset bufcount, MPI_Datatype datatype)
ncmpi_get_varm	src/lib/pnetcdf.h	/^int ncmpi_get_varm(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], void *buf, MPI_Offset bufcount, MPI_Datatype datatype)
ncmpi_get_varm_all	src/lib/getput_varm.c	/^ncmpi_get_varm_all(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], void *buf, MPI_Offset bufcount, MPI_Datatype datatype)
ncmpi_get_varm_all	src/lib/pnetcdf.h	/^int ncmpi_get_varm_all(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], void *buf, MPI_Offset bufcount, MPI_Datatype datatype)
ncmpi_get_varm_double	src/lib/getput_varm.c	/^ncmpi_get_varm_double(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], double *ip)
ncmpi_get_varm_double	src/lib/pnetcdf.h	/^int ncmpi_get_varm_double(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], double *ip)
ncmpi_get_varm_double_all	src/lib/getput_varm.c	/^ncmpi_get_varm_double_all(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], double *ip)
ncmpi_get_varm_double_all	src/lib/pnetcdf.h	/^int ncmpi_get_varm_double_all(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], double *ip)
ncmpi_get_varm_float	src/lib/getput_varm.c	/^ncmpi_get_varm_float(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], float *ip)
ncmpi_get_varm_float	src/lib/pnetcdf.h	/^int ncmpi_get_varm_float(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], float *ip)
ncmpi_get_varm_float_all	src/lib/getput_varm.c	/^ncmpi_get_varm_float_all(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], float *ip)
ncmpi_get_varm_float_all	src/lib/pnetcdf.h	/^int ncmpi_get_varm_float_all(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], float *ip)
ncmpi_get_varm_int	src/lib/getput_varm.c	/^ncmpi_get_varm_int(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], int *ip)
ncmpi_get_varm_int	src/lib/pnetcdf.h	/^int ncmpi_get_varm_int(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], int *ip)
ncmpi_get_varm_int_all	src/lib/getput_varm.c	/^ncmpi_get_varm_int_all(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], int *ip)
ncmpi_get_varm_int_all	src/lib/pnetcdf.h	/^int ncmpi_get_varm_int_all(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], int *ip)
ncmpi_get_varm_long	src/lib/getput_varm.c	/^ncmpi_get_varm_long(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], long *ip)
ncmpi_get_varm_long	src/lib/pnetcdf.h	/^int ncmpi_get_varm_long(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], long *ip)
ncmpi_get_varm_long_all	src/lib/getput_varm.c	/^ncmpi_get_varm_long_all(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], long *ip)
ncmpi_get_varm_long_all	src/lib/pnetcdf.h	/^int ncmpi_get_varm_long_all(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], long *ip)
ncmpi_get_varm_schar	src/lib/getput_varm.c	/^ncmpi_get_varm_schar(int                ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], signed char *ip)
ncmpi_get_varm_schar	src/lib/pnetcdf.h	/^int ncmpi_get_varm_schar(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], signed char *ip)
ncmpi_get_varm_schar_all	src/lib/getput_varm.c	/^ncmpi_get_varm_schar_all(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], signed char *ip)
ncmpi_get_varm_schar_all	src/lib/pnetcdf.h	/^int ncmpi_get_varm_schar_all(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], signed char *ip)
ncmpi_get_varm_short	src/lib/getput_varm.c	/^ncmpi_get_varm_short(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], short *ip)
ncmpi_get_varm_short	src/lib/pnetcdf.h	/^int ncmpi_get_varm_short(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], short *ip)
ncmpi_get_varm_short_all	src/lib/getput_varm.c	/^ncmpi_get_varm_short_all(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], short *ip)
ncmpi_get_varm_short_all	src/lib/pnetcdf.h	/^int ncmpi_get_varm_short_all(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], short *ip)
ncmpi_get_varm_text	src/lib/getput_varm.c	/^ncmpi_get_varm_text(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], char *ip)
ncmpi_get_varm_text	src/lib/pnetcdf.h	/^int ncmpi_get_varm_text(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], char *ip)
ncmpi_get_varm_text_all	src/lib/getput_varm.c	/^ncmpi_get_varm_text_all(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], char *ip)
ncmpi_get_varm_text_all	src/lib/pnetcdf.h	/^int ncmpi_get_varm_text_all(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], char *ip)
ncmpi_get_varm_uchar	src/lib/getput_varm.c	/^ncmpi_get_varm_uchar(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], unsigned char *ip)
ncmpi_get_varm_uchar	src/lib/pnetcdf.h	/^int ncmpi_get_varm_uchar(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], unsigned char *ip)
ncmpi_get_varm_uchar_all	src/lib/getput_varm.c	/^ncmpi_get_varm_uchar_all(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], unsigned char *ip)
ncmpi_get_varm_uchar_all	src/lib/pnetcdf.h	/^int ncmpi_get_varm_uchar_all(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], unsigned char *ip)
ncmpi_get_vars	src/lib/getput_vars.c	/^ncmpi_get_vars(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], void *buf, MPI_Offset bufcount, MPI_Datatype datatype)
ncmpi_get_vars	src/lib/pnetcdf.h	/^int ncmpi_get_vars(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], void *buf, MPI_Offset bufcount, MPI_Datatype datatype)
ncmpi_get_vars_all	src/lib/getput_vars.c	/^ncmpi_get_vars_all(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], void *buf, MPI_Offset bufcount, MPI_Datatype datatype)
ncmpi_get_vars_all	src/lib/pnetcdf.h	/^int ncmpi_get_vars_all(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], void *buf, MPI_Offset bufcount, MPI_Datatype datatype)
ncmpi_get_vars_double	src/lib/getput_vars.c	/^ncmpi_get_vars_double(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], double *ip)
ncmpi_get_vars_double	src/lib/pnetcdf.h	/^int ncmpi_get_vars_double(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], double *ip)
ncmpi_get_vars_double_all	src/lib/getput_vars.c	/^ncmpi_get_vars_double_all(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], double *ip)
ncmpi_get_vars_double_all	src/lib/pnetcdf.h	/^int ncmpi_get_vars_double_all(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], double *ip)
ncmpi_get_vars_float	src/lib/getput_vars.c	/^ncmpi_get_vars_float(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], float *ip)
ncmpi_get_vars_float	src/lib/pnetcdf.h	/^int ncmpi_get_vars_float(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], float *ip)
ncmpi_get_vars_float_all	src/lib/getput_vars.c	/^ncmpi_get_vars_float_all(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], float *ip)
ncmpi_get_vars_float_all	src/lib/pnetcdf.h	/^int ncmpi_get_vars_float_all(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], float *ip)
ncmpi_get_vars_int	src/lib/getput_vars.c	/^ncmpi_get_vars_int(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], int *ip)
ncmpi_get_vars_int	src/lib/pnetcdf.h	/^int ncmpi_get_vars_int(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], int *ip)
ncmpi_get_vars_int_all	src/lib/getput_vars.c	/^ncmpi_get_vars_int_all(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], int *ip)
ncmpi_get_vars_int_all	src/lib/pnetcdf.h	/^int ncmpi_get_vars_int_all(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], int *ip)
ncmpi_get_vars_long	src/lib/getput_vars.c	/^ncmpi_get_vars_long(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], long *ip)
ncmpi_get_vars_long	src/lib/pnetcdf.h	/^int ncmpi_get_vars_long(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], long *ip)
ncmpi_get_vars_long_all	src/lib/getput_vars.c	/^ncmpi_get_vars_long_all(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], long *ip)
ncmpi_get_vars_long_all	src/lib/pnetcdf.h	/^int ncmpi_get_vars_long_all(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], long *ip)
ncmpi_get_vars_schar	src/lib/getput_vars.c	/^ncmpi_get_vars_schar(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], signed char *ip)
ncmpi_get_vars_schar	src/lib/pnetcdf.h	/^int ncmpi_get_vars_schar(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], signed char *ip)
ncmpi_get_vars_schar_all	src/lib/getput_vars.c	/^ncmpi_get_vars_schar_all(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], signed char *ip)
ncmpi_get_vars_schar_all	src/lib/pnetcdf.h	/^int ncmpi_get_vars_schar_all(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], signed char *ip)
ncmpi_get_vars_short	src/lib/getput_vars.c	/^ncmpi_get_vars_short(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], short *ip)
ncmpi_get_vars_short	src/lib/pnetcdf.h	/^int ncmpi_get_vars_short(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], short *ip)
ncmpi_get_vars_short_all	src/lib/getput_vars.c	/^ncmpi_get_vars_short_all(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], short *ip)
ncmpi_get_vars_short_all	src/lib/pnetcdf.h	/^int ncmpi_get_vars_short_all(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], short *ip)
ncmpi_get_vars_text	src/lib/getput_vars.c	/^ncmpi_get_vars_text(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], char *ip)
ncmpi_get_vars_text	src/lib/pnetcdf.h	/^int ncmpi_get_vars_text(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], char *ip)
ncmpi_get_vars_text_all	src/lib/getput_vars.c	/^ncmpi_get_vars_text_all(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], char *ip)
ncmpi_get_vars_text_all	src/lib/pnetcdf.h	/^int ncmpi_get_vars_text_all(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], char *ip)
ncmpi_get_vars_uchar	src/lib/getput_vars.c	/^ncmpi_get_vars_uchar(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], unsigned char *ip)
ncmpi_get_vars_uchar	src/lib/pnetcdf.h	/^int ncmpi_get_vars_uchar(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], unsigned char *ip)
ncmpi_get_vars_uchar_all	src/lib/getput_vars.c	/^ncmpi_get_vars_uchar_all(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], unsigned char *ip)
ncmpi_get_vars_uchar_all	src/lib/pnetcdf.h	/^int ncmpi_get_vars_uchar_all(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], unsigned char *ip)
ncmpi_iget_var	src/lib/i_getput_var.c	/^ncmpi_iget_var(int           ncid,$/;"	f	signature:(int ncid, int varid, void *buf, MPI_Offset bufcount, MPI_Datatype datatype, int *reqid)
ncmpi_iget_var	src/lib/pnetcdf.h	/^int ncmpi_iget_var(int ncid, int varid, void *buf, MPI_Offset bufcount,$/;"	p	signature:(int ncid, int varid, void *buf, MPI_Offset bufcount, MPI_Datatype datatype, int *request)
ncmpi_iget_var1	src/lib/i_getput_var1.c	/^ncmpi_iget_var1(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset *start, void *buf, MPI_Offset bufcount, MPI_Datatype datatype, int *reqid)
ncmpi_iget_var1	src/lib/pnetcdf.h	/^int ncmpi_iget_var1(int ncid, int varid, const MPI_Offset index[], void *buf,$/;"	p	signature:(int ncid, int varid, const MPI_Offset index[], void *buf, MPI_Offset bufcount, MPI_Datatype datatype, int *request)
ncmpi_iget_var1_double	src/lib/i_getput_var1.c	/^ncmpi_iget_var1_double(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], double *ip, int *reqid)
ncmpi_iget_var1_double	src/lib/pnetcdf.h	/^int ncmpi_iget_var1_double(int ncid, int varid, const MPI_Offset index[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset index[], double *ip, int *request)
ncmpi_iget_var1_float	src/lib/i_getput_var1.c	/^ncmpi_iget_var1_float(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], float *ip, int *reqid)
ncmpi_iget_var1_float	src/lib/pnetcdf.h	/^int ncmpi_iget_var1_float(int ncid, int varid, const MPI_Offset index[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset index[], float *ip, int *request)
ncmpi_iget_var1_int	src/lib/i_getput_var1.c	/^ncmpi_iget_var1_int(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], int *ip, int *reqid)
ncmpi_iget_var1_int	src/lib/pnetcdf.h	/^int ncmpi_iget_var1_int(int ncid, int varid, const MPI_Offset index[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset index[], int *ip, int *request)
ncmpi_iget_var1_long	src/lib/i_getput_var1.c	/^ncmpi_iget_var1_long(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], long *ip, int *reqid)
ncmpi_iget_var1_long	src/lib/pnetcdf.h	/^int ncmpi_iget_var1_long(int ncid, int varid, const MPI_Offset index[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset index[], long *ip, int *request)
ncmpi_iget_var1_schar	src/lib/i_getput_var1.c	/^ncmpi_iget_var1_schar(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], signed char *ip, int *reqid)
ncmpi_iget_var1_schar	src/lib/pnetcdf.h	/^int ncmpi_iget_var1_schar(int ncid, int varid, const MPI_Offset index[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset index[], signed char *ip, int *request)
ncmpi_iget_var1_short	src/lib/i_getput_var1.c	/^ncmpi_iget_var1_short(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], short *ip, int *reqid)
ncmpi_iget_var1_short	src/lib/pnetcdf.h	/^int ncmpi_iget_var1_short(int ncid, int varid, const MPI_Offset index[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset index[], short *ip, int *request)
ncmpi_iget_var1_text	src/lib/i_getput_var1.c	/^ncmpi_iget_var1_text(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], char *ip, int *reqid)
ncmpi_iget_var1_text	src/lib/pnetcdf.h	/^int ncmpi_iget_var1_text(int ncid, int varid, const MPI_Offset index[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset index[], char *ip, int *request)
ncmpi_iget_var1_uchar	src/lib/i_getput_var1.c	/^ncmpi_iget_var1_uchar(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], unsigned char *ip, int *reqid)
ncmpi_iget_var1_uchar	src/lib/pnetcdf.h	/^int ncmpi_iget_var1_uchar(int ncid, int varid, const MPI_Offset index[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset index[], unsigned char *ip, int *request)
ncmpi_iget_var_double	src/lib/i_getput_var.c	/^ncmpi_iget_var_double(int     ncid,$/;"	f	signature:(int ncid, int varid, double *ip, int *reqid)
ncmpi_iget_var_double	src/lib/pnetcdf.h	/^int ncmpi_iget_var_double(int ncid, int varid, double *ip, int *request);$/;"	p	signature:(int ncid, int varid, double *ip, int *request)
ncmpi_iget_var_float	src/lib/i_getput_var.c	/^ncmpi_iget_var_float(int    ncid,$/;"	f	signature:(int ncid, int varid, float *ip, int *reqid)
ncmpi_iget_var_float	src/lib/pnetcdf.h	/^int ncmpi_iget_var_float(int ncid, int varid, float *ip, int *request);$/;"	p	signature:(int ncid, int varid, float *ip, int *request)
ncmpi_iget_var_int	src/lib/i_getput_var.c	/^ncmpi_iget_var_int(int  ncid,$/;"	f	signature:(int ncid, int varid, int *ip, int *reqid)
ncmpi_iget_var_int	src/lib/pnetcdf.h	/^int ncmpi_iget_var_int(int ncid, int varid, int *ip, int *request);$/;"	p	signature:(int ncid, int varid, int *ip, int *request)
ncmpi_iget_var_long	src/lib/i_getput_var.c	/^ncmpi_iget_var_long(int   ncid,$/;"	f	signature:(int ncid, int varid, long *ip, int *reqid)
ncmpi_iget_var_long	src/lib/pnetcdf.h	/^int ncmpi_iget_var_long(int ncid, int varid, long *ip, int *request);$/;"	p	signature:(int ncid, int varid, long *ip, int *request)
ncmpi_iget_var_schar	src/lib/i_getput_var.c	/^ncmpi_iget_var_schar(int          ncid,$/;"	f	signature:(int ncid, int varid, signed char *ip, int *reqid)
ncmpi_iget_var_schar	src/lib/pnetcdf.h	/^int ncmpi_iget_var_schar(int ncid, int varid, signed char *ip, int *request);$/;"	p	signature:(int ncid, int varid, signed char *ip, int *request)
ncmpi_iget_var_short	src/lib/i_getput_var.c	/^ncmpi_iget_var_short(int    ncid,$/;"	f	signature:(int ncid, int varid, short *ip, int *reqid)
ncmpi_iget_var_short	src/lib/pnetcdf.h	/^int ncmpi_iget_var_short(int ncid, int varid, short *ip, int *request);$/;"	p	signature:(int ncid, int varid, short *ip, int *request)
ncmpi_iget_var_text	src/lib/i_getput_var.c	/^ncmpi_iget_var_text(int   ncid,$/;"	f	signature:(int ncid, int varid, char *ip, int *reqid)
ncmpi_iget_var_text	src/lib/pnetcdf.h	/^int ncmpi_iget_var_text(int ncid, int varid, char *ip, int *request);$/;"	p	signature:(int ncid, int varid, char *ip, int *request)
ncmpi_iget_var_uchar	src/lib/i_getput_var.c	/^ncmpi_iget_var_uchar(int            ncid,$/;"	f	signature:(int ncid, int varid, unsigned char *ip, int *reqid)
ncmpi_iget_var_uchar	src/lib/pnetcdf.h	/^int ncmpi_iget_var_uchar(int ncid, int varid, unsigned char *ip, int *request);$/;"	p	signature:(int ncid, int varid, unsigned char *ip, int *request)
ncmpi_iget_vara	src/lib/i_getput_vara.c	/^ncmpi_iget_vara(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset *start, const MPI_Offset *count, void *buf, MPI_Offset bufcount, MPI_Datatype datatype, int *reqid)
ncmpi_iget_vara	src/lib/pnetcdf.h	/^int ncmpi_iget_vara(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], void *buf, MPI_Offset bufcount, MPI_Datatype datatype, int *request)
ncmpi_iget_vara_double	src/lib/i_getput_vara.c	/^ncmpi_iget_vara_double(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], double *ip, int *reqid)
ncmpi_iget_vara_double	src/lib/pnetcdf.h	/^int ncmpi_iget_vara_double(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], double *ip, int *request)
ncmpi_iget_vara_float	src/lib/i_getput_vara.c	/^ncmpi_iget_vara_float(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], float *ip, int *reqid)
ncmpi_iget_vara_float	src/lib/pnetcdf.h	/^int ncmpi_iget_vara_float(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], float *ip, int *request)
ncmpi_iget_vara_int	src/lib/i_getput_vara.c	/^ncmpi_iget_vara_int(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], int *ip, int *reqid)
ncmpi_iget_vara_int	src/lib/pnetcdf.h	/^int ncmpi_iget_vara_int(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], int *ip, int *request)
ncmpi_iget_vara_long	src/lib/i_getput_vara.c	/^ncmpi_iget_vara_long(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], long *ip, int *reqid)
ncmpi_iget_vara_long	src/lib/pnetcdf.h	/^int ncmpi_iget_vara_long(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], long *ip, int *request)
ncmpi_iget_vara_schar	src/lib/i_getput_vara.c	/^ncmpi_iget_vara_schar(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], signed char *ip, int *reqid)
ncmpi_iget_vara_schar	src/lib/pnetcdf.h	/^int ncmpi_iget_vara_schar(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], signed char *ip, int *request)
ncmpi_iget_vara_short	src/lib/i_getput_vara.c	/^ncmpi_iget_vara_short(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], short *ip, int *reqid)
ncmpi_iget_vara_short	src/lib/pnetcdf.h	/^int ncmpi_iget_vara_short(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], short *ip, int *request)
ncmpi_iget_vara_text	src/lib/i_getput_vara.c	/^ncmpi_iget_vara_text(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], char *ip, int *reqid)
ncmpi_iget_vara_text	src/lib/pnetcdf.h	/^int ncmpi_iget_vara_text(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], char *ip, int *request)
ncmpi_iget_vara_uchar	src/lib/i_getput_vara.c	/^ncmpi_iget_vara_uchar(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], unsigned char *ip, int *reqid)
ncmpi_iget_vara_uchar	src/lib/pnetcdf.h	/^int ncmpi_iget_vara_uchar(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], unsigned char *ip, int *request)
ncmpi_iget_varm	src/lib/i_getput_varm.c	/^ncmpi_iget_varm(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], void *buf, MPI_Offset bufcount, MPI_Datatype datatype, int *reqid)
ncmpi_iget_varm	src/lib/pnetcdf.h	/^int ncmpi_iget_varm(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], void *buf, MPI_Offset bufcount, MPI_Datatype datatype, int *request)
ncmpi_iget_varm_double	src/lib/i_getput_varm.c	/^ncmpi_iget_varm_double(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], double *ip, int *reqid)
ncmpi_iget_varm_double	src/lib/pnetcdf.h	/^int ncmpi_iget_varm_double(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], double *ip, int *request)
ncmpi_iget_varm_float	src/lib/i_getput_varm.c	/^ncmpi_iget_varm_float(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], float *ip, int *reqid)
ncmpi_iget_varm_float	src/lib/pnetcdf.h	/^int ncmpi_iget_varm_float(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], float *ip, int *request)
ncmpi_iget_varm_int	src/lib/i_getput_varm.c	/^ncmpi_iget_varm_int(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], int *ip, int *reqid)
ncmpi_iget_varm_int	src/lib/pnetcdf.h	/^int ncmpi_iget_varm_int(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], int *ip, int *request)
ncmpi_iget_varm_long	src/lib/i_getput_varm.c	/^ncmpi_iget_varm_long(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], long *ip, int *reqid)
ncmpi_iget_varm_long	src/lib/pnetcdf.h	/^int ncmpi_iget_varm_long(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], long *ip, int *request)
ncmpi_iget_varm_schar	src/lib/i_getput_varm.c	/^ncmpi_iget_varm_schar(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], signed char *ip, int *reqid)
ncmpi_iget_varm_schar	src/lib/pnetcdf.h	/^int ncmpi_iget_varm_schar(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], signed char *ip, int *request)
ncmpi_iget_varm_short	src/lib/i_getput_varm.c	/^ncmpi_iget_varm_short(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], short *ip, int *reqid)
ncmpi_iget_varm_short	src/lib/pnetcdf.h	/^int ncmpi_iget_varm_short(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], short *ip, int *request)
ncmpi_iget_varm_text	src/lib/i_getput_varm.c	/^ncmpi_iget_varm_text(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], char *ip, int *reqid)
ncmpi_iget_varm_text	src/lib/pnetcdf.h	/^int ncmpi_iget_varm_text(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], char *ip, int *request)
ncmpi_iget_varm_uchar	src/lib/i_getput_varm.c	/^ncmpi_iget_varm_uchar(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], unsigned char *ip, int *reqid)
ncmpi_iget_varm_uchar	src/lib/pnetcdf.h	/^int ncmpi_iget_varm_uchar(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], unsigned char *ip, int *request)
ncmpi_iget_vars	src/lib/i_getput_vars.c	/^ncmpi_iget_vars(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], void *buf, MPI_Offset bufcount, MPI_Datatype datatype, int *reqid)
ncmpi_iget_vars	src/lib/pnetcdf.h	/^int ncmpi_iget_vars(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], void *buf, MPI_Offset bufcount, MPI_Datatype datatype, int *request)
ncmpi_iget_vars_double	src/lib/i_getput_vars.c	/^ncmpi_iget_vars_double(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], double *ip, int *reqid)
ncmpi_iget_vars_double	src/lib/pnetcdf.h	/^int ncmpi_iget_vars_double(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], double *ip, int *request)
ncmpi_iget_vars_float	src/lib/i_getput_vars.c	/^ncmpi_iget_vars_float(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], float *ip, int *reqid)
ncmpi_iget_vars_float	src/lib/pnetcdf.h	/^int ncmpi_iget_vars_float(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], float *ip, int *request)
ncmpi_iget_vars_int	src/lib/i_getput_vars.c	/^ncmpi_iget_vars_int(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], int *ip, int *reqid)
ncmpi_iget_vars_int	src/lib/pnetcdf.h	/^int ncmpi_iget_vars_int(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], int *ip, int *request)
ncmpi_iget_vars_long	src/lib/i_getput_vars.c	/^ncmpi_iget_vars_long(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], long *ip, int *reqid)
ncmpi_iget_vars_long	src/lib/pnetcdf.h	/^int ncmpi_iget_vars_long(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], long *ip, int *request)
ncmpi_iget_vars_schar	src/lib/i_getput_vars.c	/^ncmpi_iget_vars_schar(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], signed char *ip, int *reqid)
ncmpi_iget_vars_schar	src/lib/pnetcdf.h	/^int ncmpi_iget_vars_schar(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], signed char *ip, int *request)
ncmpi_iget_vars_short	src/lib/i_getput_vars.c	/^ncmpi_iget_vars_short(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], short *ip, int *reqid)
ncmpi_iget_vars_short	src/lib/pnetcdf.h	/^int ncmpi_iget_vars_short(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], short *ip, int *request)
ncmpi_iget_vars_text	src/lib/i_getput_vars.c	/^ncmpi_iget_vars_text(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], char *ip, int *reqid)
ncmpi_iget_vars_text	src/lib/pnetcdf.h	/^int ncmpi_iget_vars_text(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], char *ip, int *request)
ncmpi_iget_vars_uchar	src/lib/i_getput_vars.c	/^ncmpi_iget_vars_uchar(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], unsigned char *ip, int *reqid)
ncmpi_iget_vars_uchar	src/lib/pnetcdf.h	/^int ncmpi_iget_vars_uchar(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], unsigned char *ip, int *request)
ncmpi_init_buffer	src/utils/ncgen/ncgenyy.c	/^    static void ncmpi_init_buffer  (YY_BUFFER_STATE  b, FILE * file )$/;"	f	file:	signature:(YY_BUFFER_STATE b, FILE * file )
ncmpi_init_buffer	src/utils/ncgen/ncgenyy.c	/^static void ncmpi_init_buffer (YY_BUFFER_STATE b,FILE *file  );$/;"	p	file:	signature:(YY_BUFFER_STATE b,FILE *file )
ncmpi_inq	src/lib/nc.c	/^ncmpi_inq(int  ncid,$/;"	f	signature:(int ncid, int *ndimsp, int *nvarsp, int *nattsp, int *xtendimp)
ncmpi_inq	src/lib/nc.h	/^ncmpi_inq(int ncid, int *ndimsp, int *nvarsp, int *nattsp, int *xtendimp);$/;"	p	signature:(int ncid, int *ndimsp, int *nvarsp, int *nattsp, int *xtendimp)
ncmpi_inq	src/lib/pnetcdf.h	/^int ncmpi_inq(int ncid, int *ndimsp, int *nvarsp,$/;"	p	signature:(int ncid, int *ndimsp, int *nvarsp, int *ngattsp, int *unlimdimidp)
ncmpi_inq_att	src/lib/attr.c	/^ncmpi_inq_att(int ncid,$/;"	f	signature:(int ncid, int varid, const char *name, nc_type *datatypep, MPI_Offset *lenp)
ncmpi_inq_att	src/lib/nc.h	/^ncmpi_inq_att(int ncid, int varid, const char *name, $/;"	p	signature:(int ncid, int varid, const char *name, nc_type *datatypep, MPI_Offset *lenp)
ncmpi_inq_att	src/lib/pnetcdf.h	/^int ncmpi_inq_att(int ncid, int varid, const char *name,$/;"	p	signature:(int ncid, int varid, const char *name, nc_type *xtypep, MPI_Offset *lenp)
ncmpi_inq_attid	src/lib/attr.c	/^ncmpi_inq_attid(int ncid, int varid, const char *name, int *attnump)$/;"	f	signature:(int ncid, int varid, const char *name, int *attnump)
ncmpi_inq_attid	src/lib/nc.h	/^ncmpi_inq_attid(int ncid, int varid, const char *name, int *attnump);$/;"	p	signature:(int ncid, int varid, const char *name, int *attnump)
ncmpi_inq_attid	src/lib/pnetcdf.h	/^int ncmpi_inq_attid(int ncid, int varid, const char *name, int *idp);$/;"	p	signature:(int ncid, int varid, const char *name, int *idp)
ncmpi_inq_attlen	src/lib/attr.c	/^ncmpi_inq_attlen(int ncid, int varid, const char *name, MPI_Offset *lenp)$/;"	f	signature:(int ncid, int varid, const char *name, MPI_Offset *lenp)
ncmpi_inq_attlen	src/lib/nc.h	/^ncmpi_inq_attlen(int ncid, int varid, const char *name, MPI_Offset *lenp);$/;"	p	signature:(int ncid, int varid, const char *name, MPI_Offset *lenp)
ncmpi_inq_attlen	src/lib/pnetcdf.h	/^int ncmpi_inq_attlen(int ncid, int varid, const char *name,$/;"	p	signature:(int ncid, int varid, const char *name, MPI_Offset *lenp)
ncmpi_inq_attname	src/lib/attr.c	/^ncmpi_inq_attname(int ncid, int varid, int attnum, char *name)$/;"	f	signature:(int ncid, int varid, int attnum, char *name)
ncmpi_inq_attname	src/lib/nc.h	/^ncmpi_inq_attname(int ncid, int varid, int attnum, char *name);$/;"	p	signature:(int ncid, int varid, int attnum, char *name)
ncmpi_inq_attname	src/lib/pnetcdf.h	/^int ncmpi_inq_attname(int ncid, int varid, int attnum, char *name);$/;"	p	signature:(int ncid, int varid, int attnum, char *name)
ncmpi_inq_atttype	src/lib/attr.c	/^ncmpi_inq_atttype(int ncid, int varid, const char *name, nc_type *datatypep)$/;"	f	signature:(int ncid, int varid, const char *name, nc_type *datatypep)
ncmpi_inq_atttype	src/lib/nc.h	/^ncmpi_inq_atttype(int ncid, int varid, const char *name, nc_type *datatypep);$/;"	p	signature:(int ncid, int varid, const char *name, nc_type *datatypep)
ncmpi_inq_atttype	src/lib/pnetcdf.h	/^int ncmpi_inq_atttype(int ncid, int varid, const char *name,$/;"	p	signature:(int ncid, int varid, const char *name, nc_type *xtypep)
ncmpi_inq_dim	src/lib/dim.c	/^ncmpi_inq_dim(int ncid, int dimid, char *name, MPI_Offset *sizep)$/;"	f	signature:(int ncid, int dimid, char *name, MPI_Offset *sizep)
ncmpi_inq_dim	src/lib/nc.h	/^ncmpi_inq_dim(int ncid, int dimid, char *name, MPI_Offset *sizep);$/;"	p	signature:(int ncid, int dimid, char *name, MPI_Offset *sizep)
ncmpi_inq_dim	src/lib/pnetcdf.h	/^int ncmpi_inq_dim(int ncid, int dimid, char *name, MPI_Offset *lenp);$/;"	p	signature:(int ncid, int dimid, char *name, MPI_Offset *lenp)
ncmpi_inq_dimid	src/lib/dim.c	/^ncmpi_inq_dimid(int ncid, const char *name, int *dimid_ptr)$/;"	f	signature:(int ncid, const char *name, int *dimid_ptr)
ncmpi_inq_dimid	src/lib/nc.h	/^ncmpi_inq_dimid(int ncid, const char *name, int *dimid_ptr);$/;"	p	signature:(int ncid, const char *name, int *dimid_ptr)
ncmpi_inq_dimid	src/lib/pnetcdf.h	/^int ncmpi_inq_dimid(int ncid, const char *name, int *idp);$/;"	p	signature:(int ncid, const char *name, int *idp)
ncmpi_inq_dimlen	src/lib/dim.c	/^ncmpi_inq_dimlen(int ncid, int dimid, MPI_Offset *lenp)$/;"	f	signature:(int ncid, int dimid, MPI_Offset *lenp)
ncmpi_inq_dimlen	src/lib/nc.h	/^ncmpi_inq_dimlen(int ncid, int dimid, MPI_Offset *lenp);$/;"	p	signature:(int ncid, int dimid, MPI_Offset *lenp)
ncmpi_inq_dimlen	src/lib/pnetcdf.h	/^int ncmpi_inq_dimlen(int ncid, int dimid, MPI_Offset *lenp);$/;"	p	signature:(int ncid, int dimid, MPI_Offset *lenp)
ncmpi_inq_dimname	src/lib/dim.c	/^ncmpi_inq_dimname(int ncid, int dimid, char *name)$/;"	f	signature:(int ncid, int dimid, char *name)
ncmpi_inq_dimname	src/lib/nc.h	/^ncmpi_inq_dimname(int ncid, int dimid, char *name);$/;"	p	signature:(int ncid, int dimid, char *name)
ncmpi_inq_dimname	src/lib/pnetcdf.h	/^int ncmpi_inq_dimname(int ncid, int dimid, char *name);$/;"	p	signature:(int ncid, int dimid, char *name)
ncmpi_inq_file_format	src/lib/mpinetcdf.c	/^ncmpi_inq_file_format(char *filename,$/;"	f	signature:(char *filename, int *formatp)
ncmpi_inq_file_format	src/lib/pnetcdf.h	/^int ncmpi_inq_file_format(char *filename, int *formatp);$/;"	p	signature:(char *filename, int *formatp)
ncmpi_inq_format	src/lib/mpinetcdf.c	/^ncmpi_inq_format(int  ncid,$/;"	f	signature:(int ncid, int *formatp)
ncmpi_inq_format	src/lib/pnetcdf.h	/^int ncmpi_inq_format(int ncid, int *formatp);$/;"	p	signature:(int ncid, int *formatp)
ncmpi_inq_libvers	src/lib/mpinetcdf.c	/^ncmpi_inq_libvers(void) {$/;"	f	signature:(void)
ncmpi_inq_libvers	src/lib/pnetcdf.h	/^const char* ncmpi_inq_libvers(void);$/;"	p	signature:(void)
ncmpi_inq_natts	src/lib/nc.c	/^ncmpi_inq_natts(int ncid, int *nattsp)$/;"	f	signature:(int ncid, int *nattsp)
ncmpi_inq_natts	src/lib/nc.h	/^ncmpi_inq_natts(int ncid, int *nattsp);$/;"	p	signature:(int ncid, int *nattsp)
ncmpi_inq_natts	src/lib/pnetcdf.h	/^int ncmpi_inq_natts(int ncid, int *ngattsp);$/;"	p	signature:(int ncid, int *ngattsp)
ncmpi_inq_ndims	src/lib/nc.c	/^ncmpi_inq_ndims(int ncid, int *ndimsp)$/;"	f	signature:(int ncid, int *ndimsp)
ncmpi_inq_ndims	src/lib/nc.h	/^ncmpi_inq_ndims(int ncid, int *ndimsp);$/;"	p	signature:(int ncid, int *ndimsp)
ncmpi_inq_ndims	src/lib/pnetcdf.h	/^int ncmpi_inq_ndims(int ncid, int *ndimsp);$/;"	p	signature:(int ncid, int *ndimsp)
ncmpi_inq_nvars	src/lib/nc.c	/^ncmpi_inq_nvars(int ncid, int *nvarsp)$/;"	f	signature:(int ncid, int *nvarsp)
ncmpi_inq_nvars	src/lib/nc.h	/^ncmpi_inq_nvars(int ncid, int *nvarsp);$/;"	p	signature:(int ncid, int *nvarsp)
ncmpi_inq_nvars	src/lib/pnetcdf.h	/^int ncmpi_inq_nvars(int ncid, int *nvarsp);$/;"	p	signature:(int ncid, int *nvarsp)
ncmpi_inq_unlimdim	src/lib/nc.c	/^ncmpi_inq_unlimdim(int ncid, int *xtendimp)$/;"	f	signature:(int ncid, int *xtendimp)
ncmpi_inq_unlimdim	src/lib/nc.h	/^ncmpi_inq_unlimdim(int ncid, int *xtendimp);$/;"	p	signature:(int ncid, int *xtendimp)
ncmpi_inq_unlimdim	src/lib/pnetcdf.h	/^int ncmpi_inq_unlimdim(int ncid, int *unlimdimidp);$/;"	p	signature:(int ncid, int *unlimdimidp)
ncmpi_inq_var	src/lib/nc.h	/^ncmpi_inq_var(int ncid, int varid, char *name, nc_type *typep, $/;"	p	signature:(int ncid, int varid, char *name, nc_type *typep, int *ndimsp, int *dimids, int *nattsp)
ncmpi_inq_var	src/lib/pnetcdf.h	/^int ncmpi_inq_var(int ncid, int varid, char *name,$/;"	p	signature:(int ncid, int varid, char *name, nc_type *xtypep, int *ndimsp, int *dimidsp, int *nattsp)
ncmpi_inq_var	src/lib/var.c	/^ncmpi_inq_var(int ncid,$/;"	f	signature:(int ncid, int varid, char *name, nc_type *typep, int *ndimsp, int *dimids, int *nattsp)
ncmpi_inq_vardimid	src/lib/nc.h	/^ncmpi_inq_vardimid(int ncid, int varid, int *dimids);$/;"	p	signature:(int ncid, int varid, int *dimids)
ncmpi_inq_vardimid	src/lib/pnetcdf.h	/^int ncmpi_inq_vardimid(int ncid, int varid, int *dimidsp);$/;"	p	signature:(int ncid, int varid, int *dimidsp)
ncmpi_inq_vardimid	src/lib/var.c	/^ncmpi_inq_vardimid(int ncid,  int varid, int *dimids)$/;"	f	signature:(int ncid, int varid, int *dimids)
ncmpi_inq_varid	src/lib/nc.h	/^ncmpi_inq_varid(int ncid, const char *name, int *varid_ptr);$/;"	p	signature:(int ncid, const char *name, int *varid_ptr)
ncmpi_inq_varid	src/lib/pnetcdf.h	/^int ncmpi_inq_varid(int ncid, const char *name, int *varidp);$/;"	p	signature:(int ncid, const char *name, int *varidp)
ncmpi_inq_varid	src/lib/var.c	/^ncmpi_inq_varid(int ncid, const char *name, int *varid_ptr)$/;"	f	signature:(int ncid, const char *name, int *varid_ptr)
ncmpi_inq_varname	src/lib/nc.h	/^ncmpi_inq_varname(int ncid, int varid, char *name);$/;"	p	signature:(int ncid, int varid, char *name)
ncmpi_inq_varname	src/lib/pnetcdf.h	/^int ncmpi_inq_varname(int ncid, int varid, char *name);$/;"	p	signature:(int ncid, int varid, char *name)
ncmpi_inq_varname	src/lib/var.c	/^ncmpi_inq_varname(int ncid,  int varid, char *name)$/;"	f	signature:(int ncid, int varid, char *name)
ncmpi_inq_varnatts	src/lib/nc.h	/^ncmpi_inq_varnatts(int ncid, int varid, int *nattsp);$/;"	p	signature:(int ncid, int varid, int *nattsp)
ncmpi_inq_varnatts	src/lib/pnetcdf.h	/^int ncmpi_inq_varnatts(int ncid, int varid, int *nattsp);$/;"	p	signature:(int ncid, int varid, int *nattsp)
ncmpi_inq_varnatts	src/lib/var.c	/^ncmpi_inq_varnatts(int ncid,  int varid, int *nattsp)$/;"	f	signature:(int ncid, int varid, int *nattsp)
ncmpi_inq_varndims	src/lib/nc.h	/^ncmpi_inq_varndims(int ncid, int varid, int *ndimsp);$/;"	p	signature:(int ncid, int varid, int *ndimsp)
ncmpi_inq_varndims	src/lib/pnetcdf.h	/^int ncmpi_inq_varndims(int ncid, int varid, int *ndimsp);$/;"	p	signature:(int ncid, int varid, int *ndimsp)
ncmpi_inq_varndims	src/lib/var.c	/^ncmpi_inq_varndims(int ncid,  int varid, int *ndimsp)$/;"	f	signature:(int ncid, int varid, int *ndimsp)
ncmpi_inq_vartype	src/lib/nc.h	/^ncmpi_inq_vartype(int ncid, int varid, nc_type *typep);$/;"	p	signature:(int ncid, int varid, nc_type *typep)
ncmpi_inq_vartype	src/lib/pnetcdf.h	/^int ncmpi_inq_vartype(int ncid, int varid, nc_type *xtypep);$/;"	p	signature:(int ncid, int varid, nc_type *xtypep)
ncmpi_inq_vartype	src/lib/var.c	/^ncmpi_inq_vartype(int ncid,  int varid, nc_type *typep)$/;"	f	signature:(int ncid, int varid, nc_type *typep)
ncmpi_inq_version	src/lib/nc.c	/^ncmpi_inq_version(int ncid, int *NC_mode)$/;"	f	signature:(int ncid, int *NC_mode)
ncmpi_inq_version	src/lib/pnetcdf.h	/^int ncmpi_inq_version(int ncid, int *NC_mode);$/;"	p	signature:(int ncid, int *NC_mode)
ncmpi_iput_var	src/lib/i_getput_var.c	/^ncmpi_iput_var(int           ncid,$/;"	f	signature:(int ncid, int varid, const void *buf, MPI_Offset bufcount, MPI_Datatype datatype, int *reqid)
ncmpi_iput_var	src/lib/pnetcdf.h	/^int ncmpi_iput_var(int ncid, int varid, const void *buf, MPI_Offset bufcount,$/;"	p	signature:(int ncid, int varid, const void *buf, MPI_Offset bufcount, MPI_Datatype datatype, int *request)
ncmpi_iput_var1	src/lib/i_getput_var1.c	/^ncmpi_iput_var1(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset *start, const void *buf, MPI_Offset bufcount, MPI_Datatype datatype, int *reqid)
ncmpi_iput_var1	src/lib/pnetcdf.h	/^int ncmpi_iput_var1(int ncid, int varid, const MPI_Offset index[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset index[], const void *buf, MPI_Offset bufcount, MPI_Datatype datatype, int *request)
ncmpi_iput_var1_double	src/lib/i_getput_var1.c	/^ncmpi_iput_var1_double(int              ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const double *op, int *reqid)
ncmpi_iput_var1_double	src/lib/pnetcdf.h	/^int ncmpi_iput_var1_double(int ncid, int varid, const MPI_Offset index[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset index[], const double *op, int *request)
ncmpi_iput_var1_float	src/lib/i_getput_var1.c	/^ncmpi_iput_var1_float(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const float *op, int *reqid)
ncmpi_iput_var1_float	src/lib/pnetcdf.h	/^int ncmpi_iput_var1_float(int ncid, int varid, const MPI_Offset index[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset index[], const float *op, int *request)
ncmpi_iput_var1_int	src/lib/i_getput_var1.c	/^ncmpi_iput_var1_int(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const int *op, int *reqid)
ncmpi_iput_var1_int	src/lib/pnetcdf.h	/^int ncmpi_iput_var1_int(int ncid, int varid, const MPI_Offset index[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset index[], const int *op, int *request)
ncmpi_iput_var1_long	src/lib/i_getput_var1.c	/^ncmpi_iput_var1_long(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const long *op, int *reqid)
ncmpi_iput_var1_long	src/lib/pnetcdf.h	/^int ncmpi_iput_var1_long(int ncid, int varid, const MPI_Offset index[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset index[], const long *ip, int *request)
ncmpi_iput_var1_schar	src/lib/i_getput_var1.c	/^ncmpi_iput_var1_schar(int                ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const signed char *op, int *reqid)
ncmpi_iput_var1_schar	src/lib/pnetcdf.h	/^int ncmpi_iput_var1_schar(int ncid, int varid, const MPI_Offset index[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset index[], const signed char *op, int *request)
ncmpi_iput_var1_short	src/lib/i_getput_var1.c	/^ncmpi_iput_var1_short(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const short *op, int *reqid)
ncmpi_iput_var1_short	src/lib/pnetcdf.h	/^int ncmpi_iput_var1_short(int ncid, int varid, const MPI_Offset index[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset index[], const short *op, int *request)
ncmpi_iput_var1_text	src/lib/i_getput_var1.c	/^ncmpi_iput_var1_text(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const char *op, int *reqid)
ncmpi_iput_var1_text	src/lib/pnetcdf.h	/^int ncmpi_iput_var1_text(int ncid, int varid, const MPI_Offset index[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset index[], const char *op, int *request)
ncmpi_iput_var1_uchar	src/lib/i_getput_var1.c	/^ncmpi_iput_var1_uchar(int                  ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const unsigned char *op, int *reqid)
ncmpi_iput_var1_uchar	src/lib/pnetcdf.h	/^int ncmpi_iput_var1_uchar(int ncid, int varid, const MPI_Offset index[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset index[], const unsigned char *op, int *request)
ncmpi_iput_var_double	src/lib/i_getput_var.c	/^ncmpi_iput_var_double(int           ncid,$/;"	f	signature:(int ncid, int varid, const double *op, int *reqid)
ncmpi_iput_var_double	src/lib/pnetcdf.h	/^int ncmpi_iput_var_double(int ncid, int varid, const double *op, int *request);$/;"	p	signature:(int ncid, int varid, const double *op, int *request)
ncmpi_iput_var_float	src/lib/i_getput_var.c	/^ncmpi_iput_var_float(int          ncid,$/;"	f	signature:(int ncid, int varid, const float *op, int *reqid)
ncmpi_iput_var_float	src/lib/pnetcdf.h	/^int ncmpi_iput_var_float(int ncid, int varid, const float *op, int *request);$/;"	p	signature:(int ncid, int varid, const float *op, int *request)
ncmpi_iput_var_int	src/lib/i_getput_var.c	/^ncmpi_iput_var_int(int        ncid,$/;"	f	signature:(int ncid, int varid, const int *op, int *reqid)
ncmpi_iput_var_int	src/lib/pnetcdf.h	/^int ncmpi_iput_var_int(int ncid, int varid, const int *op, int *request);$/;"	p	signature:(int ncid, int varid, const int *op, int *request)
ncmpi_iput_var_long	src/lib/i_getput_var.c	/^ncmpi_iput_var_long(int         ncid,$/;"	f	signature:(int ncid, int varid, const long *op, int *reqid)
ncmpi_iput_var_long	src/lib/pnetcdf.h	/^int ncmpi_iput_var_long(int ncid, int varid, const long *op, int *request);$/;"	p	signature:(int ncid, int varid, const long *op, int *request)
ncmpi_iput_var_schar	src/lib/i_getput_var.c	/^ncmpi_iput_var_schar(int                ncid,$/;"	f	signature:(int ncid, int varid, const signed char *op, int *reqid)
ncmpi_iput_var_schar	src/lib/pnetcdf.h	/^int ncmpi_iput_var_schar(int ncid, int varid, const signed char *op,$/;"	p	signature:(int ncid, int varid, const signed char *op, int *request)
ncmpi_iput_var_short	src/lib/i_getput_var.c	/^ncmpi_iput_var_short(int          ncid,$/;"	f	signature:(int ncid, int varid, const short *op, int *reqid)
ncmpi_iput_var_short	src/lib/pnetcdf.h	/^int ncmpi_iput_var_short(int ncid, int varid, const short *op, int *request);$/;"	p	signature:(int ncid, int varid, const short *op, int *request)
ncmpi_iput_var_text	src/lib/i_getput_var.c	/^ncmpi_iput_var_text(int         ncid,$/;"	f	signature:(int ncid, int varid, const char *op, int *reqid)
ncmpi_iput_var_text	src/lib/pnetcdf.h	/^int ncmpi_iput_var_text(int ncid, int varid, const char *op, int *request);$/;"	p	signature:(int ncid, int varid, const char *op, int *request)
ncmpi_iput_var_uchar	src/lib/i_getput_var.c	/^ncmpi_iput_var_uchar(int                  ncid,$/;"	f	signature:(int ncid, int varid, const unsigned char *op, int *reqid)
ncmpi_iput_var_uchar	src/lib/pnetcdf.h	/^int ncmpi_iput_var_uchar(int ncid, int varid, const unsigned char *op,$/;"	p	signature:(int ncid, int varid, const unsigned char *op, int *request)
ncmpi_iput_vara	src/lib/i_getput_vara.c	/^ncmpi_iput_vara(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset *start, const MPI_Offset *count, const void *buf, MPI_Offset bufcount, MPI_Datatype datatype, int *reqid)
ncmpi_iput_vara	src/lib/pnetcdf.h	/^int ncmpi_iput_vara(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const void *buf, MPI_Offset bufcount, MPI_Datatype datatype, int *request)
ncmpi_iput_vara_double	src/lib/i_getput_vara.c	/^ncmpi_iput_vara_double(int              ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const double *op, int *reqid)
ncmpi_iput_vara_double	src/lib/pnetcdf.h	/^int ncmpi_iput_vara_double(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const double *op, int *request)
ncmpi_iput_vara_float	src/lib/i_getput_vara.c	/^ncmpi_iput_vara_float(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const float *op, int *reqid)
ncmpi_iput_vara_float	src/lib/pnetcdf.h	/^int ncmpi_iput_vara_float(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const float *op, int *request)
ncmpi_iput_vara_int	src/lib/i_getput_vara.c	/^ncmpi_iput_vara_int(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const int *op, int *reqid)
ncmpi_iput_vara_int	src/lib/pnetcdf.h	/^int ncmpi_iput_vara_int(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const int *op, int *request)
ncmpi_iput_vara_long	src/lib/i_getput_vara.c	/^ncmpi_iput_vara_long(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const long *op, int *reqid)
ncmpi_iput_vara_long	src/lib/pnetcdf.h	/^int ncmpi_iput_vara_long(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const long *op, int *request)
ncmpi_iput_vara_schar	src/lib/i_getput_vara.c	/^ncmpi_iput_vara_schar(int                ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const signed char *op, int *reqid)
ncmpi_iput_vara_schar	src/lib/pnetcdf.h	/^int ncmpi_iput_vara_schar(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const signed char *op, int *request)
ncmpi_iput_vara_short	src/lib/i_getput_vara.c	/^ncmpi_iput_vara_short(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const short *op, int *reqid)
ncmpi_iput_vara_short	src/lib/pnetcdf.h	/^int ncmpi_iput_vara_short(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const short *op, int *request)
ncmpi_iput_vara_text	src/lib/i_getput_vara.c	/^ncmpi_iput_vara_text(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const char *op, int *reqid)
ncmpi_iput_vara_text	src/lib/pnetcdf.h	/^int ncmpi_iput_vara_text(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const char *op, int *request)
ncmpi_iput_vara_uchar	src/lib/i_getput_vara.c	/^ncmpi_iput_vara_uchar(int                  ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const unsigned char *op, int *reqid)
ncmpi_iput_vara_uchar	src/lib/pnetcdf.h	/^int ncmpi_iput_vara_uchar(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const unsigned char *op, int *request)
ncmpi_iput_varm	src/lib/i_getput_varm.c	/^ncmpi_iput_varm(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const void *buf, MPI_Offset bufcount, MPI_Datatype datatype, int *reqid)
ncmpi_iput_varm	src/lib/pnetcdf.h	/^int ncmpi_iput_varm(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const void *buf, MPI_Offset bufcount, MPI_Datatype datatype, int *request)
ncmpi_iput_varm_double	src/lib/i_getput_varm.c	/^ncmpi_iput_varm_double(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const double *op, int *reqid)
ncmpi_iput_varm_double	src/lib/pnetcdf.h	/^int ncmpi_iput_varm_double(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const double *op, int *request)
ncmpi_iput_varm_float	src/lib/i_getput_varm.c	/^ncmpi_iput_varm_float(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const float *op, int *reqid)
ncmpi_iput_varm_float	src/lib/pnetcdf.h	/^int ncmpi_iput_varm_float(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const float *op, int *request)
ncmpi_iput_varm_int	src/lib/i_getput_varm.c	/^ncmpi_iput_varm_int(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const int *op, int *reqid)
ncmpi_iput_varm_int	src/lib/pnetcdf.h	/^int ncmpi_iput_varm_int(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const int *op, int *request)
ncmpi_iput_varm_long	src/lib/i_getput_varm.c	/^ncmpi_iput_varm_long(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const long *op, int *reqid)
ncmpi_iput_varm_long	src/lib/pnetcdf.h	/^int ncmpi_iput_varm_long(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const long *op, int *request)
ncmpi_iput_varm_schar	src/lib/i_getput_varm.c	/^ncmpi_iput_varm_schar(int                ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const signed char *op, int *reqid)
ncmpi_iput_varm_schar	src/lib/pnetcdf.h	/^int ncmpi_iput_varm_schar(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const signed char *op, int *request)
ncmpi_iput_varm_short	src/lib/i_getput_varm.c	/^ncmpi_iput_varm_short(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const short *op, int *reqid)
ncmpi_iput_varm_short	src/lib/pnetcdf.h	/^int ncmpi_iput_varm_short(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const short *op, int *request)
ncmpi_iput_varm_text	src/lib/i_getput_varm.c	/^ncmpi_iput_varm_text(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const char *op, int *reqid)
ncmpi_iput_varm_text	src/lib/pnetcdf.h	/^int ncmpi_iput_varm_text(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const char *op, int *request)
ncmpi_iput_varm_uchar	src/lib/i_getput_varm.c	/^ncmpi_iput_varm_uchar(int                  ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const unsigned char *op, int *reqid)
ncmpi_iput_varm_uchar	src/lib/pnetcdf.h	/^int ncmpi_iput_varm_uchar(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const unsigned char *op, int *request)
ncmpi_iput_vars	src/lib/i_getput_vars.c	/^ncmpi_iput_vars(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const void *buf, MPI_Offset bufcount, MPI_Datatype datatype, int *reqid)
ncmpi_iput_vars	src/lib/pnetcdf.h	/^int ncmpi_iput_vars(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const void *buf, MPI_Offset bufcount, MPI_Datatype datatype, int *request)
ncmpi_iput_vars_double	src/lib/i_getput_vars.c	/^ncmpi_iput_vars_double(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const double *op, int *reqid)
ncmpi_iput_vars_double	src/lib/pnetcdf.h	/^int ncmpi_iput_vars_double(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const double *op, int *request)
ncmpi_iput_vars_float	src/lib/i_getput_vars.c	/^ncmpi_iput_vars_float(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const float *op, int *reqid)
ncmpi_iput_vars_float	src/lib/pnetcdf.h	/^int ncmpi_iput_vars_float(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const float *op, int *request)
ncmpi_iput_vars_int	src/lib/i_getput_vars.c	/^ncmpi_iput_vars_int(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const int *op, int *reqid)
ncmpi_iput_vars_int	src/lib/pnetcdf.h	/^int ncmpi_iput_vars_int(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const int *op, int *request)
ncmpi_iput_vars_long	src/lib/i_getput_vars.c	/^ncmpi_iput_vars_long(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const long *op, int *reqid)
ncmpi_iput_vars_long	src/lib/pnetcdf.h	/^int ncmpi_iput_vars_long(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const long *op, int *request)
ncmpi_iput_vars_schar	src/lib/i_getput_vars.c	/^ncmpi_iput_vars_schar(int                ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const signed char *op, int *reqid)
ncmpi_iput_vars_schar	src/lib/pnetcdf.h	/^int ncmpi_iput_vars_schar(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const signed char *op, int *request)
ncmpi_iput_vars_short	src/lib/i_getput_vars.c	/^ncmpi_iput_vars_short(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const short *op, int *reqid)
ncmpi_iput_vars_short	src/lib/pnetcdf.h	/^int ncmpi_iput_vars_short(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const short *op, int *request)
ncmpi_iput_vars_text	src/lib/i_getput_vars.c	/^ncmpi_iput_vars_text(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const char *op, int *reqid)
ncmpi_iput_vars_text	src/lib/pnetcdf.h	/^int ncmpi_iput_vars_text(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const char *op, int *request)
ncmpi_iput_vars_uchar	src/lib/i_getput_vars.c	/^ncmpi_iput_vars_uchar(int                  ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const unsigned char *op, int *reqid)
ncmpi_iput_vars_uchar	src/lib/pnetcdf.h	/^int ncmpi_iput_vars_uchar(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const unsigned char *op, int *request)
ncmpi_load_buffer_state	src/utils/ncgen/ncgenyy.c	/^static void ncmpi_load_buffer_state  (void)$/;"	f	file:	signature:(void)
ncmpi_load_buffer_state	src/utils/ncgen/ncgenyy.c	/^static void ncmpi_load_buffer_state (void );$/;"	p	file:	signature:(void )
ncmpi_mget_var	src/lib/m_getput_varx.c	/^ncmpi_mget_var(int           ncid, $/;"	f	signature:(int ncid, int num, int varids[], void *bufs[], MPI_Offset bufcounts[], MPI_Datatype datatypes[])
ncmpi_mget_var	src/lib/pnetcdf.h	/^int ncmpi_mget_var(int ncid, int ntimes, int varids[], $/;"	p	signature:(int ncid, int ntimes, int varids[], void *bufs[], MPI_Offset bufcounts[], MPI_Datatype datatypes[])
ncmpi_mget_var1	src/lib/m_getput_varx.c	/^ncmpi_mget_var1(int                ncid, $/;"	f	signature:(int ncid, int num, int varids[], MPI_Offset* const starts[], void *bufs[], MPI_Offset bufcounts[], MPI_Datatype datatypes[])
ncmpi_mget_var1	src/lib/pnetcdf.h	/^int ncmpi_mget_var1(int ncid, int ntimes, int varids[], $/;"	p	signature:(int ncid, int ntimes, int varids[], MPI_Offset* const starts[], void *bufs[], MPI_Offset bufcounts[], MPI_Datatype datatypes[])
ncmpi_mget_var1_all	src/lib/m_getput_varx.c	/^ncmpi_mget_var1_all(int                ncid, $/;"	f	signature:(int ncid, int num, int varids[], MPI_Offset* const starts[], void *bufs[], MPI_Offset bufcounts[], MPI_Datatype datatypes[])
ncmpi_mget_var1_all	src/lib/pnetcdf.h	/^int ncmpi_mget_var1_all(int ncid, int ntimes, int varids[], $/;"	p	signature:(int ncid, int ntimes, int varids[], MPI_Offset* const starts[], void *bufs[], MPI_Offset bufcounts[], MPI_Datatype datatypes[])
ncmpi_mget_var_all	src/lib/m_getput_varx.c	/^ncmpi_mget_var_all(int           ncid, $/;"	f	signature:(int ncid, int num, int varids[], void *bufs[], MPI_Offset bufcounts[], MPI_Datatype datatypes[])
ncmpi_mget_var_all	src/lib/pnetcdf.h	/^int ncmpi_mget_var_all(int ncid, int ntimes, int varids[], $/;"	p	signature:(int ncid, int ntimes, int varids[], void *bufs[], MPI_Offset bufcounts[], MPI_Datatype datatypes[])
ncmpi_mget_vara	src/lib/m_getput_varx.c	/^ncmpi_mget_vara(int                ncid, $/;"	f	signature:(int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], void *bufs[], MPI_Offset bufcounts[], MPI_Datatype datatypes[])
ncmpi_mget_vara	src/lib/pnetcdf.h	/^int ncmpi_mget_vara(int ncid, int ntimes, int varids[], $/;"	p	signature:(int ncid, int ntimes, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], void *bufs[], MPI_Offset bufcounts[], MPI_Datatype datatypes[])
ncmpi_mget_vara_all	src/lib/m_getput_varx.c	/^ncmpi_mget_vara_all(int                ncid, $/;"	f	signature:(int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], void *bufs[], MPI_Offset bufcounts[], MPI_Datatype datatypes[])
ncmpi_mget_vara_all	src/lib/pnetcdf.h	/^int ncmpi_mget_vara_all(int ncid, int ntimes, int varids[], $/;"	p	signature:(int ncid, int ntimes, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], void *bufs[], MPI_Offset bufcounts[], MPI_Datatype datatypes[])
ncmpi_mget_varm	src/lib/m_getput_varx.c	/^ncmpi_mget_varm(int                ncid, $/;"	f	signature:(int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], MPI_Offset* const imaps[], void *bufs[], MPI_Offset bufcounts[], MPI_Datatype datatypes[])
ncmpi_mget_varm	src/lib/pnetcdf.h	/^int ncmpi_mget_varm(int ncid, int ntimes, int varids[], $/;"	p	signature:(int ncid, int ntimes, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], MPI_Offset* const imaps[], void *bufs[], MPI_Offset bufcounts[], MPI_Datatype datatypes[])
ncmpi_mget_varm_all	src/lib/m_getput_varx.c	/^ncmpi_mget_varm_all(int                ncid, $/;"	f	signature:(int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], MPI_Offset* const imaps[], void *bufs[], MPI_Offset bufcounts[], MPI_Datatype datatypes[])
ncmpi_mget_varm_all	src/lib/pnetcdf.h	/^int ncmpi_mget_varm_all(int ncid, int ntimes, int varids[], $/;"	p	signature:(int ncid, int ntimes, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], MPI_Offset* const imaps[], void *bufs[], MPI_Offset bufcounts[], MPI_Datatype datatypes[])
ncmpi_mget_vars	src/lib/m_getput_varx.c	/^ncmpi_mget_vars(int                ncid, $/;"	f	signature:(int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], void *bufs[], MPI_Offset bufcounts[], MPI_Datatype datatypes[])
ncmpi_mget_vars	src/lib/pnetcdf.h	/^int ncmpi_mget_vars(int ncid, int ntimes, int varids[], $/;"	p	signature:(int ncid, int ntimes, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], void *bufs[], MPI_Offset bufcounts[], MPI_Datatype datatypes[])
ncmpi_mget_vars_all	src/lib/m_getput_varx.c	/^ncmpi_mget_vars_all(int                ncid, $/;"	f	signature:(int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], void *bufs[], MPI_Offset bufcounts[], MPI_Datatype datatypes[])
ncmpi_mget_vars_all	src/lib/pnetcdf.h	/^int ncmpi_mget_vars_all(int ncid, int ntimes, int varids[], $/;"	p	signature:(int ncid, int ntimes, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], void *bufs[], MPI_Offset bufcounts[], MPI_Datatype datatypes[])
ncmpi_mput_var	src/lib/m_getput_varx.c	/^ncmpi_mput_var(int           ncid, $/;"	f	signature:(int ncid, int num, int varids[], void *bufs[], MPI_Offset bufcounts[], MPI_Datatype datatypes[])
ncmpi_mput_var	src/lib/pnetcdf.h	/^int ncmpi_mput_var(int ncid, int ntimes, int varids[],$/;"	p	signature:(int ncid, int ntimes, int varids[], void *bufs[], MPI_Offset bufcounts[], MPI_Datatype datatypes[])
ncmpi_mput_var1	src/lib/m_getput_varx.c	/^ncmpi_mput_var1(int                ncid, $/;"	f	signature:(int ncid, int num, int varids[], MPI_Offset* const starts[], void *bufs[], MPI_Offset bufcounts[], MPI_Datatype datatypes[])
ncmpi_mput_var1	src/lib/pnetcdf.h	/^int ncmpi_mput_var1(int ncid, int ntimes, int varids[],$/;"	p	signature:(int ncid, int ntimes, int varids[], MPI_Offset* const starts[], void *bufs[], MPI_Offset bufcounts[], MPI_Datatype datatypes[])
ncmpi_mput_var1_all	src/lib/m_getput_varx.c	/^ncmpi_mput_var1_all(int                ncid, $/;"	f	signature:(int ncid, int num, int varids[], MPI_Offset* const starts[], void *bufs[], MPI_Offset bufcounts[], MPI_Datatype datatypes[])
ncmpi_mput_var1_all	src/lib/pnetcdf.h	/^int ncmpi_mput_var1_all(int ncid, int ntimes, int varids[], $/;"	p	signature:(int ncid, int ntimes, int varids[], MPI_Offset* const starts[], void *bufs[], MPI_Offset bufcounts[], MPI_Datatype datatypes[])
ncmpi_mput_var_all	src/lib/m_getput_varx.c	/^ncmpi_mput_var_all(int           ncid, $/;"	f	signature:(int ncid, int num, int varids[], void *bufs[], MPI_Offset bufcounts[], MPI_Datatype datatypes[])
ncmpi_mput_var_all	src/lib/pnetcdf.h	/^int ncmpi_mput_var_all(int ncid, int ntimes, int varids[], $/;"	p	signature:(int ncid, int ntimes, int varids[], void *bufs[], MPI_Offset bufcounts[], MPI_Datatype datatypes[])
ncmpi_mput_vara	src/lib/m_getput_varx.c	/^ncmpi_mput_vara(int                ncid, $/;"	f	signature:(int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], void *bufs[], MPI_Offset bufcounts[], MPI_Datatype datatypes[])
ncmpi_mput_vara	src/lib/pnetcdf.h	/^int ncmpi_mput_vara(int ncid, int ntimes, int varids[],$/;"	p	signature:(int ncid, int ntimes, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], void *bufs[], MPI_Offset bufcounts[], MPI_Datatype datatypes[])
ncmpi_mput_vara_all	src/lib/m_getput_varx.c	/^ncmpi_mput_vara_all(int                ncid, $/;"	f	signature:(int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], void *bufs[], MPI_Offset bufcounts[], MPI_Datatype datatypes[])
ncmpi_mput_vara_all	src/lib/pnetcdf.h	/^int ncmpi_mput_vara_all(int ncid, int ntimes, int varids[], $/;"	p	signature:(int ncid, int ntimes, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], void *bufs[], MPI_Offset bufcounts[], MPI_Datatype datatypes[])
ncmpi_mput_varm	src/lib/m_getput_varx.c	/^ncmpi_mput_varm(int                ncid, $/;"	f	signature:(int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], MPI_Offset* const imaps[], void *bufs[], MPI_Offset bufcounts[], MPI_Datatype datatypes[])
ncmpi_mput_varm	src/lib/pnetcdf.h	/^int ncmpi_mput_varm(int ncid, int ntimes, int varids[],$/;"	p	signature:(int ncid, int ntimes, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], MPI_Offset* const imaps[], void *bufs[], MPI_Offset bufcounts[], MPI_Datatype datatypes[])
ncmpi_mput_varm_all	src/lib/m_getput_varx.c	/^ncmpi_mput_varm_all(int                ncid, $/;"	f	signature:(int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], MPI_Offset* const imaps[], void *bufs[], MPI_Offset bufcounts[], MPI_Datatype datatypes[])
ncmpi_mput_varm_all	src/lib/pnetcdf.h	/^int ncmpi_mput_varm_all(int ncid, int ntimes, int varids[], $/;"	p	signature:(int ncid, int ntimes, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], MPI_Offset* const imaps[], void *bufs[], MPI_Offset bufcounts[], MPI_Datatype datatypes[])
ncmpi_mput_vars	src/lib/m_getput_varx.c	/^ncmpi_mput_vars(int                ncid, $/;"	f	signature:(int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], void *bufs[], MPI_Offset bufcounts[], MPI_Datatype datatypes[])
ncmpi_mput_vars	src/lib/pnetcdf.h	/^int ncmpi_mput_vars(int ncid, int ntimes, int varids[],$/;"	p	signature:(int ncid, int ntimes, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], void *bufs[], MPI_Offset bufcounts[], MPI_Datatype datatypes[])
ncmpi_mput_vars_all	src/lib/m_getput_varx.c	/^ncmpi_mput_vars_all(int                ncid, $/;"	f	signature:(int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], void *bufs[], MPI_Offset bufcounts[], MPI_Datatype datatypes[])
ncmpi_mput_vars_all	src/lib/pnetcdf.h	/^int ncmpi_mput_vars_all(int ncid, int ntimes, int varids[], $/;"	p	signature:(int ncid, int ntimes, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], void *bufs[], MPI_Offset bufcounts[], MPI_Datatype datatypes[])
ncmpi_open	src/lib/mpinetcdf.c	/^ncmpi_open(MPI_Comm    comm,$/;"	f	signature:(MPI_Comm comm, const char *path, int omode, MPI_Info info, int *ncidp)
ncmpi_open	src/lib/pnetcdf.h	/^int ncmpi_open(MPI_Comm comm, const char *path, int omode, MPI_Info info, int *ncidp);$/;"	p	signature:(MPI_Comm comm, const char *path, int omode, MPI_Info info, int *ncidp)
ncmpi_put_att_double	src/lib/attr.c	/^ncmpi_put_att_double(int ncid, int varid, const char *name,$/;"	f	signature:(int ncid, int varid, const char *name, nc_type type, MPI_Offset nelems, const double *value)
ncmpi_put_att_double	src/lib/nc.h	/^ncmpi_put_att_double(int ncid, int varid, const char *name,$/;"	p	signature:(int ncid, int varid, const char *name, nc_type type, MPI_Offset nelems, const double *value)
ncmpi_put_att_double	src/lib/pnetcdf.h	/^int ncmpi_put_att_double(int ncid, int varid, const char *name,$/;"	p	signature:(int ncid, int varid, const char *name, nc_type xtype, MPI_Offset len, const double *op)
ncmpi_put_att_float	src/lib/attr.c	/^ncmpi_put_att_float(int ncid, int varid, const char *name,$/;"	f	signature:(int ncid, int varid, const char *name, nc_type type, MPI_Offset nelems, const float *value)
ncmpi_put_att_float	src/lib/nc.h	/^ncmpi_put_att_float(int ncid, int varid, const char *name,$/;"	p	signature:(int ncid, int varid, const char *name, nc_type type, MPI_Offset nelems, const float *value)
ncmpi_put_att_float	src/lib/pnetcdf.h	/^int ncmpi_put_att_float(int ncid, int varid, const char *name,$/;"	p	signature:(int ncid, int varid, const char *name, nc_type xtype, MPI_Offset len, const float *op)
ncmpi_put_att_int	src/lib/attr.c	/^ncmpi_put_att_int(int ncid, int varid, const char *name,$/;"	f	signature:(int ncid, int varid, const char *name, nc_type type, MPI_Offset nelems, const int *value)
ncmpi_put_att_int	src/lib/nc.h	/^ncmpi_put_att_int(int ncid, int varid, const char *name,$/;"	p	signature:(int ncid, int varid, const char *name, nc_type type, MPI_Offset nelems, const int *value)
ncmpi_put_att_int	src/lib/pnetcdf.h	/^int ncmpi_put_att_int(int ncid, int varid, const char *name,$/;"	p	signature:(int ncid, int varid, const char *name, nc_type xtype, MPI_Offset len, const int *op)
ncmpi_put_att_long	src/lib/attr.c	/^ncmpi_put_att_long(int ncid, int varid, const char *name,$/;"	f	signature:(int ncid, int varid, const char *name, nc_type type, MPI_Offset nelems, const long *value)
ncmpi_put_att_long	src/lib/nc.h	/^ncmpi_put_att_long(int ncid, int varid, const char *name,$/;"	p	signature:(int ncid, int varid, const char *name, nc_type type, MPI_Offset nelems, const long *value)
ncmpi_put_att_long	src/lib/pnetcdf.h	/^int ncmpi_put_att_long(int ncid, int varid, const char *name,$/;"	p	signature:(int ncid, int varid, const char *name, nc_type xtype, MPI_Offset len, const long *op)
ncmpi_put_att_schar	src/lib/attr.c	/^ncmpi_put_att_schar(int ncid, int varid, const char *name,$/;"	f	signature:(int ncid, int varid, const char *name, nc_type type, MPI_Offset nelems, const signed char *value)
ncmpi_put_att_schar	src/lib/nc.h	/^ncmpi_put_att_schar(int ncid, int varid, const char *name,$/;"	p	signature:(int ncid, int varid, const char *name, nc_type type, MPI_Offset nelems, const signed char *value)
ncmpi_put_att_schar	src/lib/pnetcdf.h	/^int ncmpi_put_att_schar(int ncid, int varid, const char *name,$/;"	p	signature:(int ncid, int varid, const char *name, nc_type xtype, MPI_Offset len, const signed char *op)
ncmpi_put_att_short	src/lib/attr.c	/^ncmpi_put_att_short(int ncid, int varid, const char *name,$/;"	f	signature:(int ncid, int varid, const char *name, nc_type type, MPI_Offset nelems, const short *value)
ncmpi_put_att_short	src/lib/nc.h	/^ncmpi_put_att_short(int ncid, int varid, const char *name,$/;"	p	signature:(int ncid, int varid, const char *name, nc_type type, MPI_Offset nelems, const short *value)
ncmpi_put_att_short	src/lib/pnetcdf.h	/^int ncmpi_put_att_short(int ncid, int varid, const char *name,$/;"	p	signature:(int ncid, int varid, const char *name, nc_type xtype, MPI_Offset len, const short *op)
ncmpi_put_att_text	src/lib/attr.c	/^ncmpi_put_att_text(int ncid, int varid, const char *name,$/;"	f	signature:(int ncid, int varid, const char *name, MPI_Offset nelems, const char *value)
ncmpi_put_att_text	src/lib/nc.h	/^ncmpi_put_att_text(int ncid, int varid, const char *name,$/;"	p	signature:(int ncid, int varid, const char *name, MPI_Offset nelems, const char *value)
ncmpi_put_att_text	src/lib/pnetcdf.h	/^int ncmpi_put_att_text(int ncid, int varid, const char *name, MPI_Offset len,$/;"	p	signature:(int ncid, int varid, const char *name, MPI_Offset len, const char *op)
ncmpi_put_att_uchar	src/lib/attr.c	/^ncmpi_put_att_uchar(int ncid, int varid, const char *name,$/;"	f	signature:(int ncid, int varid, const char *name, nc_type type, MPI_Offset nelems, const unsigned char *value)
ncmpi_put_att_uchar	src/lib/nc.h	/^ncmpi_put_att_uchar(int ncid, int varid, const char *name,$/;"	p	signature:(int ncid, int varid, const char *name, nc_type type, MPI_Offset nelems, const unsigned char *value)
ncmpi_put_att_uchar	src/lib/pnetcdf.h	/^int ncmpi_put_att_uchar(int ncid, int varid, const char *name,$/;"	p	signature:(int ncid, int varid, const char *name, nc_type xtype, MPI_Offset len, const unsigned char *op)
ncmpi_put_var	src/lib/getput_var.c	/^ncmpi_put_var(int           ncid,$/;"	f	signature:(int ncid, int varid, const void *buf, MPI_Offset bufcount, MPI_Datatype datatype)
ncmpi_put_var	src/lib/pnetcdf.h	/^int ncmpi_put_var(int ncid, int varid, const void *buf, MPI_Offset bufcount,$/;"	p	signature:(int ncid, int varid, const void *buf, MPI_Offset bufcount, MPI_Datatype datatype)
ncmpi_put_var1	src/lib/getput_var1.c	/^ncmpi_put_var1(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const void *buf, MPI_Offset bufcount, MPI_Datatype datatype)
ncmpi_put_var1	src/lib/pnetcdf.h	/^int ncmpi_put_var1(int ncid, int varid, const MPI_Offset index[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset index[], const void *buf, MPI_Offset bufcount, MPI_Datatype datatype)
ncmpi_put_var1_double	src/lib/getput_var1.c	/^ncmpi_put_var1_double(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const double *op)
ncmpi_put_var1_double	src/lib/pnetcdf.h	/^int ncmpi_put_var1_double(int ncid, int varid, const MPI_Offset index[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset index[], const double *op)
ncmpi_put_var1_float	src/lib/getput_var1.c	/^ncmpi_put_var1_float(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const float *op)
ncmpi_put_var1_float	src/lib/pnetcdf.h	/^int ncmpi_put_var1_float(int ncid, int varid, const MPI_Offset index[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset index[], const float *op)
ncmpi_put_var1_int	src/lib/getput_var1.c	/^ncmpi_put_var1_int(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const int *op)
ncmpi_put_var1_int	src/lib/pnetcdf.h	/^int ncmpi_put_var1_int(int ncid, int varid, const MPI_Offset index[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset index[], const int *op)
ncmpi_put_var1_long	src/lib/getput_var1.c	/^ncmpi_put_var1_long(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const long *op)
ncmpi_put_var1_long	src/lib/pnetcdf.h	/^int ncmpi_put_var1_long(int ncid, int varid, const MPI_Offset index[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset index[], const long *ip)
ncmpi_put_var1_schar	src/lib/getput_var1.c	/^ncmpi_put_var1_schar(int                ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const signed char *op)
ncmpi_put_var1_schar	src/lib/pnetcdf.h	/^int ncmpi_put_var1_schar(int ncid, int varid, const MPI_Offset index[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset index[], const signed char *op)
ncmpi_put_var1_short	src/lib/getput_var1.c	/^ncmpi_put_var1_short(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const short *op)
ncmpi_put_var1_short	src/lib/pnetcdf.h	/^int ncmpi_put_var1_short(int ncid, int varid, const MPI_Offset index[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset index[], const short *op)
ncmpi_put_var1_text	src/lib/getput_var1.c	/^ncmpi_put_var1_text(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const char *op)
ncmpi_put_var1_text	src/lib/pnetcdf.h	/^int ncmpi_put_var1_text(int ncid, int varid, const MPI_Offset index[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset index[], const char *op)
ncmpi_put_var1_uchar	src/lib/getput_var1.c	/^ncmpi_put_var1_uchar(int                  ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const unsigned char *op)
ncmpi_put_var1_uchar	src/lib/pnetcdf.h	/^int ncmpi_put_var1_uchar(int ncid, int varid, const MPI_Offset index[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset index[], const unsigned char *op)
ncmpi_put_var_all	src/lib/getput_var.c	/^ncmpi_put_var_all(int           ncid,$/;"	f	signature:(int ncid, int varid, const void *buf, MPI_Offset bufcount, MPI_Datatype datatype)
ncmpi_put_var_all	src/lib/pnetcdf.h	/^int ncmpi_put_var_all(int ncid, int varid, const void *buf, MPI_Offset bufcount,$/;"	p	signature:(int ncid, int varid, const void *buf, MPI_Offset bufcount, MPI_Datatype datatype)
ncmpi_put_var_double	src/lib/getput_var.c	/^ncmpi_put_var_double(int           ncid,$/;"	f	signature:(int ncid, int varid, const double *op)
ncmpi_put_var_double	src/lib/pnetcdf.h	/^int ncmpi_put_var_double(int ncid, int varid, const double *op);$/;"	p	signature:(int ncid, int varid, const double *op)
ncmpi_put_var_double_all	src/lib/getput_var.c	/^ncmpi_put_var_double_all(int           ncid,$/;"	f	signature:(int ncid, int varid, const double *op)
ncmpi_put_var_double_all	src/lib/pnetcdf.h	/^int ncmpi_put_var_double_all(int ncid, int varid, const double *op);$/;"	p	signature:(int ncid, int varid, const double *op)
ncmpi_put_var_float	src/lib/getput_var.c	/^ncmpi_put_var_float(int          ncid,$/;"	f	signature:(int ncid, int varid, const float *op)
ncmpi_put_var_float	src/lib/pnetcdf.h	/^int ncmpi_put_var_float(int ncid, int varid, const float *op);$/;"	p	signature:(int ncid, int varid, const float *op)
ncmpi_put_var_float_all	src/lib/getput_var.c	/^ncmpi_put_var_float_all(int          ncid,$/;"	f	signature:(int ncid, int varid, const float *op)
ncmpi_put_var_float_all	src/lib/pnetcdf.h	/^int ncmpi_put_var_float_all(int ncid, int varid, const float *op);$/;"	p	signature:(int ncid, int varid, const float *op)
ncmpi_put_var_int	src/lib/getput_var.c	/^ncmpi_put_var_int(int        ncid,$/;"	f	signature:(int ncid, int varid, const int *op)
ncmpi_put_var_int	src/lib/pnetcdf.h	/^int ncmpi_put_var_int(int ncid, int varid, const int *op);$/;"	p	signature:(int ncid, int varid, const int *op)
ncmpi_put_var_int_all	src/lib/getput_var.c	/^ncmpi_put_var_int_all(int        ncid,$/;"	f	signature:(int ncid, int varid, const int *op)
ncmpi_put_var_int_all	src/lib/pnetcdf.h	/^int ncmpi_put_var_int_all(int ncid, int varid, const int *op);$/;"	p	signature:(int ncid, int varid, const int *op)
ncmpi_put_var_long	src/lib/getput_var.c	/^ncmpi_put_var_long(int         ncid,$/;"	f	signature:(int ncid, int varid, const long *op)
ncmpi_put_var_long	src/lib/pnetcdf.h	/^int ncmpi_put_var_long(int ncid, int varid, const long *op);$/;"	p	signature:(int ncid, int varid, const long *op)
ncmpi_put_var_long_all	src/lib/getput_var.c	/^ncmpi_put_var_long_all(int         ncid,$/;"	f	signature:(int ncid, int varid, const long *op)
ncmpi_put_var_long_all	src/lib/pnetcdf.h	/^int ncmpi_put_var_long_all(int ncid, int varid, const long *op);$/;"	p	signature:(int ncid, int varid, const long *op)
ncmpi_put_var_schar	src/lib/getput_var.c	/^ncmpi_put_var_schar(int                ncid,$/;"	f	signature:(int ncid, int varid, const signed char *op)
ncmpi_put_var_schar	src/lib/pnetcdf.h	/^int ncmpi_put_var_schar(int ncid, int varid, const signed char *op);$/;"	p	signature:(int ncid, int varid, const signed char *op)
ncmpi_put_var_schar_all	src/lib/getput_var.c	/^ncmpi_put_var_schar_all(int                ncid,$/;"	f	signature:(int ncid, int varid, const signed char *op)
ncmpi_put_var_schar_all	src/lib/pnetcdf.h	/^int ncmpi_put_var_schar_all(int ncid, int varid, const signed char *op);$/;"	p	signature:(int ncid, int varid, const signed char *op)
ncmpi_put_var_short	src/lib/getput_var.c	/^ncmpi_put_var_short(int          ncid,$/;"	f	signature:(int ncid, int varid, const short *op)
ncmpi_put_var_short	src/lib/pnetcdf.h	/^int ncmpi_put_var_short(int ncid, int varid, const short *op);$/;"	p	signature:(int ncid, int varid, const short *op)
ncmpi_put_var_short_all	src/lib/getput_var.c	/^ncmpi_put_var_short_all(int          ncid,$/;"	f	signature:(int ncid, int varid, const short *op)
ncmpi_put_var_short_all	src/lib/pnetcdf.h	/^int ncmpi_put_var_short_all(int ncid, int varid, const short *op);$/;"	p	signature:(int ncid, int varid, const short *op)
ncmpi_put_var_text	src/lib/getput_var.c	/^ncmpi_put_var_text(int         ncid,$/;"	f	signature:(int ncid, int varid, const char *op)
ncmpi_put_var_text	src/lib/pnetcdf.h	/^int ncmpi_put_var_text(int ncid, int varid, const char *op);$/;"	p	signature:(int ncid, int varid, const char *op)
ncmpi_put_var_text_all	src/lib/getput_var.c	/^ncmpi_put_var_text_all(int         ncid,$/;"	f	signature:(int ncid, int varid, const char *op)
ncmpi_put_var_text_all	src/lib/pnetcdf.h	/^int ncmpi_put_var_text_all(int ncid, int varid, const char *op);$/;"	p	signature:(int ncid, int varid, const char *op)
ncmpi_put_var_uchar	src/lib/getput_var.c	/^ncmpi_put_var_uchar(int                  ncid,$/;"	f	signature:(int ncid, int varid, const unsigned char *op)
ncmpi_put_var_uchar	src/lib/pnetcdf.h	/^int ncmpi_put_var_uchar(int ncid, int varid, const unsigned char *op);$/;"	p	signature:(int ncid, int varid, const unsigned char *op)
ncmpi_put_var_uchar_all	src/lib/getput_var.c	/^ncmpi_put_var_uchar_all(int                  ncid,$/;"	f	signature:(int ncid, int varid, const unsigned char *op)
ncmpi_put_var_uchar_all	src/lib/pnetcdf.h	/^int ncmpi_put_var_uchar_all(int ncid, int varid, const unsigned char *op);$/;"	p	signature:(int ncid, int varid, const unsigned char *op)
ncmpi_put_vara	src/lib/getput_vara.c	/^ncmpi_put_vara(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const void *buf, MPI_Offset bufcount, MPI_Datatype datatype)
ncmpi_put_vara	src/lib/pnetcdf.h	/^int ncmpi_put_vara(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const void *buf, MPI_Offset bufcount, MPI_Datatype datatype)
ncmpi_put_vara_all	src/lib/getput_vara.c	/^ncmpi_put_vara_all(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const void *buf, MPI_Offset bufcount, MPI_Datatype datatype)
ncmpi_put_vara_all	src/lib/pnetcdf.h	/^int ncmpi_put_vara_all(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const void *buf, MPI_Offset bufcount, MPI_Datatype datatype)
ncmpi_put_vara_double	src/lib/getput_vara.c	/^ncmpi_put_vara_double(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const double *op)
ncmpi_put_vara_double	src/lib/pnetcdf.h	/^int ncmpi_put_vara_double(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const double *op)
ncmpi_put_vara_double_all	src/lib/getput_vara.c	/^ncmpi_put_vara_double_all(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const double *op)
ncmpi_put_vara_double_all	src/lib/pnetcdf.h	/^int ncmpi_put_vara_double_all(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const double *op)
ncmpi_put_vara_float	src/lib/getput_vara.c	/^ncmpi_put_vara_float(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const float *op)
ncmpi_put_vara_float	src/lib/pnetcdf.h	/^int ncmpi_put_vara_float(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const float *op)
ncmpi_put_vara_float_all	src/lib/getput_vara.c	/^ncmpi_put_vara_float_all(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const float *op)
ncmpi_put_vara_float_all	src/lib/pnetcdf.h	/^int ncmpi_put_vara_float_all(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const float *op)
ncmpi_put_vara_int	src/lib/getput_vara.c	/^ncmpi_put_vara_int(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const int *op)
ncmpi_put_vara_int	src/lib/pnetcdf.h	/^int ncmpi_put_vara_int(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const int *op)
ncmpi_put_vara_int_all	src/lib/getput_vara.c	/^ncmpi_put_vara_int_all(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const int *op)
ncmpi_put_vara_int_all	src/lib/pnetcdf.h	/^int ncmpi_put_vara_int_all(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const int *op)
ncmpi_put_vara_long	src/lib/getput_vara.c	/^ncmpi_put_vara_long(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const long *op)
ncmpi_put_vara_long	src/lib/pnetcdf.h	/^int ncmpi_put_vara_long(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const long *op)
ncmpi_put_vara_long_all	src/lib/getput_vara.c	/^ncmpi_put_vara_long_all(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const long *op)
ncmpi_put_vara_long_all	src/lib/pnetcdf.h	/^int ncmpi_put_vara_long_all(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const long *op)
ncmpi_put_vara_schar	src/lib/getput_vara.c	/^ncmpi_put_vara_schar(int                ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const signed char *op)
ncmpi_put_vara_schar	src/lib/pnetcdf.h	/^int ncmpi_put_vara_schar(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const signed char *op)
ncmpi_put_vara_schar_all	src/lib/getput_vara.c	/^ncmpi_put_vara_schar_all(int                ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const signed char *op)
ncmpi_put_vara_schar_all	src/lib/pnetcdf.h	/^int ncmpi_put_vara_schar_all(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const signed char *op)
ncmpi_put_vara_short	src/lib/getput_vara.c	/^ncmpi_put_vara_short(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const short *op)
ncmpi_put_vara_short	src/lib/pnetcdf.h	/^int ncmpi_put_vara_short(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const short *op)
ncmpi_put_vara_short_all	src/lib/getput_vara.c	/^ncmpi_put_vara_short_all(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const short *op)
ncmpi_put_vara_short_all	src/lib/pnetcdf.h	/^int ncmpi_put_vara_short_all(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const short *op)
ncmpi_put_vara_text	src/lib/getput_vara.c	/^ncmpi_put_vara_text(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const char *op)
ncmpi_put_vara_text	src/lib/pnetcdf.h	/^int ncmpi_put_vara_text(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const char *op)
ncmpi_put_vara_text_all	src/lib/getput_vara.c	/^ncmpi_put_vara_text_all(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const char *op)
ncmpi_put_vara_text_all	src/lib/pnetcdf.h	/^int ncmpi_put_vara_text_all(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const char *op)
ncmpi_put_vara_uchar	src/lib/getput_vara.c	/^ncmpi_put_vara_uchar(int                  ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const unsigned char *op)
ncmpi_put_vara_uchar	src/lib/pnetcdf.h	/^int ncmpi_put_vara_uchar(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const unsigned char *op)
ncmpi_put_vara_uchar_all	src/lib/getput_vara.c	/^ncmpi_put_vara_uchar_all(int                  ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const unsigned char *op)
ncmpi_put_vara_uchar_all	src/lib/pnetcdf.h	/^int ncmpi_put_vara_uchar_all(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const unsigned char *op)
ncmpi_put_varm	src/lib/getput_varm.c	/^ncmpi_put_varm(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const void *buf, MPI_Offset bufcount, MPI_Datatype datatype)
ncmpi_put_varm	src/lib/pnetcdf.h	/^int ncmpi_put_varm(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const void *buf, MPI_Offset bufcount, MPI_Datatype datatype)
ncmpi_put_varm_all	src/lib/getput_varm.c	/^ncmpi_put_varm_all(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const void *buf, MPI_Offset bufcount, MPI_Datatype datatype)
ncmpi_put_varm_all	src/lib/pnetcdf.h	/^int ncmpi_put_varm_all(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const void *buf, MPI_Offset bufcount, MPI_Datatype datatype)
ncmpi_put_varm_double	src/lib/getput_varm.c	/^ncmpi_put_varm_double(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const double *op)
ncmpi_put_varm_double	src/lib/pnetcdf.h	/^int ncmpi_put_varm_double(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const double *op)
ncmpi_put_varm_double_all	src/lib/getput_varm.c	/^ncmpi_put_varm_double_all(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const double *op)
ncmpi_put_varm_double_all	src/lib/pnetcdf.h	/^int ncmpi_put_varm_double_all(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const double *op)
ncmpi_put_varm_float	src/lib/getput_varm.c	/^ncmpi_put_varm_float(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const float *op)
ncmpi_put_varm_float	src/lib/pnetcdf.h	/^int ncmpi_put_varm_float(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const float *op)
ncmpi_put_varm_float_all	src/lib/getput_varm.c	/^ncmpi_put_varm_float_all(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const float *op)
ncmpi_put_varm_float_all	src/lib/pnetcdf.h	/^int ncmpi_put_varm_float_all(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const float *op)
ncmpi_put_varm_int	src/lib/getput_varm.c	/^ncmpi_put_varm_int(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const int *op)
ncmpi_put_varm_int	src/lib/pnetcdf.h	/^int ncmpi_put_varm_int(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const int *op)
ncmpi_put_varm_int_all	src/lib/getput_varm.c	/^ncmpi_put_varm_int_all(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const int *op)
ncmpi_put_varm_int_all	src/lib/pnetcdf.h	/^int ncmpi_put_varm_int_all(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const int *op)
ncmpi_put_varm_long	src/lib/getput_varm.c	/^ncmpi_put_varm_long(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const long *op)
ncmpi_put_varm_long	src/lib/pnetcdf.h	/^int ncmpi_put_varm_long(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const long *op)
ncmpi_put_varm_long_all	src/lib/getput_varm.c	/^ncmpi_put_varm_long_all(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const long *op)
ncmpi_put_varm_long_all	src/lib/pnetcdf.h	/^int ncmpi_put_varm_long_all(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const long *op)
ncmpi_put_varm_schar	src/lib/getput_varm.c	/^ncmpi_put_varm_schar(int                ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const signed char *op)
ncmpi_put_varm_schar	src/lib/pnetcdf.h	/^int ncmpi_put_varm_schar(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const signed char *op)
ncmpi_put_varm_schar_all	src/lib/getput_varm.c	/^ncmpi_put_varm_schar_all(int                ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const signed char *op)
ncmpi_put_varm_schar_all	src/lib/pnetcdf.h	/^int ncmpi_put_varm_schar_all(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const signed char *op)
ncmpi_put_varm_short	src/lib/getput_varm.c	/^ncmpi_put_varm_short(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const short *op)
ncmpi_put_varm_short	src/lib/pnetcdf.h	/^int ncmpi_put_varm_short(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const short *op)
ncmpi_put_varm_short_all	src/lib/getput_varm.c	/^ncmpi_put_varm_short_all(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const short *op)
ncmpi_put_varm_short_all	src/lib/pnetcdf.h	/^int ncmpi_put_varm_short_all(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const short *op)
ncmpi_put_varm_text	src/lib/getput_varm.c	/^ncmpi_put_varm_text(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const char *op)
ncmpi_put_varm_text	src/lib/pnetcdf.h	/^int ncmpi_put_varm_text(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const char *op)
ncmpi_put_varm_text_all	src/lib/getput_varm.c	/^ncmpi_put_varm_text_all(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const char *op)
ncmpi_put_varm_text_all	src/lib/pnetcdf.h	/^int ncmpi_put_varm_text_all(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const char *op)
ncmpi_put_varm_uchar	src/lib/getput_varm.c	/^ncmpi_put_varm_uchar(int                  ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const unsigned char *op)
ncmpi_put_varm_uchar	src/lib/pnetcdf.h	/^int ncmpi_put_varm_uchar(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const unsigned char *op)
ncmpi_put_varm_uchar_all	src/lib/getput_varm.c	/^ncmpi_put_varm_uchar_all(int                  ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const unsigned char *op)
ncmpi_put_varm_uchar_all	src/lib/pnetcdf.h	/^int ncmpi_put_varm_uchar_all(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], const unsigned char *op)
ncmpi_put_vars	src/lib/getput_vars.c	/^ncmpi_put_vars(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const void *buf, MPI_Offset bufcount, MPI_Datatype datatype)
ncmpi_put_vars	src/lib/pnetcdf.h	/^int ncmpi_put_vars(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const void *buf, MPI_Offset bufcount, MPI_Datatype datatype)
ncmpi_put_vars_all	src/lib/getput_vars.c	/^ncmpi_put_vars_all(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const void *buf, MPI_Offset bufcount, MPI_Datatype datatype)
ncmpi_put_vars_all	src/lib/pnetcdf.h	/^int ncmpi_put_vars_all(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const void *buf, MPI_Offset bufcount, MPI_Datatype datatype)
ncmpi_put_vars_double	src/lib/getput_vars.c	/^ncmpi_put_vars_double(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const double *op)
ncmpi_put_vars_double	src/lib/pnetcdf.h	/^int ncmpi_put_vars_double(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const double *op)
ncmpi_put_vars_double_all	src/lib/getput_vars.c	/^ncmpi_put_vars_double_all(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const double *op)
ncmpi_put_vars_double_all	src/lib/pnetcdf.h	/^int ncmpi_put_vars_double_all(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const double *op)
ncmpi_put_vars_float	src/lib/getput_vars.c	/^ncmpi_put_vars_float(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const float *op)
ncmpi_put_vars_float	src/lib/pnetcdf.h	/^int ncmpi_put_vars_float(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const float *op)
ncmpi_put_vars_float_all	src/lib/getput_vars.c	/^ncmpi_put_vars_float_all(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const float *op)
ncmpi_put_vars_float_all	src/lib/pnetcdf.h	/^int ncmpi_put_vars_float_all(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const float *op)
ncmpi_put_vars_int	src/lib/getput_vars.c	/^ncmpi_put_vars_int(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const int *op)
ncmpi_put_vars_int	src/lib/pnetcdf.h	/^int ncmpi_put_vars_int(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const int *op)
ncmpi_put_vars_int_all	src/lib/getput_vars.c	/^ncmpi_put_vars_int_all(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const int *op)
ncmpi_put_vars_int_all	src/lib/pnetcdf.h	/^int ncmpi_put_vars_int_all(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const int *op)
ncmpi_put_vars_long	src/lib/getput_vars.c	/^ncmpi_put_vars_long(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const long *op)
ncmpi_put_vars_long	src/lib/pnetcdf.h	/^int ncmpi_put_vars_long(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const long *op)
ncmpi_put_vars_long_all	src/lib/getput_vars.c	/^ncmpi_put_vars_long_all(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const long *op)
ncmpi_put_vars_long_all	src/lib/pnetcdf.h	/^int ncmpi_put_vars_long_all(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const long *op)
ncmpi_put_vars_schar	src/lib/getput_vars.c	/^ncmpi_put_vars_schar(int                ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const signed char *op)
ncmpi_put_vars_schar	src/lib/pnetcdf.h	/^int ncmpi_put_vars_schar(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const signed char *op)
ncmpi_put_vars_schar_all	src/lib/getput_vars.c	/^ncmpi_put_vars_schar_all(int                ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const signed char *op)
ncmpi_put_vars_schar_all	src/lib/pnetcdf.h	/^int ncmpi_put_vars_schar_all(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const signed char *op)
ncmpi_put_vars_short	src/lib/getput_vars.c	/^ncmpi_put_vars_short(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const short *op)
ncmpi_put_vars_short	src/lib/pnetcdf.h	/^int ncmpi_put_vars_short(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const short *op)
ncmpi_put_vars_short_all	src/lib/getput_vars.c	/^ncmpi_put_vars_short_all(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const short *op)
ncmpi_put_vars_short_all	src/lib/pnetcdf.h	/^int ncmpi_put_vars_short_all(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const short *op)
ncmpi_put_vars_text	src/lib/getput_vars.c	/^ncmpi_put_vars_text(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const char *op)
ncmpi_put_vars_text	src/lib/pnetcdf.h	/^int ncmpi_put_vars_text(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const char *op)
ncmpi_put_vars_text_all	src/lib/getput_vars.c	/^ncmpi_put_vars_text_all(int               ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const char *op)
ncmpi_put_vars_text_all	src/lib/pnetcdf.h	/^int ncmpi_put_vars_text_all(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const char *op)
ncmpi_put_vars_uchar	src/lib/getput_vars.c	/^ncmpi_put_vars_uchar(int                  ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const unsigned char *op)
ncmpi_put_vars_uchar	src/lib/pnetcdf.h	/^int ncmpi_put_vars_uchar(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const unsigned char *op)
ncmpi_put_vars_uchar_all	src/lib/getput_vars.c	/^ncmpi_put_vars_uchar_all(int                  ncid,$/;"	f	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const unsigned char *op)
ncmpi_put_vars_uchar_all	src/lib/pnetcdf.h	/^int ncmpi_put_vars_uchar_all(int ncid, int varid, const MPI_Offset start[],$/;"	p	signature:(int ncid, int varid, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const unsigned char *op)
ncmpi_redef	src/lib/mpinetcdf.c	/^ncmpi_redef(int ncid) {$/;"	f	signature:(int ncid)
ncmpi_redef	src/lib/pnetcdf.h	/^int ncmpi_redef(int ncid);$/;"	p	signature:(int ncid)
ncmpi_rename_att	src/lib/attr.c	/^ncmpi_rename_att( int ncid, int varid, const char *name, const char *newname)$/;"	f	signature:( int ncid, int varid, const char *name, const char *newname)
ncmpi_rename_att	src/lib/nc.h	/^ncmpi_rename_att( int ncid, int varid, const char *name, const char *newname);$/;"	p	signature:( int ncid, int varid, const char *name, const char *newname)
ncmpi_rename_att	src/lib/pnetcdf.h	/^int ncmpi_rename_att(int ncid, int varid, const char *name,$/;"	p	signature:(int ncid, int varid, const char *name, const char *newname)
ncmpi_rename_dim	src/lib/dim.c	/^ncmpi_rename_dim( int ncid, int dimid, const char *newname)$/;"	f	signature:( int ncid, int dimid, const char *newname)
ncmpi_rename_dim	src/lib/nc.h	/^ncmpi_rename_dim( int ncid, int dimid, const char *newname);$/;"	p	signature:( int ncid, int dimid, const char *newname)
ncmpi_rename_dim	src/lib/pnetcdf.h	/^int ncmpi_rename_dim(int ncid, int dimid, const char *name);$/;"	p	signature:(int ncid, int dimid, const char *name)
ncmpi_rename_var	src/lib/nc.h	/^ncmpi_rename_var(int ncid, int varid, const char *newname);$/;"	p	signature:(int ncid, int varid, const char *newname)
ncmpi_rename_var	src/lib/pnetcdf.h	/^int ncmpi_rename_var(int ncid, int varid, const char *name);$/;"	p	signature:(int ncid, int varid, const char *name)
ncmpi_rename_var	src/lib/var.c	/^ncmpi_rename_var(int ncid,  int varid, const char *newname)$/;"	f	signature:(int ncid, int varid, const char *newname)
ncmpi_scan_buffer	src/utils/ncgen/ncgenyy.c	/^YY_BUFFER_STATE ncmpi_scan_buffer  (char * base, yy_size_t  size )$/;"	f	signature:(char * base, yy_size_t size )
ncmpi_scan_buffer	src/utils/ncgen/ncgenyy.c	/^YY_BUFFER_STATE ncmpi_scan_buffer (char *base,yy_size_t size  );$/;"	p	file:	signature:(char *base,yy_size_t size )
ncmpi_scan_bytes	src/utils/ncgen/ncgenyy.c	/^YY_BUFFER_STATE ncmpi_scan_bytes  (yyconst char * yybytes, int  _yybytes_len )$/;"	f	signature:(yyconst char * yybytes, int _yybytes_len )
ncmpi_scan_bytes	src/utils/ncgen/ncgenyy.c	/^YY_BUFFER_STATE ncmpi_scan_bytes (yyconst char *bytes,int len  );$/;"	p	file:	signature:(yyconst char *bytes,int len )
ncmpi_scan_string	src/utils/ncgen/ncgenyy.c	/^YY_BUFFER_STATE ncmpi_scan_string (yyconst char * yystr )$/;"	f	signature:(yyconst char * yystr )
ncmpi_scan_string	src/utils/ncgen/ncgenyy.c	/^YY_BUFFER_STATE ncmpi_scan_string (yyconst char *yy_str  );$/;"	p	file:	signature:(yyconst char *yy_str )
ncmpi_set_default_format	src/lib/nc.c	/^ncmpi_set_default_format(int format, int *old_formatp)$/;"	f	signature:(int format, int *old_formatp)
ncmpi_set_default_format	src/lib/pnetcdf.h	/^int ncmpi_set_default_format(int format, int *old_formatp);$/;"	p	signature:(int format, int *old_formatp)
ncmpi_set_fill	src/lib/mpinetcdf.c	/^ncmpi_set_fill(int  ncid,$/;"	f	signature:(int ncid, int fillmode, int *old_mode_ptr)
ncmpi_set_fill	src/lib/pnetcdf.h	/^int ncmpi_set_fill(int ncid, int fillmode, int *old_modep);$/;"	p	signature:(int ncid, int fillmode, int *old_modep)
ncmpi_strerror	src/lib/error.c	/^ncmpi_strerror(int err)$/;"	f	signature:(int err)
ncmpi_strerror	src/lib/pnetcdf.h	/^const char* ncmpi_strerror(int err);$/;"	p	signature:(int err)
ncmpi_switch_to_buffer	src/utils/ncgen/ncgenyy.c	/^    void ncmpi_switch_to_buffer  (YY_BUFFER_STATE  new_buffer )$/;"	f	signature:(YY_BUFFER_STATE new_buffer )
ncmpi_switch_to_buffer	src/utils/ncgen/ncgenyy.c	/^void ncmpi_switch_to_buffer (YY_BUFFER_STATE new_buffer  );$/;"	p	file:	signature:(YY_BUFFER_STATE new_buffer )
ncmpi_sync	src/lib/mpinetcdf.c	/^ncmpi_sync(int ncid) {$/;"	f	signature:(int ncid)
ncmpi_sync	src/lib/pnetcdf.h	/^int ncmpi_sync(int ncid);$/;"	p	signature:(int ncid)
ncmpi_type	src/lib/pnetcdf.h	/^typedef nc_type ncmpi_type;$/;"	t
ncmpi_wait	src/lib/nonblocking.c	/^ncmpi_wait(int ncid,$/;"	f	signature:(int ncid, int num_reqs, int *req_ids, int *statuses)
ncmpi_wait	src/lib/pnetcdf.h	/^int ncmpi_wait(int ncid, int count, int array_of_requests[],$/;"	p	signature:(int ncid, int count, int array_of_requests[], int array_of_statuses[])
ncmpi_wait_all	src/lib/nonblocking.c	/^ncmpi_wait_all(int  ncid,$/;"	f	signature:(int ncid, int num_reqs, int *req_ids, int *statuses)
ncmpi_wait_all	src/lib/pnetcdf.h	/^int ncmpi_wait_all(int ncid, int count, int array_of_requests[],$/;"	p	signature:(int ncid, int count, int array_of_requests[], int array_of_statuses[])
ncmpialloc	src/utils/ncgen/ncgenyy.c	/^void *ncmpialloc (yy_size_t  );$/;"	p	file:
ncmpialloc	src/utils/ncgen/ncgenyy.c	/^void *ncmpialloc (yy_size_t  size )$/;"	f	signature:(yy_size_t size )
ncmpiensure_buffer_stack	src/utils/ncgen/ncgenyy.c	/^static void ncmpiensure_buffer_stack (void );$/;"	p	file:	signature:(void )
ncmpiensure_buffer_stack	src/utils/ncgen/ncgenyy.c	/^static void ncmpiensure_buffer_stack (void)$/;"	f	file:	signature:(void)
ncmpifree	src/utils/ncgen/ncgenyy.c	/^void ncmpifree (void *  );$/;"	p	file:	signature:(void * )
ncmpifree	src/utils/ncgen/ncgenyy.c	/^void ncmpifree (void * ptr )$/;"	f	signature:(void * ptr )
ncmpiget_debug	src/utils/ncgen/ncgenyy.c	/^int ncmpiget_debug  (void)$/;"	f	signature:(void)
ncmpiget_debug	src/utils/ncgen/ncgenyy.c	/^int ncmpiget_debug (void );$/;"	p	file:	signature:(void )
ncmpiget_extra	src/utils/ncgen/ncgenyy.c	/^YY_EXTRA_TYPE ncmpiget_extra (void );$/;"	p	file:	signature:(void )
ncmpiget_in	src/utils/ncgen/ncgenyy.c	/^FILE *ncmpiget_in  (void)$/;"	f	signature:(void)
ncmpiget_in	src/utils/ncgen/ncgenyy.c	/^FILE *ncmpiget_in (void );$/;"	p	file:	signature:(void )
ncmpiget_leng	src/utils/ncgen/ncgenyy.c	/^int ncmpiget_leng  (void)$/;"	f	signature:(void)
ncmpiget_leng	src/utils/ncgen/ncgenyy.c	/^int ncmpiget_leng (void );$/;"	p	file:	signature:(void )
ncmpiget_lineno	src/utils/ncgen/ncgenyy.c	/^int ncmpiget_lineno  (void)$/;"	f	signature:(void)
ncmpiget_lineno	src/utils/ncgen/ncgenyy.c	/^int ncmpiget_lineno (void );$/;"	p	file:	signature:(void )
ncmpiget_out	src/utils/ncgen/ncgenyy.c	/^FILE *ncmpiget_out  (void)$/;"	f	signature:(void)
ncmpiget_out	src/utils/ncgen/ncgenyy.c	/^FILE *ncmpiget_out (void );$/;"	p	file:	signature:(void )
ncmpiget_text	src/utils/ncgen/ncgenyy.c	/^char *ncmpiget_text  (void)$/;"	f	signature:(void)
ncmpiget_text	src/utils/ncgen/ncgenyy.c	/^char *ncmpiget_text (void );$/;"	p	file:	signature:(void )
ncmpii_NC_check_id	src/lib/nc.c	/^ncmpii_NC_check_id(int ncid, NC **ncpp)$/;"	f	signature:(int ncid, NC **ncpp)
ncmpii_NC_check_id	src/lib/nc.h	/^ncmpii_NC_check_id(int ncid, NC **ncpp);$/;"	p	signature:(int ncid, NC **ncpp)
ncmpii_NC_check_name	src/lib/nc.h	/^ncmpii_NC_check_name(const char *name);$/;"	p	signature:(const char *name)
ncmpii_NC_check_name	src/lib/string.c	/^ncmpii_NC_check_name(const char *name)$/;"	f	signature:(const char *name)
ncmpii_NC_check_vlen	src/lib/nc.h	/^ncmpii_NC_check_vlen(NC_var *varp, MPI_Offset vlen_max);$/;"	p	signature:(NC_var *varp, MPI_Offset vlen_max)
ncmpii_NC_check_vlen	src/lib/var.c	/^ncmpii_NC_check_vlen(NC_var *varp, MPI_Offset vlen_max) {$/;"	f	signature:(NC_var *varp, MPI_Offset vlen_max)
ncmpii_NC_close	src/lib/nc.c	/^ncmpii_NC_close(NC *ncp) {$/;"	f	signature:(NC *ncp)
ncmpii_NC_close	src/lib/nc.h	/^ncmpii_NC_close(NC *ncp);$/;"	p	signature:(NC *ncp)
ncmpii_NC_computeshapes	src/lib/header.c	/^ncmpii_NC_computeshapes(NC *ncp)$/;"	f	signature:(NC *ncp)
ncmpii_NC_computeshapes	src/lib/nc.h	/^ncmpii_NC_computeshapes(NC *ncp);$/;"	p	signature:(NC *ncp)
ncmpii_NC_enddef	src/lib/nc.c	/^ncmpii_NC_enddef(NC *ncp) {$/;"	f	signature:(NC *ncp)
ncmpii_NC_enddef	src/lib/nc.h	/^ncmpii_NC_enddef(NC *ncp);$/;"	p	signature:(NC *ncp)
ncmpii_NC_findattr	src/lib/attr.c	/^ncmpii_NC_findattr(const NC_attrarray *ncap, const char *name)$/;"	f	signature:(const NC_attrarray *ncap, const char *name)
ncmpii_NC_findattr	src/lib/nc.h	/^ncmpii_NC_findattr(const NC_attrarray *ncap, const char *name);$/;"	p	signature:(const NC_attrarray *ncap, const char *name)
ncmpii_NC_findvar	src/lib/nc.h	/^ncmpii_NC_findvar(const NC_vararray *ncap, const char *name, NC_var **varpp);$/;"	p	signature:(const NC_vararray *ncap, const char *name, NC_var **varpp)
ncmpii_NC_findvar	src/lib/var.c	/^ncmpii_NC_findvar(const NC_vararray *ncap, const char *name, NC_var **varpp)$/;"	f	signature:(const NC_vararray *ncap, const char *name, NC_var **varpp)
ncmpii_NC_lookupvar	src/lib/nc.h	/^ncmpii_NC_lookupvar(NC *ncp, int varid);$/;"	p	signature:(NC *ncp, int varid)
ncmpii_NC_lookupvar	src/lib/var.c	/^ncmpii_NC_lookupvar(NC *ncp,  int varid)$/;"	f	signature:(NC *ncp, int varid)
ncmpii_NC_sync	src/lib/nc.c	/^ncmpii_NC_sync(NC  *ncp,$/;"	f	signature:(NC *ncp, int doFsync)
ncmpii_NC_sync	src/lib/nc.h	/^ncmpii_NC_sync(NC *ncp, int doFsync);$/;"	p	signature:(NC *ncp, int doFsync)
ncmpii_NC_var_shape64	src/lib/nc.h	/^ncmpii_NC_var_shape64(NC_var *varp, const NC_dimarray *dims);$/;"	p	signature:(NC_var *varp, const NC_dimarray *dims)
ncmpii_NC_var_shape64	src/lib/var.c	/^ncmpii_NC_var_shape64(NC_var *varp, const NC_dimarray *dims)$/;"	f	signature:(NC_var *varp, const NC_dimarray *dims)
ncmpii_add_to_NCList	src/lib/nc.c	/^ncmpii_add_to_NCList(NC *ncp)$/;"	f	signature:(NC *ncp)
ncmpii_add_to_NCList	src/lib/nc.h	/^ncmpii_add_to_NCList(NC *ncp);$/;"	p	signature:(NC *ncp)
ncmpii_begin_indep_data	src/lib/mpinetcdf.c	/^ncmpii_begin_indep_data(NC *ncp) {$/;"	f	file:	signature:(NC *ncp)
ncmpii_begin_indep_data	src/lib/mpinetcdf.c	/^static int ncmpii_begin_indep_data(NC *ncp);$/;"	p	file:	signature:(NC *ncp)
ncmpii_cancel	src/lib/nc.h	/^ncmpii_cancel(NC *ncp, int num_req, int *req_ids, int *statuses);$/;"	p	signature:(NC *ncp, int num_req, int *req_ids, int *statuses)
ncmpii_cancel	src/lib/nonblocking.c	/^ncmpii_cancel(NC  *ncp,$/;"	f	signature:(NC *ncp, int num_req, int *req_ids, int *statuses)
ncmpii_check_mpifh	src/lib/mpinetcdf.c	/^ncmpii_check_mpifh(NC       *ncp,$/;"	f	signature:(NC *ncp, MPI_File *mpifh, MPI_Comm comm, int collective)
ncmpii_check_mpifh	src/lib/nc.h	/^int ncmpii_check_mpifh(NC* ncp, MPI_File *mpifh, MPI_Comm comm,$/;"	p	signature:(NC* ncp, MPI_File *mpifh, MPI_Comm comm, int collective)
ncmpii_cktype	src/lib/nc.c	/^ncmpii_cktype(nc_type type)$/;"	f	signature:(nc_type type)
ncmpii_cktype	src/lib/nc.h	/^ncmpii_cktype(nc_type datatype);$/;"	p	signature:(nc_type datatype)
ncmpii_comp_attrs	src/lib/header.c	/^ncmpii_comp_attrs(NC_attrarray *nc_attr1,$/;"	f	file:	signature:(NC_attrarray *nc_attr1, NC_attrarray *nc_attr2)
ncmpii_comp_dims	src/lib/header.c	/^ncmpii_comp_dims(NC_dimarray *nc_dim1,$/;"	f	file:	signature:(NC_dimarray *nc_dim1, NC_dimarray *nc_dim2)
ncmpii_comp_vars	src/lib/header.c	/^ncmpii_comp_vars(NC_vararray *nc_var1,$/;"	f	file:	signature:(NC_vararray *nc_var1, NC_vararray *nc_var2)
ncmpii_darray_get_totalblks	src/lib/ncmpidtype.c	/^static int ncmpii_darray_get_totalblks(int rank,$/;"	f	file:	signature:(int rank, MPI_Offset ndims, int array_of_gsizes[], int array_of_distribs[], int array_of_dargs[], int array_of_psizes[])
ncmpii_data_repack	src/lib/ncmpidtype.c	/^int ncmpii_data_repack(void *inbuf, $/;"	f	signature:(void *inbuf, MPI_Offset incount, MPI_Datatype intype, void *outbuf, MPI_Offset outcount, MPI_Datatype outtype)
ncmpii_data_repack	src/lib/ncmpidtype.h	/^int ncmpii_data_repack(void *inbuf,$/;"	p	signature:(void *inbuf, MPI_Offset incount, MPI_Datatype intype, void *outbuf, MPI_Offset outcount, MPI_Datatype outtype)
ncmpii_del_from_NCList	src/lib/nc.c	/^ncmpii_del_from_NCList(NC *ncp)$/;"	f	signature:(NC *ncp)
ncmpii_del_from_NCList	src/lib/nc.h	/^ncmpii_del_from_NCList(NC *ncp);$/;"	p	signature:(NC *ncp)
ncmpii_dtype_decode	src/lib/ncmpidtype.c	/^int ncmpii_dtype_decode(MPI_Datatype dtype, $/;"	f	signature:(MPI_Datatype dtype, MPI_Datatype *ptype, int *el_size, MPI_Offset *nelems, int *isderived, int *iscontig_of_ptypes)
ncmpii_dtype_decode	src/lib/ncmpidtype.h	/^int ncmpii_dtype_decode(MPI_Datatype dtype,$/;"	p	signature:(MPI_Datatype dtype, MPI_Datatype *ptype, int *el_size, MPI_Offset *nelems, int *isderived, int *iscontig_of_ptypes)
ncmpii_dup_NC	src/lib/nc.c	/^ncmpii_dup_NC(const NC *ref)$/;"	f	signature:(const NC *ref)
ncmpii_dup_NC	src/lib/nc.h	/^ncmpii_dup_NC(const NC *ref);$/;"	p	signature:(const NC *ref)
ncmpii_dup_NC_attrarrayV	src/lib/attr.c	/^ncmpii_dup_NC_attrarrayV(NC_attrarray *ncap, const NC_attrarray *ref)$/;"	f	signature:(NC_attrarray *ncap, const NC_attrarray *ref)
ncmpii_dup_NC_attrarrayV	src/lib/nc.h	/^ncmpii_dup_NC_attrarrayV(NC_attrarray *ncap, const NC_attrarray *ref);$/;"	p	signature:(NC_attrarray *ncap, const NC_attrarray *ref)
ncmpii_dup_NC_dimarrayV	src/lib/dim.c	/^ncmpii_dup_NC_dimarrayV(NC_dimarray *ncap, const NC_dimarray *ref)$/;"	f	signature:(NC_dimarray *ncap, const NC_dimarray *ref)
ncmpii_dup_NC_dimarrayV	src/lib/nc.h	/^ncmpii_dup_NC_dimarrayV(NC_dimarray *ncap, const NC_dimarray *ref);$/;"	p	signature:(NC_dimarray *ncap, const NC_dimarray *ref)
ncmpii_dup_NC_vararrayV	src/lib/nc.h	/^ncmpii_dup_NC_vararrayV(NC_vararray *ncap, const NC_vararray *ref);$/;"	p	signature:(NC_vararray *ncap, const NC_vararray *ref)
ncmpii_dup_NC_vararrayV	src/lib/var.c	/^ncmpii_dup_NC_vararrayV(NC_vararray *ncap, const NC_vararray *ref)$/;"	f	signature:(NC_vararray *ncap, const NC_vararray *ref)
ncmpii_echar	src/lib/convert_swap.c	/^ncmpii_echar(nc_type      nctype,$/;"	f	signature:(nc_type nctype, MPI_Datatype mpitype)
ncmpii_echar	src/lib/nc.h	/^int ncmpii_echar(nc_type nctype,MPI_Datatype mpitype);$/;"	p	signature:(nc_type nctype,MPI_Datatype mpitype)
ncmpii_elem_NC_attrarray	src/lib/nc.h	/^ncmpii_elem_NC_attrarray(const NC_attrarray *ncap, MPI_Offset elem);$/;"	p	signature:(const NC_attrarray *ncap, MPI_Offset elem)
ncmpii_elem_NC_dimarray	src/lib/dim.c	/^ncmpii_elem_NC_dimarray(const NC_dimarray *ncap, size_t elem)$/;"	f	signature:(const NC_dimarray *ncap, size_t elem)
ncmpii_elem_NC_dimarray	src/lib/nc.h	/^ncmpii_elem_NC_dimarray(const NC_dimarray *ncap, size_t elem);$/;"	p	signature:(const NC_dimarray *ncap, size_t elem)
ncmpii_end_indep_data	src/lib/mpinetcdf.c	/^ncmpii_end_indep_data(NC *ncp) {$/;"	f	file:	signature:(NC *ncp)
ncmpii_end_indep_data	src/lib/mpinetcdf.c	/^static int ncmpii_end_indep_data(NC *ncp);$/;"	p	file:	signature:(NC *ncp)
ncmpii_find_NC_Udim	src/lib/dim.c	/^ncmpii_find_NC_Udim(const NC_dimarray *ncap, NC_dim **dimpp)$/;"	f	signature:(const NC_dimarray *ncap, NC_dim **dimpp)
ncmpii_find_NC_Udim	src/lib/nc.h	/^ncmpii_find_NC_Udim(const NC_dimarray *ncap, NC_dim **dimpp);$/;"	p	signature:(const NC_dimarray *ncap, NC_dim **dimpp)
ncmpii_free_NC	src/lib/nc.c	/^ncmpii_free_NC(NC *ncp)$/;"	f	signature:(NC *ncp)
ncmpii_free_NC	src/lib/nc.h	/^ncmpii_free_NC(NC *ncp);$/;"	p	signature:(NC *ncp)
ncmpii_free_NC_attr	src/lib/attr.c	/^ncmpii_free_NC_attr(NC_attr *attrp)$/;"	f	signature:(NC_attr *attrp)
ncmpii_free_NC_attr	src/lib/nc.h	/^ncmpii_free_NC_attr(NC_attr *attrp);$/;"	p	signature:(NC_attr *attrp)
ncmpii_free_NC_attrarrayV	src/lib/attr.c	/^ncmpii_free_NC_attrarrayV(NC_attrarray *ncap)$/;"	f	signature:(NC_attrarray *ncap)
ncmpii_free_NC_attrarrayV	src/lib/nc.h	/^ncmpii_free_NC_attrarrayV(NC_attrarray *ncap);$/;"	p	signature:(NC_attrarray *ncap)
ncmpii_free_NC_attrarrayV0	src/lib/attr.c	/^ncmpii_free_NC_attrarrayV0(NC_attrarray *ncap)$/;"	f	signature:(NC_attrarray *ncap)
ncmpii_free_NC_attrarrayV0	src/lib/nc.h	/^ncmpii_free_NC_attrarrayV0(NC_attrarray *ncap);$/;"	p	signature:(NC_attrarray *ncap)
ncmpii_free_NC_dim	src/lib/dim.c	/^ncmpii_free_NC_dim(NC_dim *dimp)$/;"	f	signature:(NC_dim *dimp)
ncmpii_free_NC_dim	src/lib/nc.h	/^ncmpii_free_NC_dim(NC_dim *dimp);$/;"	p	signature:(NC_dim *dimp)
ncmpii_free_NC_dimarrayV	src/lib/dim.c	/^ncmpii_free_NC_dimarrayV(NC_dimarray *ncap)$/;"	f	signature:(NC_dimarray *ncap)
ncmpii_free_NC_dimarrayV	src/lib/nc.h	/^ncmpii_free_NC_dimarrayV(NC_dimarray *ncap);$/;"	p	signature:(NC_dimarray *ncap)
ncmpii_free_NC_dimarrayV0	src/lib/dim.c	/^ncmpii_free_NC_dimarrayV0(NC_dimarray *ncap)$/;"	f	signature:(NC_dimarray *ncap)
ncmpii_free_NC_dimarrayV0	src/lib/nc.h	/^ncmpii_free_NC_dimarrayV0(NC_dimarray *ncap);$/;"	p	signature:(NC_dimarray *ncap)
ncmpii_free_NC_string	src/lib/nc.h	/^ncmpii_free_NC_string(NC_string *ncstrp);$/;"	p	signature:(NC_string *ncstrp)
ncmpii_free_NC_string	src/lib/string.c	/^ncmpii_free_NC_string(NC_string *ncstrp)$/;"	f	signature:(NC_string *ncstrp)
ncmpii_free_NC_var	src/lib/nc.h	/^ncmpii_free_NC_var(NC_var *varp);$/;"	p	signature:(NC_var *varp)
ncmpii_free_NC_var	src/lib/var.c	/^ncmpii_free_NC_var(NC_var *varp)$/;"	f	signature:(NC_var *varp)
ncmpii_free_NC_vararrayV	src/lib/nc.h	/^ncmpii_free_NC_vararrayV(NC_vararray *ncap);$/;"	p	signature:(NC_vararray *ncap)
ncmpii_free_NC_vararrayV	src/lib/var.c	/^ncmpii_free_NC_vararrayV(NC_vararray *ncap)$/;"	f	signature:(NC_vararray *ncap)
ncmpii_free_NC_vararrayV0	src/lib/nc.h	/^ncmpii_free_NC_vararrayV0(NC_vararray *ncap);$/;"	p	signature:(NC_vararray *ncap)
ncmpii_free_NC_vararrayV0	src/lib/var.c	/^ncmpii_free_NC_vararrayV0(NC_vararray *ncap)$/;"	f	signature:(NC_vararray *ncap)
ncmpii_get_att	src/lib/attr.c	/^ncmpii_get_att(int ncid, int varid, const char *name, void *value)$/;"	f	signature:(int ncid, int varid, const char *name, void *value)
ncmpii_get_att	src/lib/nc.h	/^ncmpii_get_att(int ncid, int varid, const char *name, void *value);$/;"	p	signature:(int ncid, int varid, const char *name, void *value)
ncmpii_get_offset	src/lib/filetype.c	/^ncmpii_get_offset(NC               *ncp,$/;"	f	signature:(NC *ncp, NC_var *varp, const MPI_Offset starts[], const MPI_Offset counts[], const MPI_Offset strides[], MPI_Offset *offset_ptr)
ncmpii_get_offset	src/lib/nc.h	/^int ncmpii_get_offset(NC *ncp, NC_var *varp, const MPI_Offset starts[],$/;"	p	signature:(NC *ncp, NC_var *varp, const MPI_Offset starts[], const MPI_Offset counts[], const MPI_Offset strides[], MPI_Offset *offset_ptr)
ncmpii_getput_varm	src/lib/getput_varm.c	/^ncmpii_getput_varm(NC               *ncp,$/;"	f	signature:(NC *ncp, NC_var *varp, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], void *buf, MPI_Offset bufcount, MPI_Datatype datatype, int rw_flag, int io_method)
ncmpii_getput_varm	src/lib/nc.h	/^ncmpii_getput_varm(NC *ncp, NC_var *varp, const MPI_Offset start[],$/;"	p	signature:(NC *ncp, NC_var *varp, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], void *buf, MPI_Offset bufcount, MPI_Datatype datatype, int rw_flag, int io_method)
ncmpii_getput_vars	src/lib/getput_vars.c	/^ncmpii_getput_vars(NC               *ncp,$/;"	f	signature:(NC *ncp, NC_var *varp, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], void *buf, MPI_Offset bufcount, MPI_Datatype datatype, int rw_flag, int io_method)
ncmpii_getput_vars	src/lib/nc.h	/^ncmpii_getput_vars(NC *ncp, NC_var *varp, const MPI_Offset *start,$/;"	p	signature:(NC *ncp, NC_var *varp, const MPI_Offset *start, const MPI_Offset *count, const MPI_Offset *stride, void *buf, MPI_Offset bufcount, MPI_Datatype datatype, int rw_flag, int io_method)
ncmpii_handle_error	src/lib/error.c	/^void ncmpii_handle_error(int rank, int mpi_status, char * msg)$/;"	f	signature:(int rank, int mpi_status, char * msg)
ncmpii_handle_error	src/lib/nc.h	/^void ncmpii_handle_error(int rank, int mpi_status, char *msg);$/;"	p	signature:(int rank, int mpi_status, char *msg)
ncmpii_hdr_check_NC	src/lib/header.c	/^ncmpii_hdr_check_NC(bufferinfo *getbuf, NC *ncp) {$/;"	f	signature:(bufferinfo *getbuf, NC *ncp)
ncmpii_hdr_check_NC	src/lib/nc.h	/^ncmpii_hdr_check_NC(bufferinfo *getbuf, NC *ncp);$/;"	p	signature:(bufferinfo *getbuf, NC *ncp)
ncmpii_hdr_get_NC	src/lib/header.c	/^ncmpii_hdr_get_NC(NC *ncp) {$/;"	f	signature:(NC *ncp)
ncmpii_hdr_get_NC	src/lib/nc.h	/^ncmpii_hdr_get_NC(NC *ncp);$/;"	p	signature:(NC *ncp)
ncmpii_hdr_len_NC	src/lib/header.c	/^ncmpii_hdr_len_NC(const NC *ncp, MPI_Offset sizeof_off_t)$/;"	f	signature:(const NC *ncp, MPI_Offset sizeof_off_t)
ncmpii_hdr_len_NC	src/lib/nc.h	/^ncmpii_hdr_len_NC(const NC *ncp, MPI_Offset sizeof_off_t);$/;"	p	signature:(const NC *ncp, MPI_Offset sizeof_off_t)
ncmpii_hdr_put_NC	src/lib/header.c	/^ncmpii_hdr_put_NC(NC *ncp, void *buf) {$/;"	f	signature:(NC *ncp, void *buf)
ncmpii_hdr_put_NC	src/lib/nc.h	/^ncmpii_hdr_put_NC(NC *ncp, void *buf);$/;"	p	signature:(NC *ncp, void *buf)
ncmpii_igetput_varm	src/lib/i_getput_varm.c	/^ncmpii_igetput_varm(NC               *ncp,$/;"	f	signature:(NC *ncp, NC_var *varp, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], const MPI_Offset imap[], void *buf, MPI_Offset bufcount, MPI_Datatype datatype, int *reqid, int rw_flag)
ncmpii_igetput_varm	src/lib/nc.h	/^ncmpii_igetput_varm(NC *ncp, NC_var *varp, const MPI_Offset *start,$/;"	p	signature:(NC *ncp, NC_var *varp, const MPI_Offset *start, const MPI_Offset *stride, const MPI_Offset *imap, const MPI_Offset *count, void *buf, MPI_Offset bufcount, MPI_Datatype datatype, int *reqid, int rw_flag)
ncmpii_in_swapn	src/lib/convert_swap.c	/^ncmpii_in_swapn(void       *buf,$/;"	f	signature:(void *buf, MPI_Offset nelems, int esize)
ncmpii_in_swapn	src/lib/nc.h	/^void ncmpii_in_swapn(void *buf, MPI_Offset nelems, int esize);$/;"	p	signature:(void *buf, MPI_Offset nelems, int esize)
ncmpii_is_request_contiguous	src/lib/filetype.c	/^ncmpii_is_request_contiguous(NC_var           *varp,$/;"	f	signature:(NC_var *varp, const MPI_Offset starts[], const MPI_Offset counts[])
ncmpii_is_request_contiguous	src/lib/nc.h	/^int ncmpii_is_request_contiguous(NC_var *varp, const MPI_Offset starts[],$/;"	p	signature:(NC_var *varp, const MPI_Offset starts[], const MPI_Offset counts[])
ncmpii_mgetput	src/lib/nonblocking.c	/^ncmpii_mgetput(NC           *ncp,$/;"	f	file:	signature:(NC *ncp, int num_reqs, NC_var *varps[], MPI_Offset *starts[], MPI_Offset *counts[], MPI_Offset *strides[], void *bufs[], MPI_Offset nbytes[], int statuses[], int rw_flag, int io_method)
ncmpii_mgetput	src/lib/nonblocking.c	/^static int ncmpii_mgetput(NC *ncp, int num_reqs, NC_var *varps[],$/;"	p	file:	signature:(NC *ncp, int num_reqs, NC_var *varps[], MPI_Offset *starts[], MPI_Offset *counts[], MPI_Offset *strides[], void *bufs[], MPI_Offset nbytes[], int statuses[], int rw_flag, int io_method)
ncmpii_mgetput_varm	src/lib/m_getput_varx.c	/^ncmpii_mgetput_varm(int                ncid, $/;"	f	file:	signature:(int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], MPI_Offset* const imaps[], void *bufs[], MPI_Offset bufcounts[], MPI_Datatype datatypes[], int rw_flag, int io_method)
ncmpii_mgetput_varm	src/lib/m_getput_varx.c	/^ncmpii_mgetput_varm(int                ncid, $/;"	p	file:	signature:(int ncid, int num, int varids[], MPI_Offset* const starts[], MPI_Offset* const counts[], MPI_Offset* const strides[], MPI_Offset* const imaps[], void *bufs[], MPI_Offset bufcounts[], MPI_Datatype datatypes[], int rw_flag, int io_method)
ncmpii_mset_fileview	src/lib/nonblocking.c	/^ncmpii_mset_fileview(MPI_File    fh,$/;"	f	file:	signature:(MPI_File fh, NC *ncp, int ntimes, NC_var *varp[], MPI_Offset *starts[], MPI_Offset *counts[], MPI_Offset *strides[], int statuses[], int rw_flag)
ncmpii_mset_fileview	src/lib/nonblocking.c	/^static int ncmpii_mset_fileview(MPI_File fh, NC* ncp, int ntimes, NC_var **varp,$/;"	p	file:	signature:(MPI_File fh, NC* ncp, int ntimes, NC_var **varp, MPI_Offset *starts[], MPI_Offset *counts[], MPI_Offset *strides[], int statuses[], int rw_flag)
ncmpii_need_convert	src/lib/convert_swap.c	/^ncmpii_need_convert(nc_type nctype,MPI_Datatype mpitype) {$/;"	f	signature:(nc_type nctype,MPI_Datatype mpitype)
ncmpii_need_convert	src/lib/nc.h	/^int ncmpii_need_convert(nc_type nctype,MPI_Datatype mpitype);$/;"	p	signature:(nc_type nctype,MPI_Datatype mpitype)
ncmpii_need_swap	src/lib/convert_swap.c	/^ncmpii_need_swap(nc_type      nctype,$/;"	f	signature:(nc_type nctype, MPI_Datatype mpitype)
ncmpii_need_swap	src/lib/nc.h	/^int ncmpii_need_swap(nc_type nctype,MPI_Datatype mpitype);$/;"	p	signature:(nc_type nctype,MPI_Datatype mpitype)
ncmpii_new_NC	src/lib/nc.c	/^ncmpii_new_NC(const MPI_Offset *chunkp)$/;"	f	signature:(const MPI_Offset *chunkp)
ncmpii_new_NC	src/lib/nc.h	/^ncmpii_new_NC(const MPI_Offset *chunkp);$/;"	p	signature:(const MPI_Offset *chunkp)
ncmpii_new_NC_attr	src/lib/attr.c	/^ncmpii_new_NC_attr($/;"	f	file:	signature:( const char *name, nc_type type, MPI_Offset nelems)
ncmpii_new_NC_dim	src/lib/dim.c	/^ncmpii_new_NC_dim(const char *name, MPI_Offset size)$/;"	f	file:	signature:(const char *name, MPI_Offset size)
ncmpii_new_NC_string	src/lib/nc.h	/^ncmpii_new_NC_string(MPI_Offset slen, const char *str);$/;"	p	signature:(MPI_Offset slen, const char *str)
ncmpii_new_NC_string	src/lib/string.c	/^ncmpii_new_NC_string(MPI_Offset slen, const char *str)$/;"	f	signature:(MPI_Offset slen, const char *str)
ncmpii_new_NC_var	src/lib/var.c	/^ncmpii_new_NC_var(const char *name, nc_type type,$/;"	f	file:	signature:(const char *name, nc_type type, size_t ndims, const int *dimids)
ncmpii_new_x_NC_attr	src/lib/attr.c	/^ncmpii_new_x_NC_attr($/;"	f	signature:( NC_string *strp, nc_type type, MPI_Offset nelems)
ncmpii_new_x_NC_attr	src/lib/nc.h	/^ncmpii_new_x_NC_attr($/;"	p	signature:( NC_string *strp, nc_type type, MPI_Offset nelems)
ncmpii_new_x_NC_dim	src/lib/dim.c	/^ncmpii_new_x_NC_dim(NC_string *name)$/;"	f	signature:(NC_string *name)
ncmpii_new_x_NC_dim	src/lib/nc.h	/^ncmpii_new_x_NC_dim(NC_string *name);$/;"	p	signature:(NC_string *name)
ncmpii_new_x_NC_var	src/lib/nc.h	/^ncmpii_new_x_NC_var($/;"	p	signature:( NC_string *strp, size_t ndims )
ncmpii_new_x_NC_var	src/lib/var.c	/^ncmpii_new_x_NC_var($/;"	f	signature:( NC_string *strp, size_t ndims)
ncmpii_put_att	src/lib/attr.c	/^ncmpii_put_att($/;"	f	signature:( int ncid, int varid, const char *name, nc_type type, MPI_Offset nelems, const void *value)
ncmpii_put_att	src/lib/nc.h	/^ncmpii_put_att(int ncid, int varid, const char *name, nc_type datatype,$/;"	p	signature:(int ncid, int varid, const char *name, nc_type datatype, MPI_Offset len, const void *value)
ncmpii_read_NC	src/lib/nc.c	/^ncmpii_read_NC(NC *ncp) {$/;"	f	signature:(NC *ncp)
ncmpii_read_NC	src/lib/nc.h	/^ncmpii_read_NC(NC *ncp);$/;"	p	signature:(NC *ncp)
ncmpii_read_numrecs	src/lib/nc.c	/^ncmpii_read_numrecs(NC *ncp) {$/;"	f	signature:(NC *ncp)
ncmpii_read_numrecs	src/lib/nc.h	/^ncmpii_read_numrecs(NC *ncp);$/;"	p	signature:(NC *ncp)
ncmpii_set_NC_string	src/lib/nc.h	/^ncmpii_set_NC_string(NC_string *ncstrp, const char *str);$/;"	p	signature:(NC_string *ncstrp, const char *str)
ncmpii_set_NC_string	src/lib/string.c	/^ncmpii_set_NC_string(NC_string *ncstrp, const char *str)$/;"	f	signature:(NC_string *ncstrp, const char *str)
ncmpii_type_filter	src/lib/ncmpidtype.c	/^static MPI_Datatype ncmpii_type_filter(MPI_Datatype type)$/;"	f	file:	signature:(MPI_Datatype type)
ncmpii_update_numrecs	src/lib/mpinetcdf.c	/^ncmpii_update_numrecs(NC         *ncp,$/;"	f	signature:(NC *ncp, MPI_Offset newnumrecs)
ncmpii_update_numrecs	src/lib/nc.h	/^int ncmpii_update_numrecs(NC *ncp, MPI_Offset newnumrecs);$/;"	p	signature:(NC *ncp, MPI_Offset newnumrecs)
ncmpii_vara_create_filetype	src/lib/filetype.c	/^ncmpii_vara_create_filetype(NC               *ncp,$/;"	f	file:	signature:(NC *ncp, NC_var *varp, const MPI_Offset *start, const MPI_Offset *count, int rw_flag, MPI_Offset *offset_ptr, MPI_Datatype *filetype_ptr)
ncmpii_vara_create_filetype	src/lib/filetype.c	/^static int ncmpii_vara_create_filetype(NC* ncp, NC_var* varp,$/;"	p	file:	signature:(NC* ncp, NC_var* varp, const MPI_Offset start[], const MPI_Offset count[], int rw_flag, MPI_Offset *offset, MPI_Datatype *filetype)
ncmpii_vars_create_filetype	src/lib/filetype.c	/^ncmpii_vars_create_filetype(NC               *ncp,$/;"	f	signature:(NC *ncp, NC_var *varp, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], int rw_flag, MPI_Offset *offset_ptr, MPI_Datatype *filetype_ptr)
ncmpii_vars_create_filetype	src/lib/nc.h	/^int ncmpii_vars_create_filetype(NC* ncp, NC_var* varp,$/;"	p	signature:(NC* ncp, NC_var* varp, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], int rw_flag, MPI_Offset *offset, MPI_Datatype *filetype)
ncmpii_wait	src/lib/nc.h	/^ncmpii_wait(NC *ncp, int io_method, int num_reqs, int *req_ids,$/;"	p	signature:(NC *ncp, int io_method, int num_reqs, int *req_ids, int *statuses)
ncmpii_wait	src/lib/nonblocking.c	/^ncmpii_wait(NC  *ncp,$/;"	f	signature:(NC *ncp, int io_method, int num_reqs, int *req_ids, int *statuses)
ncmpii_wait_getput	src/lib/nonblocking.c	/^ncmpii_wait_getput(NC     *ncp,$/;"	f	file:	signature:(NC *ncp, int num_reqs, NC_req *req_head, int rw_flag, int io_method)
ncmpii_wait_getput	src/lib/nonblocking.c	/^static int ncmpii_wait_getput(NC *ncp, int num_reqs, NC_req *req_head,$/;"	p	file:	signature:(NC *ncp, int num_reqs, NC_req *req_head, int rw_flag, int io_method)
ncmpii_write_numrecs	src/lib/nc.c	/^ncmpii_write_numrecs(NC *ncp)$/;"	f	signature:(NC *ncp)
ncmpii_write_numrecs	src/lib/nc.h	/^ncmpii_write_numrecs(NC *ncp);$/;"	p	signature:(NC *ncp)
ncmpii_x_getn_double	src/lib/convert_swap.c	/^ncmpii_x_getn_double(const void   *xbuf,$/;"	f	signature:(const void *xbuf, void *buf, MPI_Offset nelems, MPI_Datatype datatype)
ncmpii_x_getn_double	src/lib/nc.h	/^int ncmpii_x_getn_double(const void *xbuf, void *buf, MPI_Offset nelems,$/;"	p	signature:(const void *xbuf, void *buf, MPI_Offset nelems, MPI_Datatype datatype)
ncmpii_x_getn_float	src/lib/convert_swap.c	/^ncmpii_x_getn_float(const void   *xbuf,$/;"	f	signature:(const void *xbuf, void *buf, MPI_Offset nelems, MPI_Datatype datatype)
ncmpii_x_getn_float	src/lib/nc.h	/^int ncmpii_x_getn_float(const void *xbuf, void *buf, MPI_Offset nelems,$/;"	p	signature:(const void *xbuf, void *buf, MPI_Offset nelems, MPI_Datatype datatype)
ncmpii_x_getn_int	src/lib/convert_swap.c	/^ncmpii_x_getn_int(const void   *xbuf,$/;"	f	signature:(const void *xbuf, void *buf, MPI_Offset nelems, MPI_Datatype datatype)
ncmpii_x_getn_int	src/lib/nc.h	/^int ncmpii_x_getn_int(const void *xbuf, void *buf, MPI_Offset nelems,$/;"	p	signature:(const void *xbuf, void *buf, MPI_Offset nelems, MPI_Datatype datatype)
ncmpii_x_getn_schar	src/lib/convert_swap.c	/^ncmpii_x_getn_schar(const void   *xbuf,$/;"	f	signature:(const void *xbuf, void *buf, MPI_Offset nelems, MPI_Datatype datatype)
ncmpii_x_getn_schar	src/lib/nc.h	/^int ncmpii_x_getn_schar(const void *xbuf, void *buf, MPI_Offset nelems,$/;"	p	signature:(const void *xbuf, void *buf, MPI_Offset nelems, MPI_Datatype datatype)
ncmpii_x_getn_short	src/lib/convert_swap.c	/^ncmpii_x_getn_short(const void   *xbuf,$/;"	f	signature:(const void *xbuf, void *buf, MPI_Offset nelems, MPI_Datatype datatype)
ncmpii_x_getn_short	src/lib/nc.h	/^int ncmpii_x_getn_short(const void *xbuf, void *buf, MPI_Offset nelems,$/;"	p	signature:(const void *xbuf, void *buf, MPI_Offset nelems, MPI_Datatype datatype)
ncmpii_x_putn_double	src/lib/convert_swap.c	/^ncmpii_x_putn_double(void         *xbuf,$/;"	f	signature:(void *xbuf, const void *buf, MPI_Offset nelems, MPI_Datatype datatype)
ncmpii_x_putn_double	src/lib/nc.h	/^int ncmpii_x_putn_double(void *xbuf, const void *buf, MPI_Offset nelems,$/;"	p	signature:(void *xbuf, const void *buf, MPI_Offset nelems, MPI_Datatype datatype)
ncmpii_x_putn_float	src/lib/convert_swap.c	/^ncmpii_x_putn_float(void         *xbuf,$/;"	f	signature:(void *xbuf, const void *buf, MPI_Offset nelems, MPI_Datatype datatype)
ncmpii_x_putn_float	src/lib/nc.h	/^int ncmpii_x_putn_float(void *xbuf, const void *buf, MPI_Offset nelems,$/;"	p	signature:(void *xbuf, const void *buf, MPI_Offset nelems, MPI_Datatype datatype)
ncmpii_x_putn_int	src/lib/convert_swap.c	/^ncmpii_x_putn_int(void         *xbuf,$/;"	f	signature:(void *xbuf, const void *buf, MPI_Offset nelems, MPI_Datatype datatype)
ncmpii_x_putn_int	src/lib/nc.h	/^int ncmpii_x_putn_int(void *xbuf, const void *buf, MPI_Offset nelems,$/;"	p	signature:(void *xbuf, const void *buf, MPI_Offset nelems, MPI_Datatype datatype)
ncmpii_x_putn_schar	src/lib/convert_swap.c	/^ncmpii_x_putn_schar(void         *xbuf,$/;"	f	signature:(void *xbuf, const void *buf, MPI_Offset nelems, MPI_Datatype datatype)
ncmpii_x_putn_schar	src/lib/nc.h	/^int ncmpii_x_putn_schar(void *xbuf, const void *buf, MPI_Offset nelems,$/;"	p	signature:(void *xbuf, const void *buf, MPI_Offset nelems, MPI_Datatype datatype)
ncmpii_x_putn_short	src/lib/convert_swap.c	/^ncmpii_x_putn_short(void         *xbuf,$/;"	f	signature:(void *xbuf, const void *buf, MPI_Offset nelems, MPI_Datatype datatype)
ncmpii_x_putn_short	src/lib/nc.h	/^int ncmpii_x_putn_short(void *xbuf, const void *buf, MPI_Offset nelems,$/;"	p	signature:(void *xbuf, const void *buf, MPI_Offset nelems, MPI_Datatype datatype)
ncmpiin	src/utils/ncgen/main.c	/^extern FILE *ncmpiin;$/;"	x
ncmpiin	src/utils/ncgen/ncgenyy.c	/^FILE *ncmpiin = (FILE *) 0, *ncmpiout = (FILE *) 0;$/;"	v
ncmpiin	src/utils/ncgen/ncgenyy.c	/^extern FILE *ncmpiin, *ncmpiout;$/;"	x
ncmpiio_close	src/lib/mpincio.c	/^ncmpiio_close(ncio *nciop, int doUnlink) {$/;"	f	signature:(ncio *nciop, int doUnlink)
ncmpiio_close	src/lib/ncio.h	/^ncmpiio_close(ncio *nciop, int doUnlink);$/;"	p	signature:(ncio *nciop, int doUnlink)
ncmpiio_create	src/lib/mpincio.c	/^ncmpiio_create(MPI_Comm     comm,$/;"	f	signature:(MPI_Comm comm, const char *path, int ioflags, MPI_Info info, ncio **nciopp)
ncmpiio_create	src/lib/nc.h	/^ncmpiio_create(MPI_Comm comm, const char *path, int ioflags, MPI_Info info,$/;"	p	signature:(MPI_Comm comm, const char *path, int ioflags, MPI_Info info, ncio **nciopp)
ncmpiio_free	src/lib/mpincio.c	/^ncmpiio_free(ncio *nciop) {$/;"	f	signature:(ncio *nciop)
ncmpiio_free	src/lib/ncio.h	/^ncmpiio_free(ncio *nciop);$/;"	p	signature:(ncio *nciop)
ncmpiio_freefunc	src/lib/ncio.h	/^typedef void ncmpiio_freefunc(void *const pvt);$/;"	t
ncmpiio_get_hint	src/lib/mpincio.c	/^int ncmpiio_get_hint(NC *ncp, char *key, char *value, int *flag)$/;"	f	signature:(NC *ncp, char *key, char *value, int *flag)
ncmpiio_get_hint	src/lib/nc.h	/^ncmpiio_get_hint(NC *ncp, char *key, char *value, int *flag);$/;"	p	signature:(NC *ncp, char *key, char *value, int *flag)
ncmpiio_getfunc	src/lib/ncio.h	/^typedef int ncmpiio_getfunc(ncio *const nciop,$/;"	t
ncmpiio_move	src/lib/mpincio.c	/^ncmpiio_move(ncio *const nciop,$/;"	f	signature:(ncio *const nciop, MPI_Offset to, MPI_Offset from, MPI_Offset nbytes)
ncmpiio_move	src/lib/nc.h	/^ncmpiio_move(ncio *const nciop, MPI_Offset to, MPI_Offset from,$/;"	p	signature:(ncio *const nciop, MPI_Offset to, MPI_Offset from, MPI_Offset nbytes)
ncmpiio_movefunc	src/lib/ncio.h	/^typedef int ncmpiio_movefunc(ncio *const nciop, MPI_Offset to, MPI_Offset from,$/;"	t
ncmpiio_new	src/lib/mpincio.c	/^ncmpiio_new(const char *path, int ioflags)$/;"	f	signature:(const char *path, int ioflags)
ncmpiio_new	src/lib/ncio.h	/^ncmpiio_new(const char *path, int ioflags);$/;"	p	signature:(const char *path, int ioflags)
ncmpiio_open	src/lib/mpincio.c	/^ncmpiio_open(MPI_Comm     comm,$/;"	f	signature:(MPI_Comm comm, const char *path, int ioflags, MPI_Info info, ncio **nciopp)
ncmpiio_open	src/lib/nc.h	/^ncmpiio_open(MPI_Comm comm, const char *path, int ioflags, MPI_Info info,$/;"	p	signature:(MPI_Comm comm, const char *path, int ioflags, MPI_Info info, ncio **nciopp)
ncmpiio_relfunc	src/lib/ncio.h	/^typedef int ncmpiio_relfunc(ncio *const nciop,$/;"	t
ncmpiio_sync	src/lib/mpincio.c	/^ncmpiio_sync(ncio *nciop) {$/;"	f	signature:(ncio *nciop)
ncmpiio_sync	src/lib/nc.h	/^ncmpiio_sync(ncio *nciop);$/;"	p	signature:(ncio *nciop)
ncmpiio_syncfunc	src/lib/ncio.h	/^typedef int ncmpiio_syncfunc(ncio *const nciop);$/;"	t
ncmpileng	src/utils/ncgen/ncgenyy.c	/^extern int ncmpileng;$/;"	x
ncmpileng	src/utils/ncgen/ncgenyy.c	/^int ncmpileng;$/;"	v
ncmpilex	src/utils/ncgen/ncgenyy.c	/^extern int ncmpilex (void);$/;"	p	file:	signature:(void)
ncmpilex_destroy	src/utils/ncgen/ncgenyy.c	/^int ncmpilex_destroy  (void)$/;"	f	signature:(void)
ncmpilex_destroy	src/utils/ncgen/ncgenyy.c	/^int ncmpilex_destroy (void );$/;"	p	file:	signature:(void )
ncmpilineno	src/utils/ncgen/ncgenyy.c	/^extern int ncmpilineno;$/;"	x
ncmpilineno	src/utils/ncgen/ncgenyy.c	/^int ncmpilineno = 1;$/;"	v
ncmpilval	src/utils/ncgen/ncgentab.h	/^extern YYSTYPE ncmpilval;$/;"	x
ncmpiout	src/utils/ncgen/ncgenyy.c	/^FILE *ncmpiin = (FILE *) 0, *ncmpiout = (FILE *) 0;$/;"	v
ncmpiout	src/utils/ncgen/ncgenyy.c	/^extern FILE *ncmpiin, *ncmpiout;$/;"	x
ncmpiparse	src/utils/ncgen/main.c	/^extern int	ncmpiparse(void);$/;"	p	file:	signature:(void)
ncmpipop_buffer_state	src/utils/ncgen/ncgenyy.c	/^void ncmpipop_buffer_state (void );$/;"	p	file:	signature:(void )
ncmpipop_buffer_state	src/utils/ncgen/ncgenyy.c	/^void ncmpipop_buffer_state (void)$/;"	f	signature:(void)
ncmpipush_buffer_state	src/utils/ncgen/ncgenyy.c	/^void ncmpipush_buffer_state (YY_BUFFER_STATE new_buffer  );$/;"	p	file:	signature:(YY_BUFFER_STATE new_buffer )
ncmpipush_buffer_state	src/utils/ncgen/ncgenyy.c	/^void ncmpipush_buffer_state (YY_BUFFER_STATE new_buffer )$/;"	f	signature:(YY_BUFFER_STATE new_buffer )
ncmpirealloc	src/utils/ncgen/ncgenyy.c	/^void *ncmpirealloc  (void * ptr, yy_size_t  size )$/;"	f	signature:(void * ptr, yy_size_t size )
ncmpirealloc	src/utils/ncgen/ncgenyy.c	/^void *ncmpirealloc (void *,yy_size_t  );$/;"	p	file:	signature:(void *,yy_size_t )
ncmpirestart	src/utils/ncgen/ncgenyy.c	/^    void ncmpirestart  (FILE * input_file )$/;"	f	signature:(FILE * input_file )
ncmpirestart	src/utils/ncgen/ncgenyy.c	/^void ncmpirestart (FILE *input_file  );$/;"	p	file:	signature:(FILE *input_file )
ncmpiset_debug	src/utils/ncgen/ncgenyy.c	/^void ncmpiset_debug (int  bdebug )$/;"	f	signature:(int bdebug )
ncmpiset_debug	src/utils/ncgen/ncgenyy.c	/^void ncmpiset_debug (int debug_flag  );$/;"	p	file:	signature:(int debug_flag )
ncmpiset_extra	src/utils/ncgen/ncgenyy.c	/^void ncmpiset_extra (YY_EXTRA_TYPE user_defined  );$/;"	p	file:	signature:(YY_EXTRA_TYPE user_defined )
ncmpiset_in	src/utils/ncgen/ncgenyy.c	/^void ncmpiset_in  (FILE * in_str  );$/;"	p	file:	signature:(FILE * in_str )
ncmpiset_in	src/utils/ncgen/ncgenyy.c	/^void ncmpiset_in (FILE *  in_str )$/;"	f	signature:(FILE * in_str )
ncmpiset_lineno	src/utils/ncgen/ncgenyy.c	/^void ncmpiset_lineno (int  line_number )$/;"	f	signature:(int line_number )
ncmpiset_lineno	src/utils/ncgen/ncgenyy.c	/^void ncmpiset_lineno (int line_number  );$/;"	p	file:	signature:(int line_number )
ncmpiset_out	src/utils/ncgen/ncgenyy.c	/^void ncmpiset_out  (FILE * out_str  );$/;"	p	file:	signature:(FILE * out_str )
ncmpiset_out	src/utils/ncgen/ncgenyy.c	/^void ncmpiset_out (FILE *  out_str )$/;"	f	signature:(FILE * out_str )
ncmpitext	src/utils/ncgen/ncgenyy.c	/^char *ncmpitext;$/;"	v
ncmpitext	src/utils/ncgen/ncgenyy.c	/^extern char *ncmpitext;$/;"	x
ncmpiwrap	src/utils/ncgen/ncgentab.c	/^ncmpiwrap(void)			\/* returns 1 on EOF if no more input *\/$/;"	f	signature:(void)
ncmpiwrap	src/utils/ncgen/ncgentab.c	2593;"	d	file:
ncmpiwrap	src/utils/ncgen/ncgenyy.c	/^extern "C" int ncmpiwrap (void );$/;"	p	file:	signature:(void )
ncmpiwrap	src/utils/ncgen/ncgenyy.c	/^extern int ncmpiwrap (void );$/;"	p	file:	signature:(void )
ncmpixVardim	src/libf/mpinetcdf_impl.h	/^int ncmpixVardim( int, int );$/;"	p	signature:( int, int )
ncmpixVardim	src/libf/nfxutil.c	/^int ncmpixVardim( int ncid, int varid ) $/;"	f	signature:( int ncid, int varid )
ncmpix_get_double_double	src/lib/ncx.c	/^ncmpix_get_double_double(const void *xp, double *ip)$/;"	f	signature:(const void *xp, double *ip)
ncmpix_get_double_double	src/lib/ncx.h	/^ncmpix_get_double_double(const void *xp, double *ip);$/;"	p	signature:(const void *xp, double *ip)
ncmpix_get_double_float	src/lib/ncx.c	/^ncmpix_get_double_float(const void *xp, float *ip)$/;"	f	signature:(const void *xp, float *ip)
ncmpix_get_double_float	src/lib/ncx.h	/^ncmpix_get_double_float(const void *xp, float *ip);$/;"	p	signature:(const void *xp, float *ip)
ncmpix_get_double_int	src/lib/ncx.c	/^ncmpix_get_double_int(const void *xp, int *ip)$/;"	f	signature:(const void *xp, int *ip)
ncmpix_get_double_int	src/lib/ncx.h	/^ncmpix_get_double_int(const void *xp, int *ip);$/;"	p	signature:(const void *xp, int *ip)
ncmpix_get_double_long	src/lib/ncx.c	/^ncmpix_get_double_long(const void *xp, long *ip)$/;"	f	signature:(const void *xp, long *ip)
ncmpix_get_double_long	src/lib/ncx.h	/^ncmpix_get_double_long(const void *xp, long *ip);$/;"	p	signature:(const void *xp, long *ip)
ncmpix_get_double_schar	src/lib/ncx.c	/^ncmpix_get_double_schar(const void *xp, schar *ip)$/;"	f	signature:(const void *xp, schar *ip)
ncmpix_get_double_schar	src/lib/ncx.h	/^ncmpix_get_double_schar(const void *xp, schar *ip);$/;"	p	signature:(const void *xp, schar *ip)
ncmpix_get_double_short	src/lib/ncx.c	/^ncmpix_get_double_short(const void *xp, short *ip)$/;"	f	signature:(const void *xp, short *ip)
ncmpix_get_double_short	src/lib/ncx.h	/^ncmpix_get_double_short(const void *xp, short *ip);$/;"	p	signature:(const void *xp, short *ip)
ncmpix_get_double_uchar	src/lib/ncx.c	/^ncmpix_get_double_uchar(const void *xp, uchar *ip)$/;"	f	signature:(const void *xp, uchar *ip)
ncmpix_get_double_uchar	src/lib/ncx.h	/^ncmpix_get_double_uchar(const void *xp, uchar *ip);$/;"	p	signature:(const void *xp, uchar *ip)
ncmpix_get_float_double	src/lib/ncx.c	/^ncmpix_get_float_double(const void *xp, double *ip)$/;"	f	signature:(const void *xp, double *ip)
ncmpix_get_float_double	src/lib/ncx.h	/^ncmpix_get_float_double(const void *xp, double *ip);$/;"	p	signature:(const void *xp, double *ip)
ncmpix_get_float_float	src/lib/ncx.c	/^ncmpix_get_float_float(const void *xp, float *ip)$/;"	f	signature:(const void *xp, float *ip)
ncmpix_get_float_float	src/lib/ncx.h	/^ncmpix_get_float_float(const void *xp, float *ip);$/;"	p	signature:(const void *xp, float *ip)
ncmpix_get_float_int	src/lib/ncx.c	/^ncmpix_get_float_int(const void *xp, int *ip)$/;"	f	signature:(const void *xp, int *ip)
ncmpix_get_float_int	src/lib/ncx.h	/^ncmpix_get_float_int(const void *xp, int *ip);$/;"	p	signature:(const void *xp, int *ip)
ncmpix_get_float_long	src/lib/ncx.c	/^ncmpix_get_float_long(const void *xp, long *ip)$/;"	f	signature:(const void *xp, long *ip)
ncmpix_get_float_long	src/lib/ncx.h	/^ncmpix_get_float_long(const void *xp, long *ip);$/;"	p	signature:(const void *xp, long *ip)
ncmpix_get_float_schar	src/lib/ncx.c	/^ncmpix_get_float_schar(const void *xp, schar *ip)$/;"	f	signature:(const void *xp, schar *ip)
ncmpix_get_float_schar	src/lib/ncx.h	/^ncmpix_get_float_schar(const void *xp, schar *ip);$/;"	p	signature:(const void *xp, schar *ip)
ncmpix_get_float_short	src/lib/ncx.c	/^ncmpix_get_float_short(const void *xp, short *ip)$/;"	f	signature:(const void *xp, short *ip)
ncmpix_get_float_short	src/lib/ncx.h	/^ncmpix_get_float_short(const void *xp, short *ip);$/;"	p	signature:(const void *xp, short *ip)
ncmpix_get_float_uchar	src/lib/ncx.c	/^ncmpix_get_float_uchar(const void *xp, uchar *ip)$/;"	f	signature:(const void *xp, uchar *ip)
ncmpix_get_float_uchar	src/lib/ncx.h	/^ncmpix_get_float_uchar(const void *xp, uchar *ip);$/;"	p	signature:(const void *xp, uchar *ip)
ncmpix_get_int_double	src/lib/ncx.c	/^ncmpix_get_int_double(const void *xp, double *ip)$/;"	f	signature:(const void *xp, double *ip)
ncmpix_get_int_double	src/lib/ncx.h	/^ncmpix_get_int_double(const void *xp, double *ip);$/;"	p	signature:(const void *xp, double *ip)
ncmpix_get_int_float	src/lib/ncx.c	/^ncmpix_get_int_float(const void *xp, float *ip)$/;"	f	signature:(const void *xp, float *ip)
ncmpix_get_int_float	src/lib/ncx.h	/^ncmpix_get_int_float(const void *xp, float *ip);$/;"	p	signature:(const void *xp, float *ip)
ncmpix_get_int_int	src/lib/ncx.c	/^ncmpix_get_int_int(const void *xp, int *ip)$/;"	f	signature:(const void *xp, int *ip)
ncmpix_get_int_int	src/lib/ncx.h	/^ncmpix_get_int_int(const void *xp, int *ip);$/;"	p	signature:(const void *xp, int *ip)
ncmpix_get_int_long	src/lib/ncx.c	/^ncmpix_get_int_long(const void *xp, long *ip)$/;"	f	signature:(const void *xp, long *ip)
ncmpix_get_int_long	src/lib/ncx.h	/^ncmpix_get_int_long(const void *xp, long *ip);$/;"	p	signature:(const void *xp, long *ip)
ncmpix_get_int_schar	src/lib/ncx.c	/^ncmpix_get_int_schar(const void *xp, schar *ip)$/;"	f	signature:(const void *xp, schar *ip)
ncmpix_get_int_schar	src/lib/ncx.h	/^ncmpix_get_int_schar(const void *xp, schar *ip);$/;"	p	signature:(const void *xp, schar *ip)
ncmpix_get_int_short	src/lib/ncx.c	/^ncmpix_get_int_short(const void *xp, short *ip)$/;"	f	signature:(const void *xp, short *ip)
ncmpix_get_int_short	src/lib/ncx.h	/^ncmpix_get_int_short(const void *xp, short *ip);$/;"	p	signature:(const void *xp, short *ip)
ncmpix_get_int_uchar	src/lib/ncx.c	/^ncmpix_get_int_uchar(const void *xp, uchar *ip)$/;"	f	signature:(const void *xp, uchar *ip)
ncmpix_get_int_uchar	src/lib/ncx.h	/^ncmpix_get_int_uchar(const void *xp, uchar *ip);$/;"	p	signature:(const void *xp, uchar *ip)
ncmpix_get_long_long	src/lib/ncx.c	/^ncmpix_get_long_long(const void *xp,MPI_Offset *ip)$/;"	f	signature:(const void *xp,MPI_Offset *ip)
ncmpix_get_long_long	src/lib/ncx.h	/^ncmpix_get_long_long(const void *xp,MPI_Offset *ip);$/;"	p	signature:(const void *xp,MPI_Offset *ip)
ncmpix_get_off_t	src/lib/ncx.c	/^ncmpix_get_off_t(const void **xpp, MPI_Offset *lp, MPI_Offset sizeof_off_t)$/;"	f	signature:(const void **xpp, MPI_Offset *lp, MPI_Offset sizeof_off_t)
ncmpix_get_off_t	src/lib/ncx.h	/^ncmpix_get_off_t(const void **xpp, MPI_Offset *lp, MPI_Offset sizeof_off_t);$/;"	p	signature:(const void **xpp, MPI_Offset *lp, MPI_Offset sizeof_off_t)
ncmpix_get_short_double	src/lib/ncx.c	/^ncmpix_get_short_double(const void *xp, double *ip)$/;"	f	signature:(const void *xp, double *ip)
ncmpix_get_short_double	src/lib/ncx.h	/^ncmpix_get_short_double(const void *xp, double *ip);$/;"	p	signature:(const void *xp, double *ip)
ncmpix_get_short_float	src/lib/ncx.c	/^ncmpix_get_short_float(const void *xp, float *ip)$/;"	f	signature:(const void *xp, float *ip)
ncmpix_get_short_float	src/lib/ncx.h	/^ncmpix_get_short_float(const void *xp, float *ip);$/;"	p	signature:(const void *xp, float *ip)
ncmpix_get_short_int	src/lib/ncx.c	/^ncmpix_get_short_int(const void *xp, int *ip)$/;"	f	signature:(const void *xp, int *ip)
ncmpix_get_short_int	src/lib/ncx.h	/^ncmpix_get_short_int(const void *xp, int *ip);$/;"	p	signature:(const void *xp, int *ip)
ncmpix_get_short_long	src/lib/ncx.c	/^ncmpix_get_short_long(const void *xp, long *ip)$/;"	f	signature:(const void *xp, long *ip)
ncmpix_get_short_long	src/lib/ncx.h	/^ncmpix_get_short_long(const void *xp, long *ip);$/;"	p	signature:(const void *xp, long *ip)
ncmpix_get_short_schar	src/lib/ncx.c	/^ncmpix_get_short_schar(const void *xp, schar *ip)$/;"	f	signature:(const void *xp, schar *ip)
ncmpix_get_short_schar	src/lib/ncx.h	/^ncmpix_get_short_schar(const void *xp, schar *ip);$/;"	p	signature:(const void *xp, schar *ip)
ncmpix_get_short_short	src/lib/ncx.c	/^ncmpix_get_short_short(const void *xp, short *ip)$/;"	f	signature:(const void *xp, short *ip)
ncmpix_get_short_short	src/lib/ncx.h	/^ncmpix_get_short_short(const void *xp, short *ip);$/;"	p	signature:(const void *xp, short *ip)
ncmpix_get_short_uchar	src/lib/ncx.c	/^ncmpix_get_short_uchar(const void *xp, uchar *ip)$/;"	f	signature:(const void *xp, uchar *ip)
ncmpix_get_short_uchar	src/lib/ncx.h	/^ncmpix_get_short_uchar(const void *xp, uchar *ip);$/;"	p	signature:(const void *xp, uchar *ip)
ncmpix_get_size_t	src/lib/ncx.c	/^ncmpix_get_size_t(const void **xpp,  MPI_Offset *lp, MPI_Offset sizeof_off_t)$/;"	f	signature:(const void **xpp, MPI_Offset *lp, MPI_Offset sizeof_off_t)
ncmpix_get_size_t	src/lib/ncx.h	/^ncmpix_get_size_t(const void **xpp, MPI_Offset *ulp, MPI_Offset sizeof_off_t);$/;"	p	signature:(const void **xpp, MPI_Offset *ulp, MPI_Offset sizeof_off_t)
ncmpix_getn_char_char	src/lib/ncx.h	641;"	d
ncmpix_getn_double_double	src/lib/ncx.c	/^ncmpix_getn_double_double(const void **xpp, MPI_Offset ndoubles, double *ip)$/;"	f	signature:(const void **xpp, MPI_Offset ndoubles, double *ip)
ncmpix_getn_double_double	src/lib/ncx.c	/^ncmpix_getn_double_double(const void **xpp, MPI_Offset nelems, double *tp)$/;"	f	signature:(const void **xpp, MPI_Offset nelems, double *tp)
ncmpix_getn_double_double	src/lib/ncx.h	/^ncmpix_getn_double_double(const void **xpp, MPI_Offset nelems, double *ip);$/;"	p	signature:(const void **xpp, MPI_Offset nelems, double *ip)
ncmpix_getn_double_float	src/lib/ncx.c	/^ncmpix_getn_double_float(const void **xpp, MPI_Offset nelems, float *tp)$/;"	f	signature:(const void **xpp, MPI_Offset nelems, float *tp)
ncmpix_getn_double_float	src/lib/ncx.h	/^ncmpix_getn_double_float(const void **xpp, MPI_Offset nelems, float *ip);$/;"	p	signature:(const void **xpp, MPI_Offset nelems, float *ip)
ncmpix_getn_double_int	src/lib/ncx.c	/^ncmpix_getn_double_int(const void **xpp, MPI_Offset nelems, int *tp)$/;"	f	signature:(const void **xpp, MPI_Offset nelems, int *tp)
ncmpix_getn_double_int	src/lib/ncx.h	/^ncmpix_getn_double_int(const void **xpp, MPI_Offset nelems, int *ip);$/;"	p	signature:(const void **xpp, MPI_Offset nelems, int *ip)
ncmpix_getn_double_long	src/lib/ncx.c	/^ncmpix_getn_double_long(const void **xpp, MPI_Offset nelems, long *tp)$/;"	f	signature:(const void **xpp, MPI_Offset nelems, long *tp)
ncmpix_getn_double_long	src/lib/ncx.h	/^ncmpix_getn_double_long(const void **xpp, MPI_Offset nelems, long *ip);$/;"	p	signature:(const void **xpp, MPI_Offset nelems, long *ip)
ncmpix_getn_double_schar	src/lib/ncx.c	/^ncmpix_getn_double_schar(const void **xpp, MPI_Offset nelems, schar *tp)$/;"	f	signature:(const void **xpp, MPI_Offset nelems, schar *tp)
ncmpix_getn_double_schar	src/lib/ncx.h	/^ncmpix_getn_double_schar(const void **xpp, MPI_Offset nelems, schar *ip);$/;"	p	signature:(const void **xpp, MPI_Offset nelems, schar *ip)
ncmpix_getn_double_short	src/lib/ncx.c	/^ncmpix_getn_double_short(const void **xpp, MPI_Offset nelems, short *tp)$/;"	f	signature:(const void **xpp, MPI_Offset nelems, short *tp)
ncmpix_getn_double_short	src/lib/ncx.h	/^ncmpix_getn_double_short(const void **xpp, MPI_Offset nelems, short *ip);$/;"	p	signature:(const void **xpp, MPI_Offset nelems, short *ip)
ncmpix_getn_double_uchar	src/lib/ncx.c	/^ncmpix_getn_double_uchar(const void **xpp, MPI_Offset nelems, uchar *tp)$/;"	f	signature:(const void **xpp, MPI_Offset nelems, uchar *tp)
ncmpix_getn_double_uchar	src/lib/ncx.h	/^ncmpix_getn_double_uchar(const void **xpp, MPI_Offset nelems, uchar *ip);$/;"	p	signature:(const void **xpp, MPI_Offset nelems, uchar *ip)
ncmpix_getn_float_double	src/lib/ncx.c	/^ncmpix_getn_float_double(const void **xpp, MPI_Offset nelems, double *tp)$/;"	f	signature:(const void **xpp, MPI_Offset nelems, double *tp)
ncmpix_getn_float_double	src/lib/ncx.h	/^ncmpix_getn_float_double(const void **xpp, MPI_Offset nelems, double *ip);$/;"	p	signature:(const void **xpp, MPI_Offset nelems, double *ip)
ncmpix_getn_float_float	src/lib/ncx.c	/^ncmpix_getn_float_float(const void **xpp, MPI_Offset nelems, float *tp)$/;"	f	signature:(const void **xpp, MPI_Offset nelems, float *tp)
ncmpix_getn_float_float	src/lib/ncx.c	/^ncmpix_getn_float_float(const void **xpp, MPI_Offset nfloats, float *ip)$/;"	f	signature:(const void **xpp, MPI_Offset nfloats, float *ip)
ncmpix_getn_float_float	src/lib/ncx.h	/^ncmpix_getn_float_float(const void **xpp, MPI_Offset nelems, float *ip);$/;"	p	signature:(const void **xpp, MPI_Offset nelems, float *ip)
ncmpix_getn_float_int	src/lib/ncx.c	/^ncmpix_getn_float_int(const void **xpp, MPI_Offset nelems, int *tp)$/;"	f	signature:(const void **xpp, MPI_Offset nelems, int *tp)
ncmpix_getn_float_int	src/lib/ncx.h	/^ncmpix_getn_float_int(const void **xpp, MPI_Offset nelems, int *ip);$/;"	p	signature:(const void **xpp, MPI_Offset nelems, int *ip)
ncmpix_getn_float_long	src/lib/ncx.c	/^ncmpix_getn_float_long(const void **xpp, MPI_Offset nelems, long *tp)$/;"	f	signature:(const void **xpp, MPI_Offset nelems, long *tp)
ncmpix_getn_float_long	src/lib/ncx.h	/^ncmpix_getn_float_long(const void **xpp, MPI_Offset nelems, long *ip);$/;"	p	signature:(const void **xpp, MPI_Offset nelems, long *ip)
ncmpix_getn_float_schar	src/lib/ncx.c	/^ncmpix_getn_float_schar(const void **xpp, MPI_Offset nelems, schar *tp)$/;"	f	signature:(const void **xpp, MPI_Offset nelems, schar *tp)
ncmpix_getn_float_schar	src/lib/ncx.h	/^ncmpix_getn_float_schar(const void **xpp, MPI_Offset nelems, schar *ip);$/;"	p	signature:(const void **xpp, MPI_Offset nelems, schar *ip)
ncmpix_getn_float_short	src/lib/ncx.c	/^ncmpix_getn_float_short(const void **xpp, MPI_Offset nelems, short *tp)$/;"	f	signature:(const void **xpp, MPI_Offset nelems, short *tp)
ncmpix_getn_float_short	src/lib/ncx.h	/^ncmpix_getn_float_short(const void **xpp, MPI_Offset nelems, short *ip);$/;"	p	signature:(const void **xpp, MPI_Offset nelems, short *ip)
ncmpix_getn_float_uchar	src/lib/ncx.c	/^ncmpix_getn_float_uchar(const void **xpp, MPI_Offset nelems, uchar *tp)$/;"	f	signature:(const void **xpp, MPI_Offset nelems, uchar *tp)
ncmpix_getn_float_uchar	src/lib/ncx.h	/^ncmpix_getn_float_uchar(const void **xpp, MPI_Offset nelems, uchar *ip);$/;"	p	signature:(const void **xpp, MPI_Offset nelems, uchar *ip)
ncmpix_getn_int_double	src/lib/ncx.c	/^ncmpix_getn_int_double(const void **xpp, MPI_Offset nelems, double *tp)$/;"	f	signature:(const void **xpp, MPI_Offset nelems, double *tp)
ncmpix_getn_int_double	src/lib/ncx.h	/^ncmpix_getn_int_double(const void **xpp, MPI_Offset nelems, double *ip);$/;"	p	signature:(const void **xpp, MPI_Offset nelems, double *ip)
ncmpix_getn_int_float	src/lib/ncx.c	/^ncmpix_getn_int_float(const void **xpp, MPI_Offset nelems, float *tp)$/;"	f	signature:(const void **xpp, MPI_Offset nelems, float *tp)
ncmpix_getn_int_float	src/lib/ncx.h	/^ncmpix_getn_int_float(const void **xpp, MPI_Offset nelems, float *ip);$/;"	p	signature:(const void **xpp, MPI_Offset nelems, float *ip)
ncmpix_getn_int_int	src/lib/ncx.c	/^ncmpix_getn_int_int(const void **xpp, MPI_Offset nelems, int *tp)$/;"	f	signature:(const void **xpp, MPI_Offset nelems, int *tp)
ncmpix_getn_int_int	src/lib/ncx.h	/^ncmpix_getn_int_int(const void **xpp, MPI_Offset nelems, int *ip);$/;"	p	signature:(const void **xpp, MPI_Offset nelems, int *ip)
ncmpix_getn_int_long	src/lib/ncx.c	/^ncmpix_getn_int_long(const void **xpp, MPI_Offset nelems, long *tp)$/;"	f	signature:(const void **xpp, MPI_Offset nelems, long *tp)
ncmpix_getn_int_long	src/lib/ncx.h	/^ncmpix_getn_int_long(const void **xpp, MPI_Offset nelems, long *ip);$/;"	p	signature:(const void **xpp, MPI_Offset nelems, long *ip)
ncmpix_getn_int_schar	src/lib/ncx.c	/^ncmpix_getn_int_schar(const void **xpp, MPI_Offset nelems, schar *tp)$/;"	f	signature:(const void **xpp, MPI_Offset nelems, schar *tp)
ncmpix_getn_int_schar	src/lib/ncx.h	/^ncmpix_getn_int_schar(const void **xpp, MPI_Offset nelems, schar *ip);$/;"	p	signature:(const void **xpp, MPI_Offset nelems, schar *ip)
ncmpix_getn_int_short	src/lib/ncx.c	/^ncmpix_getn_int_short(const void **xpp, MPI_Offset nelems, short *tp)$/;"	f	signature:(const void **xpp, MPI_Offset nelems, short *tp)
ncmpix_getn_int_short	src/lib/ncx.h	/^ncmpix_getn_int_short(const void **xpp, MPI_Offset nelems, short *ip);$/;"	p	signature:(const void **xpp, MPI_Offset nelems, short *ip)
ncmpix_getn_int_uchar	src/lib/ncx.c	/^ncmpix_getn_int_uchar(const void **xpp, MPI_Offset nelems, uchar *tp)$/;"	f	signature:(const void **xpp, MPI_Offset nelems, uchar *tp)
ncmpix_getn_int_uchar	src/lib/ncx.h	/^ncmpix_getn_int_uchar(const void **xpp, MPI_Offset nelems, uchar *ip);$/;"	p	signature:(const void **xpp, MPI_Offset nelems, uchar *ip)
ncmpix_getn_long_long	src/lib/ncx.c	/^ncmpix_getn_long_long(const void **xpp, MPI_Offset nelems, MPI_Offset *tp)$/;"	f	signature:(const void **xpp, MPI_Offset nelems, MPI_Offset *tp)
ncmpix_getn_long_long	src/lib/ncx.h	/^ncmpix_getn_long_long(const void **xpp, MPI_Offset nelems, MPI_Offset *ip);$/;"	p	signature:(const void **xpp, MPI_Offset nelems, MPI_Offset *ip)
ncmpix_getn_schar_double	src/lib/ncx.c	/^ncmpix_getn_schar_double(const void **xpp, MPI_Offset nelems, double *tp)$/;"	f	signature:(const void **xpp, MPI_Offset nelems, double *tp)
ncmpix_getn_schar_double	src/lib/ncx.h	/^ncmpix_getn_schar_double(const void **xpp, MPI_Offset nelems, double *ip);$/;"	p	signature:(const void **xpp, MPI_Offset nelems, double *ip)
ncmpix_getn_schar_float	src/lib/ncx.c	/^ncmpix_getn_schar_float(const void **xpp, MPI_Offset nelems, float *tp)$/;"	f	signature:(const void **xpp, MPI_Offset nelems, float *tp)
ncmpix_getn_schar_float	src/lib/ncx.h	/^ncmpix_getn_schar_float(const void **xpp, MPI_Offset nelems, float *ip);$/;"	p	signature:(const void **xpp, MPI_Offset nelems, float *ip)
ncmpix_getn_schar_int	src/lib/ncx.c	/^ncmpix_getn_schar_int(const void **xpp, MPI_Offset nelems, int *tp)$/;"	f	signature:(const void **xpp, MPI_Offset nelems, int *tp)
ncmpix_getn_schar_int	src/lib/ncx.h	/^ncmpix_getn_schar_int(const void **xpp, MPI_Offset nelems, int *ip);$/;"	p	signature:(const void **xpp, MPI_Offset nelems, int *ip)
ncmpix_getn_schar_long	src/lib/ncx.c	/^ncmpix_getn_schar_long(const void **xpp, MPI_Offset nelems, long *tp)$/;"	f	signature:(const void **xpp, MPI_Offset nelems, long *tp)
ncmpix_getn_schar_long	src/lib/ncx.h	/^ncmpix_getn_schar_long(const void **xpp, MPI_Offset nelems, long *ip);$/;"	p	signature:(const void **xpp, MPI_Offset nelems, long *ip)
ncmpix_getn_schar_schar	src/lib/ncx.c	/^ncmpix_getn_schar_schar(const void **xpp, MPI_Offset nelems, schar *tp)$/;"	f	signature:(const void **xpp, MPI_Offset nelems, schar *tp)
ncmpix_getn_schar_schar	src/lib/ncx.h	/^ncmpix_getn_schar_schar(const void **xpp, MPI_Offset nelems, schar *ip);$/;"	p	signature:(const void **xpp, MPI_Offset nelems, schar *ip)
ncmpix_getn_schar_short	src/lib/ncx.c	/^ncmpix_getn_schar_short(const void **xpp, MPI_Offset nelems, short *tp)$/;"	f	signature:(const void **xpp, MPI_Offset nelems, short *tp)
ncmpix_getn_schar_short	src/lib/ncx.h	/^ncmpix_getn_schar_short(const void **xpp, MPI_Offset nelems, short *ip);$/;"	p	signature:(const void **xpp, MPI_Offset nelems, short *ip)
ncmpix_getn_schar_uchar	src/lib/ncx.c	/^ncmpix_getn_schar_uchar(const void **xpp, MPI_Offset nelems, uchar *tp)$/;"	f	signature:(const void **xpp, MPI_Offset nelems, uchar *tp)
ncmpix_getn_schar_uchar	src/lib/ncx.h	/^ncmpix_getn_schar_uchar(const void **xpp, MPI_Offset nelems, uchar *ip);$/;"	p	signature:(const void **xpp, MPI_Offset nelems, uchar *ip)
ncmpix_getn_short_double	src/lib/ncx.c	/^ncmpix_getn_short_double(const void **xpp, MPI_Offset nelems, double *tp)$/;"	f	signature:(const void **xpp, MPI_Offset nelems, double *tp)
ncmpix_getn_short_double	src/lib/ncx.h	/^ncmpix_getn_short_double(const void **xpp, MPI_Offset nelems, double *ip);$/;"	p	signature:(const void **xpp, MPI_Offset nelems, double *ip)
ncmpix_getn_short_float	src/lib/ncx.c	/^ncmpix_getn_short_float(const void **xpp, MPI_Offset nelems, float *tp)$/;"	f	signature:(const void **xpp, MPI_Offset nelems, float *tp)
ncmpix_getn_short_float	src/lib/ncx.h	/^ncmpix_getn_short_float(const void **xpp, MPI_Offset nelems, float *ip);$/;"	p	signature:(const void **xpp, MPI_Offset nelems, float *ip)
ncmpix_getn_short_int	src/lib/ncx.c	/^ncmpix_getn_short_int(const void **xpp, MPI_Offset nelems, int *tp)$/;"	f	signature:(const void **xpp, MPI_Offset nelems, int *tp)
ncmpix_getn_short_int	src/lib/ncx.h	/^ncmpix_getn_short_int(const void **xpp, MPI_Offset nelems, int *ip);$/;"	p	signature:(const void **xpp, MPI_Offset nelems, int *ip)
ncmpix_getn_short_long	src/lib/ncx.c	/^ncmpix_getn_short_long(const void **xpp, MPI_Offset nelems, long *tp)$/;"	f	signature:(const void **xpp, MPI_Offset nelems, long *tp)
ncmpix_getn_short_long	src/lib/ncx.h	/^ncmpix_getn_short_long(const void **xpp, MPI_Offset nelems, long *ip);$/;"	p	signature:(const void **xpp, MPI_Offset nelems, long *ip)
ncmpix_getn_short_schar	src/lib/ncx.c	/^ncmpix_getn_short_schar(const void **xpp, MPI_Offset nelems, schar *tp)$/;"	f	signature:(const void **xpp, MPI_Offset nelems, schar *tp)
ncmpix_getn_short_schar	src/lib/ncx.h	/^ncmpix_getn_short_schar(const void **xpp, MPI_Offset nelems, schar *ip);$/;"	p	signature:(const void **xpp, MPI_Offset nelems, schar *ip)
ncmpix_getn_short_short	src/lib/ncx.c	/^ncmpix_getn_short_short(const void **xpp, MPI_Offset nelems, short *tp)$/;"	f	signature:(const void **xpp, MPI_Offset nelems, short *tp)
ncmpix_getn_short_short	src/lib/ncx.h	/^ncmpix_getn_short_short(const void **xpp, MPI_Offset nelems, short *ip);$/;"	p	signature:(const void **xpp, MPI_Offset nelems, short *ip)
ncmpix_getn_short_uchar	src/lib/ncx.c	/^ncmpix_getn_short_uchar(const void **xpp, MPI_Offset nelems, uchar *tp)$/;"	f	signature:(const void **xpp, MPI_Offset nelems, uchar *tp)
ncmpix_getn_short_uchar	src/lib/ncx.h	/^ncmpix_getn_short_uchar(const void **xpp, MPI_Offset nelems, uchar *ip);$/;"	p	signature:(const void **xpp, MPI_Offset nelems, uchar *ip)
ncmpix_getn_text	src/lib/ncx.c	/^ncmpix_getn_text(const void **xpp, MPI_Offset nelems, char *tp)$/;"	f	signature:(const void **xpp, MPI_Offset nelems, char *tp)
ncmpix_getn_text	src/lib/ncx.h	/^ncmpix_getn_text(const void **xpp, MPI_Offset nchars, char *cp);$/;"	p	signature:(const void **xpp, MPI_Offset nchars, char *cp)
ncmpix_getn_void	src/lib/ncx.c	/^ncmpix_getn_void(const void **xpp, MPI_Offset nelems, void *tp)$/;"	f	signature:(const void **xpp, MPI_Offset nelems, void *tp)
ncmpix_getn_void	src/lib/ncx.h	/^ncmpix_getn_void(const void **xpp, MPI_Offset nchars, void *vp);$/;"	p	signature:(const void **xpp, MPI_Offset nchars, void *vp)
ncmpix_howmany	src/lib/nc.c	/^ncmpix_howmany(nc_type type, MPI_Offset xbufsize)$/;"	f	signature:(nc_type type, MPI_Offset xbufsize)
ncmpix_howmany	src/lib/nc.h	/^ncmpix_howmany(nc_type type, MPI_Offset xbufsize);$/;"	p	signature:(nc_type type, MPI_Offset xbufsize)
ncmpix_len_NC_attrV	src/lib/attr.c	/^ncmpix_len_NC_attrV(nc_type type, size_t nelems)$/;"	f	file:	signature:(nc_type type, size_t nelems)
ncmpix_len_char	src/lib/ncx.h	107;"	d
ncmpix_len_double	src/lib/ncx.h	122;"	d
ncmpix_len_float	src/lib/ncx.h	119;"	d
ncmpix_len_int	src/lib/ncx.h	113;"	d
ncmpix_len_long	src/lib/ncx.h	116;"	d
ncmpix_len_nctype	src/lib/header.c	/^ncmpix_len_nctype(nc_type type) {$/;"	f	signature:(nc_type type)
ncmpix_len_nctype	src/lib/nc.h	/^ncmpix_len_nctype(nc_type type);$/;"	p	signature:(nc_type type)
ncmpix_len_short	src/lib/ncx.h	110;"	d
ncmpix_pad_getn_Idouble	src/lib/attr.c	/^ncmpix_pad_getn_Idouble(const void **xpp, MPI_Offset nelems, double *tp, nc_type type)$/;"	f	file:	signature:(const void **xpp, MPI_Offset nelems, double *tp, nc_type type)
ncmpix_pad_getn_Ifloat	src/lib/attr.c	/^ncmpix_pad_getn_Ifloat(const void **xpp, MPI_Offset nelems, float *tp, nc_type type)$/;"	f	file:	signature:(const void **xpp, MPI_Offset nelems, float *tp, nc_type type)
ncmpix_pad_getn_Iint	src/lib/attr.c	/^ncmpix_pad_getn_Iint(const void **xpp, MPI_Offset nelems, int *tp, nc_type type)$/;"	f	file:	signature:(const void **xpp, MPI_Offset nelems, int *tp, nc_type type)
ncmpix_pad_getn_Ilong	src/lib/attr.c	/^ncmpix_pad_getn_Ilong(const void **xpp, MPI_Offset nelems, long *tp, nc_type type)$/;"	f	file:	signature:(const void **xpp, MPI_Offset nelems, long *tp, nc_type type)
ncmpix_pad_getn_Ischar	src/lib/attr.c	/^ncmpix_pad_getn_Ischar(const void **xpp, MPI_Offset nelems, schar *tp, nc_type type)$/;"	f	file:	signature:(const void **xpp, MPI_Offset nelems, schar *tp, nc_type type)
ncmpix_pad_getn_Ishort	src/lib/attr.c	/^ncmpix_pad_getn_Ishort(const void **xpp, MPI_Offset nelems, short *tp, nc_type type)$/;"	f	file:	signature:(const void **xpp, MPI_Offset nelems, short *tp, nc_type type)
ncmpix_pad_getn_Iuchar	src/lib/attr.c	/^ncmpix_pad_getn_Iuchar(const void **xpp, MPI_Offset nelems, uchar *tp, nc_type type)$/;"	f	file:	signature:(const void **xpp, MPI_Offset nelems, uchar *tp, nc_type type)
ncmpix_pad_getn_schar_double	src/lib/ncx.c	/^ncmpix_pad_getn_schar_double(const void **xpp, MPI_Offset nelems, double *tp)$/;"	f	signature:(const void **xpp, MPI_Offset nelems, double *tp)
ncmpix_pad_getn_schar_double	src/lib/ncx.h	/^ncmpix_pad_getn_schar_double(const void **xpp, MPI_Offset nelems, double *ip);$/;"	p	signature:(const void **xpp, MPI_Offset nelems, double *ip)
ncmpix_pad_getn_schar_float	src/lib/ncx.c	/^ncmpix_pad_getn_schar_float(const void **xpp, MPI_Offset nelems, float *tp)$/;"	f	signature:(const void **xpp, MPI_Offset nelems, float *tp)
ncmpix_pad_getn_schar_float	src/lib/ncx.h	/^ncmpix_pad_getn_schar_float(const void **xpp, MPI_Offset nelems, float *ip);$/;"	p	signature:(const void **xpp, MPI_Offset nelems, float *ip)
ncmpix_pad_getn_schar_int	src/lib/ncx.c	/^ncmpix_pad_getn_schar_int(const void **xpp, MPI_Offset nelems, int *tp)$/;"	f	signature:(const void **xpp, MPI_Offset nelems, int *tp)
ncmpix_pad_getn_schar_int	src/lib/ncx.h	/^ncmpix_pad_getn_schar_int(const void **xpp, MPI_Offset nelems, int *ip);$/;"	p	signature:(const void **xpp, MPI_Offset nelems, int *ip)
ncmpix_pad_getn_schar_long	src/lib/ncx.c	/^ncmpix_pad_getn_schar_long(const void **xpp, MPI_Offset nelems, long *tp)$/;"	f	signature:(const void **xpp, MPI_Offset nelems, long *tp)
ncmpix_pad_getn_schar_long	src/lib/ncx.h	/^ncmpix_pad_getn_schar_long(const void **xpp, MPI_Offset nelems, long *ip);$/;"	p	signature:(const void **xpp, MPI_Offset nelems, long *ip)
ncmpix_pad_getn_schar_schar	src/lib/ncx.c	/^ncmpix_pad_getn_schar_schar(const void **xpp, MPI_Offset nelems, schar *tp)$/;"	f	signature:(const void **xpp, MPI_Offset nelems, schar *tp)
ncmpix_pad_getn_schar_schar	src/lib/ncx.h	/^ncmpix_pad_getn_schar_schar(const void **xpp, MPI_Offset nelems, schar *ip);$/;"	p	signature:(const void **xpp, MPI_Offset nelems, schar *ip)
ncmpix_pad_getn_schar_short	src/lib/ncx.c	/^ncmpix_pad_getn_schar_short(const void **xpp, MPI_Offset nelems, short *tp)$/;"	f	signature:(const void **xpp, MPI_Offset nelems, short *tp)
ncmpix_pad_getn_schar_short	src/lib/ncx.h	/^ncmpix_pad_getn_schar_short(const void **xpp, MPI_Offset nelems, short *ip);$/;"	p	signature:(const void **xpp, MPI_Offset nelems, short *ip)
ncmpix_pad_getn_schar_uchar	src/lib/ncx.c	/^ncmpix_pad_getn_schar_uchar(const void **xpp, MPI_Offset nelems, uchar *tp)$/;"	f	signature:(const void **xpp, MPI_Offset nelems, uchar *tp)
ncmpix_pad_getn_schar_uchar	src/lib/ncx.h	/^ncmpix_pad_getn_schar_uchar(const void **xpp, MPI_Offset nelems, uchar *ip);$/;"	p	signature:(const void **xpp, MPI_Offset nelems, uchar *ip)
ncmpix_pad_getn_short_double	src/lib/ncx.c	/^ncmpix_pad_getn_short_double(const void **xpp, MPI_Offset nelems, double *tp)$/;"	f	signature:(const void **xpp, MPI_Offset nelems, double *tp)
ncmpix_pad_getn_short_double	src/lib/ncx.h	/^ncmpix_pad_getn_short_double(const void **xpp, MPI_Offset nelems, double *ip);$/;"	p	signature:(const void **xpp, MPI_Offset nelems, double *ip)
ncmpix_pad_getn_short_float	src/lib/ncx.c	/^ncmpix_pad_getn_short_float(const void **xpp, MPI_Offset nelems, float *tp)$/;"	f	signature:(const void **xpp, MPI_Offset nelems, float *tp)
ncmpix_pad_getn_short_float	src/lib/ncx.h	/^ncmpix_pad_getn_short_float(const void **xpp, MPI_Offset nelems, float *ip);$/;"	p	signature:(const void **xpp, MPI_Offset nelems, float *ip)
ncmpix_pad_getn_short_int	src/lib/ncx.c	/^ncmpix_pad_getn_short_int(const void **xpp, MPI_Offset nelems, int *tp)$/;"	f	signature:(const void **xpp, MPI_Offset nelems, int *tp)
ncmpix_pad_getn_short_int	src/lib/ncx.h	/^ncmpix_pad_getn_short_int(const void **xpp, MPI_Offset nelems, int *ip);$/;"	p	signature:(const void **xpp, MPI_Offset nelems, int *ip)
ncmpix_pad_getn_short_long	src/lib/ncx.c	/^ncmpix_pad_getn_short_long(const void **xpp, MPI_Offset nelems, long *tp)$/;"	f	signature:(const void **xpp, MPI_Offset nelems, long *tp)
ncmpix_pad_getn_short_long	src/lib/ncx.h	/^ncmpix_pad_getn_short_long(const void **xpp, MPI_Offset nelems, long *ip);$/;"	p	signature:(const void **xpp, MPI_Offset nelems, long *ip)
ncmpix_pad_getn_short_schar	src/lib/ncx.c	/^ncmpix_pad_getn_short_schar(const void **xpp, MPI_Offset nelems, schar *tp)$/;"	f	signature:(const void **xpp, MPI_Offset nelems, schar *tp)
ncmpix_pad_getn_short_schar	src/lib/ncx.h	/^ncmpix_pad_getn_short_schar(const void **xpp, MPI_Offset nelems, schar *ip);$/;"	p	signature:(const void **xpp, MPI_Offset nelems, schar *ip)
ncmpix_pad_getn_short_short	src/lib/ncx.c	/^ncmpix_pad_getn_short_short(const void **xpp, MPI_Offset nelems, short *tp)$/;"	f	signature:(const void **xpp, MPI_Offset nelems, short *tp)
ncmpix_pad_getn_short_short	src/lib/ncx.h	/^ncmpix_pad_getn_short_short(const void **xpp, MPI_Offset nelems, short *ip);$/;"	p	signature:(const void **xpp, MPI_Offset nelems, short *ip)
ncmpix_pad_getn_short_uchar	src/lib/ncx.c	/^ncmpix_pad_getn_short_uchar(const void **xpp, MPI_Offset nelems, uchar *tp)$/;"	f	signature:(const void **xpp, MPI_Offset nelems, uchar *tp)
ncmpix_pad_getn_short_uchar	src/lib/ncx.h	/^ncmpix_pad_getn_short_uchar(const void **xpp, MPI_Offset nelems, uchar *ip);$/;"	p	signature:(const void **xpp, MPI_Offset nelems, uchar *ip)
ncmpix_pad_getn_text	src/lib/ncx.c	/^ncmpix_pad_getn_text(const void **xpp, MPI_Offset nelems, char *tp)$/;"	f	signature:(const void **xpp, MPI_Offset nelems, char *tp)
ncmpix_pad_getn_text	src/lib/ncx.h	/^ncmpix_pad_getn_text(const void **xpp, MPI_Offset nchars, char *cp);$/;"	p	signature:(const void **xpp, MPI_Offset nchars, char *cp)
ncmpix_pad_getn_void	src/lib/ncx.c	/^ncmpix_pad_getn_void(const void **xpp, MPI_Offset nelems, void *tp)$/;"	f	signature:(const void **xpp, MPI_Offset nelems, void *tp)
ncmpix_pad_getn_void	src/lib/ncx.h	/^ncmpix_pad_getn_void(const void **xpp, MPI_Offset nchars, void *vp);$/;"	p	signature:(const void **xpp, MPI_Offset nchars, void *vp)
ncmpix_pad_putn_Idouble	src/lib/attr.c	/^ncmpix_pad_putn_Idouble(void **xpp, MPI_Offset nelems, const double *tp, nc_type type)$/;"	f	file:	signature:(void **xpp, MPI_Offset nelems, const double *tp, nc_type type)
ncmpix_pad_putn_Ifloat	src/lib/attr.c	/^ncmpix_pad_putn_Ifloat(void **xpp, MPI_Offset nelems, const float *tp, nc_type type)$/;"	f	file:	signature:(void **xpp, MPI_Offset nelems, const float *tp, nc_type type)
ncmpix_pad_putn_Iint	src/lib/attr.c	/^ncmpix_pad_putn_Iint(void **xpp, MPI_Offset nelems, const int *tp, nc_type type)$/;"	f	file:	signature:(void **xpp, MPI_Offset nelems, const int *tp, nc_type type)
ncmpix_pad_putn_Ilong	src/lib/attr.c	/^ncmpix_pad_putn_Ilong(void **xpp, MPI_Offset nelems, const long *tp, nc_type type)$/;"	f	file:	signature:(void **xpp, MPI_Offset nelems, const long *tp, nc_type type)
ncmpix_pad_putn_Ischar	src/lib/attr.c	/^ncmpix_pad_putn_Ischar(void **xpp, MPI_Offset nelems, const schar *tp, nc_type type)$/;"	f	file:	signature:(void **xpp, MPI_Offset nelems, const schar *tp, nc_type type)
ncmpix_pad_putn_Ishort	src/lib/attr.c	/^ncmpix_pad_putn_Ishort(void **xpp, MPI_Offset nelems, const short *tp, nc_type type)$/;"	f	file:	signature:(void **xpp, MPI_Offset nelems, const short *tp, nc_type type)
ncmpix_pad_putn_Iuchar	src/lib/attr.c	/^ncmpix_pad_putn_Iuchar(void **xpp, MPI_Offset nelems, const uchar *tp, nc_type type)$/;"	f	file:	signature:(void **xpp, MPI_Offset nelems, const uchar *tp, nc_type type)
ncmpix_pad_putn_schar_double	src/lib/ncx.c	/^ncmpix_pad_putn_schar_double(void **xpp, MPI_Offset nelems, const double *tp)$/;"	f	signature:(void **xpp, MPI_Offset nelems, const double *tp)
ncmpix_pad_putn_schar_double	src/lib/ncx.h	/^ncmpix_pad_putn_schar_double(void **xpp, MPI_Offset nelems, const double *ip);$/;"	p	signature:(void **xpp, MPI_Offset nelems, const double *ip)
ncmpix_pad_putn_schar_float	src/lib/ncx.c	/^ncmpix_pad_putn_schar_float(void **xpp, MPI_Offset nelems, const float *tp)$/;"	f	signature:(void **xpp, MPI_Offset nelems, const float *tp)
ncmpix_pad_putn_schar_float	src/lib/ncx.h	/^ncmpix_pad_putn_schar_float(void **xpp, MPI_Offset nelems, const float *ip);$/;"	p	signature:(void **xpp, MPI_Offset nelems, const float *ip)
ncmpix_pad_putn_schar_int	src/lib/ncx.c	/^ncmpix_pad_putn_schar_int(void **xpp, MPI_Offset nelems, const int *tp)$/;"	f	signature:(void **xpp, MPI_Offset nelems, const int *tp)
ncmpix_pad_putn_schar_int	src/lib/ncx.h	/^ncmpix_pad_putn_schar_int(void **xpp, MPI_Offset nelems, const int *ip);$/;"	p	signature:(void **xpp, MPI_Offset nelems, const int *ip)
ncmpix_pad_putn_schar_long	src/lib/ncx.c	/^ncmpix_pad_putn_schar_long(void **xpp, MPI_Offset nelems, const long *tp)$/;"	f	signature:(void **xpp, MPI_Offset nelems, const long *tp)
ncmpix_pad_putn_schar_long	src/lib/ncx.h	/^ncmpix_pad_putn_schar_long(void **xpp, MPI_Offset nelems, const long *ip);$/;"	p	signature:(void **xpp, MPI_Offset nelems, const long *ip)
ncmpix_pad_putn_schar_schar	src/lib/ncx.c	/^ncmpix_pad_putn_schar_schar(void **xpp, MPI_Offset nelems, const schar *tp)$/;"	f	signature:(void **xpp, MPI_Offset nelems, const schar *tp)
ncmpix_pad_putn_schar_schar	src/lib/ncx.h	/^ncmpix_pad_putn_schar_schar(void **xpp, MPI_Offset nelems, const schar *ip);$/;"	p	signature:(void **xpp, MPI_Offset nelems, const schar *ip)
ncmpix_pad_putn_schar_short	src/lib/ncx.c	/^ncmpix_pad_putn_schar_short(void **xpp, MPI_Offset nelems, const short *tp)$/;"	f	signature:(void **xpp, MPI_Offset nelems, const short *tp)
ncmpix_pad_putn_schar_short	src/lib/ncx.h	/^ncmpix_pad_putn_schar_short(void **xpp, MPI_Offset nelems, const short *ip);$/;"	p	signature:(void **xpp, MPI_Offset nelems, const short *ip)
ncmpix_pad_putn_schar_uchar	src/lib/ncx.c	/^ncmpix_pad_putn_schar_uchar(void **xpp, MPI_Offset nelems, const uchar *tp)$/;"	f	signature:(void **xpp, MPI_Offset nelems, const uchar *tp)
ncmpix_pad_putn_schar_uchar	src/lib/ncx.h	/^ncmpix_pad_putn_schar_uchar(void **xpp, MPI_Offset nelems, const uchar *ip);$/;"	p	signature:(void **xpp, MPI_Offset nelems, const uchar *ip)
ncmpix_pad_putn_short_double	src/lib/ncx.c	/^ncmpix_pad_putn_short_double(void **xpp, MPI_Offset nelems, const double *tp)$/;"	f	signature:(void **xpp, MPI_Offset nelems, const double *tp)
ncmpix_pad_putn_short_double	src/lib/ncx.h	/^ncmpix_pad_putn_short_double(void **xpp, MPI_Offset nelems, const double *ip);$/;"	p	signature:(void **xpp, MPI_Offset nelems, const double *ip)
ncmpix_pad_putn_short_float	src/lib/ncx.c	/^ncmpix_pad_putn_short_float(void **xpp, MPI_Offset nelems, const float *tp)$/;"	f	signature:(void **xpp, MPI_Offset nelems, const float *tp)
ncmpix_pad_putn_short_float	src/lib/ncx.h	/^ncmpix_pad_putn_short_float(void **xpp, MPI_Offset nelems, const float *ip);$/;"	p	signature:(void **xpp, MPI_Offset nelems, const float *ip)
ncmpix_pad_putn_short_int	src/lib/ncx.c	/^ncmpix_pad_putn_short_int(void **xpp, MPI_Offset nelems, const int *tp)$/;"	f	signature:(void **xpp, MPI_Offset nelems, const int *tp)
ncmpix_pad_putn_short_int	src/lib/ncx.h	/^ncmpix_pad_putn_short_int(void **xpp, MPI_Offset nelems, const int *ip);$/;"	p	signature:(void **xpp, MPI_Offset nelems, const int *ip)
ncmpix_pad_putn_short_long	src/lib/ncx.c	/^ncmpix_pad_putn_short_long(void **xpp, MPI_Offset nelems, const long *tp)$/;"	f	signature:(void **xpp, MPI_Offset nelems, const long *tp)
ncmpix_pad_putn_short_long	src/lib/ncx.h	/^ncmpix_pad_putn_short_long(void **xpp, MPI_Offset nelems, const long *ip);$/;"	p	signature:(void **xpp, MPI_Offset nelems, const long *ip)
ncmpix_pad_putn_short_schar	src/lib/ncx.c	/^ncmpix_pad_putn_short_schar(void **xpp, MPI_Offset nelems, const schar *tp)$/;"	f	signature:(void **xpp, MPI_Offset nelems, const schar *tp)
ncmpix_pad_putn_short_schar	src/lib/ncx.h	/^ncmpix_pad_putn_short_schar(void **xpp, MPI_Offset nelems, const schar *ip);$/;"	p	signature:(void **xpp, MPI_Offset nelems, const schar *ip)
ncmpix_pad_putn_short_short	src/lib/ncx.c	/^ncmpix_pad_putn_short_short(void **xpp, MPI_Offset nelems, const short *tp)$/;"	f	signature:(void **xpp, MPI_Offset nelems, const short *tp)
ncmpix_pad_putn_short_short	src/lib/ncx.h	/^ncmpix_pad_putn_short_short(void **xpp, MPI_Offset nelems, const short *ip);$/;"	p	signature:(void **xpp, MPI_Offset nelems, const short *ip)
ncmpix_pad_putn_short_uchar	src/lib/ncx.c	/^ncmpix_pad_putn_short_uchar(void **xpp, MPI_Offset nelems, const uchar *tp)$/;"	f	signature:(void **xpp, MPI_Offset nelems, const uchar *tp)
ncmpix_pad_putn_short_uchar	src/lib/ncx.h	/^ncmpix_pad_putn_short_uchar(void **xpp, MPI_Offset nelems, const uchar *ip);$/;"	p	signature:(void **xpp, MPI_Offset nelems, const uchar *ip)
ncmpix_pad_putn_text	src/lib/ncx.c	/^ncmpix_pad_putn_text(void **xpp, MPI_Offset nelems, const char *tp)$/;"	f	signature:(void **xpp, MPI_Offset nelems, const char *tp)
ncmpix_pad_putn_text	src/lib/ncx.h	/^ncmpix_pad_putn_text(void **xpp, MPI_Offset nchars, const char *cp);$/;"	p	signature:(void **xpp, MPI_Offset nchars, const char *cp)
ncmpix_pad_putn_void	src/lib/ncx.c	/^ncmpix_pad_putn_void(void **xpp, MPI_Offset nelems, const void *tp)$/;"	f	signature:(void **xpp, MPI_Offset nelems, const void *tp)
ncmpix_pad_putn_void	src/lib/ncx.h	/^ncmpix_pad_putn_void(void **xpp, MPI_Offset nchars, const void *vp);$/;"	p	signature:(void **xpp, MPI_Offset nchars, const void *vp)
ncmpix_put_double_double	src/lib/ncx.c	/^ncmpix_put_double_double(void *xp, const double *ip)$/;"	f	signature:(void *xp, const double *ip)
ncmpix_put_double_double	src/lib/ncx.h	/^ncmpix_put_double_double(void *xp, const double *ip);$/;"	p	signature:(void *xp, const double *ip)
ncmpix_put_double_float	src/lib/ncx.c	/^ncmpix_put_double_float(void *xp, const float *ip)$/;"	f	signature:(void *xp, const float *ip)
ncmpix_put_double_float	src/lib/ncx.h	/^ncmpix_put_double_float(void *xp, const float *ip);$/;"	p	signature:(void *xp, const float *ip)
ncmpix_put_double_int	src/lib/ncx.c	/^ncmpix_put_double_int(void *xp, const int *ip)$/;"	f	signature:(void *xp, const int *ip)
ncmpix_put_double_int	src/lib/ncx.h	/^ncmpix_put_double_int(void *xp, const int *ip);$/;"	p	signature:(void *xp, const int *ip)
ncmpix_put_double_long	src/lib/ncx.c	/^ncmpix_put_double_long(void *xp, const long *ip)$/;"	f	signature:(void *xp, const long *ip)
ncmpix_put_double_long	src/lib/ncx.h	/^ncmpix_put_double_long(void *xp, const long *ip);$/;"	p	signature:(void *xp, const long *ip)
ncmpix_put_double_schar	src/lib/ncx.c	/^ncmpix_put_double_schar(void *xp, const schar *ip)$/;"	f	signature:(void *xp, const schar *ip)
ncmpix_put_double_schar	src/lib/ncx.h	/^ncmpix_put_double_schar(void *xp, const schar *ip);$/;"	p	signature:(void *xp, const schar *ip)
ncmpix_put_double_short	src/lib/ncx.c	/^ncmpix_put_double_short(void *xp, const short *ip)$/;"	f	signature:(void *xp, const short *ip)
ncmpix_put_double_short	src/lib/ncx.h	/^ncmpix_put_double_short(void *xp, const short *ip);$/;"	p	signature:(void *xp, const short *ip)
ncmpix_put_double_uchar	src/lib/ncx.c	/^ncmpix_put_double_uchar(void *xp, const uchar *ip)$/;"	f	signature:(void *xp, const uchar *ip)
ncmpix_put_double_uchar	src/lib/ncx.h	/^ncmpix_put_double_uchar(void *xp, const uchar *ip);$/;"	p	signature:(void *xp, const uchar *ip)
ncmpix_put_float_double	src/lib/ncx.c	/^ncmpix_put_float_double(void *xp, const double *ip)$/;"	f	signature:(void *xp, const double *ip)
ncmpix_put_float_double	src/lib/ncx.h	/^ncmpix_put_float_double(void *xp, const double *ip);$/;"	p	signature:(void *xp, const double *ip)
ncmpix_put_float_float	src/lib/ncx.c	/^ncmpix_put_float_float(void *xp, const float *ip)$/;"	f	signature:(void *xp, const float *ip)
ncmpix_put_float_float	src/lib/ncx.h	/^ncmpix_put_float_float(void *xp, const float *ip);$/;"	p	signature:(void *xp, const float *ip)
ncmpix_put_float_int	src/lib/ncx.c	/^ncmpix_put_float_int(void *xp, const int *ip)$/;"	f	signature:(void *xp, const int *ip)
ncmpix_put_float_int	src/lib/ncx.h	/^ncmpix_put_float_int(void *xp, const int *ip);$/;"	p	signature:(void *xp, const int *ip)
ncmpix_put_float_long	src/lib/ncx.c	/^ncmpix_put_float_long(void *xp, const long *ip)$/;"	f	signature:(void *xp, const long *ip)
ncmpix_put_float_long	src/lib/ncx.h	/^ncmpix_put_float_long(void *xp, const long *ip);$/;"	p	signature:(void *xp, const long *ip)
ncmpix_put_float_schar	src/lib/ncx.c	/^ncmpix_put_float_schar(void *xp, const schar *ip)$/;"	f	signature:(void *xp, const schar *ip)
ncmpix_put_float_schar	src/lib/ncx.h	/^ncmpix_put_float_schar(void *xp, const schar *ip);$/;"	p	signature:(void *xp, const schar *ip)
ncmpix_put_float_short	src/lib/ncx.c	/^ncmpix_put_float_short(void *xp, const short *ip)$/;"	f	signature:(void *xp, const short *ip)
ncmpix_put_float_short	src/lib/ncx.h	/^ncmpix_put_float_short(void *xp, const short *ip);$/;"	p	signature:(void *xp, const short *ip)
ncmpix_put_float_uchar	src/lib/ncx.c	/^ncmpix_put_float_uchar(void *xp, const uchar *ip)$/;"	f	signature:(void *xp, const uchar *ip)
ncmpix_put_float_uchar	src/lib/ncx.h	/^ncmpix_put_float_uchar(void *xp, const uchar *ip);$/;"	p	signature:(void *xp, const uchar *ip)
ncmpix_put_int_double	src/lib/ncx.c	/^ncmpix_put_int_double(void *xp, const double *ip)$/;"	f	signature:(void *xp, const double *ip)
ncmpix_put_int_double	src/lib/ncx.h	/^ncmpix_put_int_double(void *xp, const double *ip);$/;"	p	signature:(void *xp, const double *ip)
ncmpix_put_int_float	src/lib/ncx.c	/^ncmpix_put_int_float(void *xp, const float *ip)$/;"	f	signature:(void *xp, const float *ip)
ncmpix_put_int_float	src/lib/ncx.h	/^ncmpix_put_int_float(void *xp, const float *ip);$/;"	p	signature:(void *xp, const float *ip)
ncmpix_put_int_int	src/lib/ncx.c	/^ncmpix_put_int_int(void *xp, const int *ip)$/;"	f	signature:(void *xp, const int *ip)
ncmpix_put_int_int	src/lib/ncx.h	/^ncmpix_put_int_int(void *xp, const int *ip);$/;"	p	signature:(void *xp, const int *ip)
ncmpix_put_int_long	src/lib/ncx.c	/^ncmpix_put_int_long(void *xp, const long *ip)$/;"	f	signature:(void *xp, const long *ip)
ncmpix_put_int_long	src/lib/ncx.h	/^ncmpix_put_int_long(void *xp, const long *ip);$/;"	p	signature:(void *xp, const long *ip)
ncmpix_put_int_schar	src/lib/ncx.c	/^ncmpix_put_int_schar(void *xp, const schar *ip)$/;"	f	signature:(void *xp, const schar *ip)
ncmpix_put_int_schar	src/lib/ncx.h	/^ncmpix_put_int_schar(void *xp, const schar *ip);$/;"	p	signature:(void *xp, const schar *ip)
ncmpix_put_int_short	src/lib/ncx.c	/^ncmpix_put_int_short(void *xp, const short *ip)$/;"	f	signature:(void *xp, const short *ip)
ncmpix_put_int_short	src/lib/ncx.h	/^ncmpix_put_int_short(void *xp, const short *ip);$/;"	p	signature:(void *xp, const short *ip)
ncmpix_put_int_uchar	src/lib/ncx.c	/^ncmpix_put_int_uchar(void *xp, const uchar *ip)$/;"	f	signature:(void *xp, const uchar *ip)
ncmpix_put_int_uchar	src/lib/ncx.h	/^ncmpix_put_int_uchar(void *xp, const uchar *ip);$/;"	p	signature:(void *xp, const uchar *ip)
ncmpix_put_off_t	src/lib/ncx.c	/^ncmpix_put_off_t(void **xpp, const MPI_Offset *lp, MPI_Offset sizeof_off_t)$/;"	f	signature:(void **xpp, const MPI_Offset *lp, MPI_Offset sizeof_off_t)
ncmpix_put_off_t	src/lib/ncx.h	/^ncmpix_put_off_t(void **xpp, const MPI_Offset *lp, MPI_Offset sizeof_off_t);$/;"	p	signature:(void **xpp, const MPI_Offset *lp, MPI_Offset sizeof_off_t)
ncmpix_put_short_double	src/lib/ncx.c	/^ncmpix_put_short_double(void *xp, const double *ip)$/;"	f	signature:(void *xp, const double *ip)
ncmpix_put_short_double	src/lib/ncx.h	/^ncmpix_put_short_double(void *xp, const double *ip);$/;"	p	signature:(void *xp, const double *ip)
ncmpix_put_short_float	src/lib/ncx.c	/^ncmpix_put_short_float(void *xp, const float *ip)$/;"	f	signature:(void *xp, const float *ip)
ncmpix_put_short_float	src/lib/ncx.h	/^ncmpix_put_short_float(void *xp, const float *ip);$/;"	p	signature:(void *xp, const float *ip)
ncmpix_put_short_int	src/lib/ncx.c	/^ncmpix_put_short_int(void *xp, const int *ip)$/;"	f	signature:(void *xp, const int *ip)
ncmpix_put_short_int	src/lib/ncx.h	/^ncmpix_put_short_int(void *xp, const int *ip);$/;"	p	signature:(void *xp, const int *ip)
ncmpix_put_short_long	src/lib/ncx.c	/^ncmpix_put_short_long(void *xp, const long *ip)$/;"	f	signature:(void *xp, const long *ip)
ncmpix_put_short_long	src/lib/ncx.h	/^ncmpix_put_short_long(void *xp, const long *ip);$/;"	p	signature:(void *xp, const long *ip)
ncmpix_put_short_schar	src/lib/ncx.c	/^ncmpix_put_short_schar(void *xp, const schar *ip)$/;"	f	signature:(void *xp, const schar *ip)
ncmpix_put_short_schar	src/lib/ncx.h	/^ncmpix_put_short_schar(void *xp, const schar *ip);$/;"	p	signature:(void *xp, const schar *ip)
ncmpix_put_short_short	src/lib/ncx.c	/^ncmpix_put_short_short(void *xp, const short *ip)$/;"	f	signature:(void *xp, const short *ip)
ncmpix_put_short_short	src/lib/ncx.h	/^ncmpix_put_short_short(void *xp, const short *ip);$/;"	p	signature:(void *xp, const short *ip)
ncmpix_put_short_uchar	src/lib/ncx.c	/^ncmpix_put_short_uchar(void *xp, const uchar *ip)$/;"	f	signature:(void *xp, const uchar *ip)
ncmpix_put_short_uchar	src/lib/ncx.h	/^ncmpix_put_short_uchar(void *xp, const uchar *ip);$/;"	p	signature:(void *xp, const uchar *ip)
ncmpix_put_size_t	src/lib/ncx.c	/^ncmpix_put_size_t(void **xpp, const MPI_Offset *lp, MPI_Offset sizeof_t)$/;"	f	signature:(void **xpp, const MPI_Offset *lp, MPI_Offset sizeof_t)
ncmpix_put_size_t	src/lib/ncx.h	/^ncmpix_put_size_t(void **xpp, const MPI_Offset *ulp, MPI_Offset sizeof_off_t);$/;"	p	signature:(void **xpp, const MPI_Offset *ulp, MPI_Offset sizeof_off_t)
ncmpix_put_size_t1	src/lib/ncx.c	/^ncmpix_put_size_t1(void **xpp, const MPI_Offset *ulp)$/;"	f	signature:(void **xpp, const MPI_Offset *ulp)
ncmpix_put_size_t1	src/lib/ncx.h	/^ncmpix_put_size_t1(void **xpp, const MPI_Offset *ulp);$/;"	p	signature:(void **xpp, const MPI_Offset *ulp)
ncmpix_putn_char_char	src/lib/ncx.h	642;"	d
ncmpix_putn_double_double	src/lib/ncx.c	/^ncmpix_putn_double_double(void **xpp, MPI_Offset ndoubles, const double *ip)$/;"	f	signature:(void **xpp, MPI_Offset ndoubles, const double *ip)
ncmpix_putn_double_double	src/lib/ncx.c	/^ncmpix_putn_double_double(void **xpp, MPI_Offset nelems, const double *tp)$/;"	f	signature:(void **xpp, MPI_Offset nelems, const double *tp)
ncmpix_putn_double_double	src/lib/ncx.h	/^ncmpix_putn_double_double(void **xpp, MPI_Offset nelems, const double *ip);$/;"	p	signature:(void **xpp, MPI_Offset nelems, const double *ip)
ncmpix_putn_double_float	src/lib/ncx.c	/^ncmpix_putn_double_float(void **xpp, MPI_Offset nelems, const float *tp)$/;"	f	signature:(void **xpp, MPI_Offset nelems, const float *tp)
ncmpix_putn_double_float	src/lib/ncx.h	/^ncmpix_putn_double_float(void **xpp, MPI_Offset nelems, const float *ip);$/;"	p	signature:(void **xpp, MPI_Offset nelems, const float *ip)
ncmpix_putn_double_int	src/lib/ncx.c	/^ncmpix_putn_double_int(void **xpp, MPI_Offset nelems, const int *tp)$/;"	f	signature:(void **xpp, MPI_Offset nelems, const int *tp)
ncmpix_putn_double_int	src/lib/ncx.h	/^ncmpix_putn_double_int(void **xpp, MPI_Offset nelems, const int *ip);$/;"	p	signature:(void **xpp, MPI_Offset nelems, const int *ip)
ncmpix_putn_double_long	src/lib/ncx.c	/^ncmpix_putn_double_long(void **xpp, MPI_Offset nelems, const long *tp)$/;"	f	signature:(void **xpp, MPI_Offset nelems, const long *tp)
ncmpix_putn_double_long	src/lib/ncx.h	/^ncmpix_putn_double_long(void **xpp, MPI_Offset nelems, const long *ip);$/;"	p	signature:(void **xpp, MPI_Offset nelems, const long *ip)
ncmpix_putn_double_schar	src/lib/ncx.c	/^ncmpix_putn_double_schar(void **xpp, MPI_Offset nelems, const schar *tp)$/;"	f	signature:(void **xpp, MPI_Offset nelems, const schar *tp)
ncmpix_putn_double_schar	src/lib/ncx.h	/^ncmpix_putn_double_schar(void **xpp, MPI_Offset nelems, const schar *ip);$/;"	p	signature:(void **xpp, MPI_Offset nelems, const schar *ip)
ncmpix_putn_double_short	src/lib/ncx.c	/^ncmpix_putn_double_short(void **xpp, MPI_Offset nelems, const short *tp)$/;"	f	signature:(void **xpp, MPI_Offset nelems, const short *tp)
ncmpix_putn_double_short	src/lib/ncx.h	/^ncmpix_putn_double_short(void **xpp, MPI_Offset nelems, const short *ip);$/;"	p	signature:(void **xpp, MPI_Offset nelems, const short *ip)
ncmpix_putn_double_uchar	src/lib/ncx.c	/^ncmpix_putn_double_uchar(void **xpp, MPI_Offset nelems, const uchar *tp)$/;"	f	signature:(void **xpp, MPI_Offset nelems, const uchar *tp)
ncmpix_putn_double_uchar	src/lib/ncx.h	/^ncmpix_putn_double_uchar(void **xpp, MPI_Offset nelems, const uchar *ip);$/;"	p	signature:(void **xpp, MPI_Offset nelems, const uchar *ip)
ncmpix_putn_float_double	src/lib/ncx.c	/^ncmpix_putn_float_double(void **xpp, MPI_Offset nelems, const double *tp)$/;"	f	signature:(void **xpp, MPI_Offset nelems, const double *tp)
ncmpix_putn_float_double	src/lib/ncx.h	/^ncmpix_putn_float_double(void **xpp, MPI_Offset nelems, const double *ip);$/;"	p	signature:(void **xpp, MPI_Offset nelems, const double *ip)
ncmpix_putn_float_float	src/lib/ncx.c	/^ncmpix_putn_float_float(void **xpp, MPI_Offset nelems, const float *tp)$/;"	f	signature:(void **xpp, MPI_Offset nelems, const float *tp)
ncmpix_putn_float_float	src/lib/ncx.c	/^ncmpix_putn_float_float(void **xpp, MPI_Offset nfloats, const float *ip)$/;"	f	signature:(void **xpp, MPI_Offset nfloats, const float *ip)
ncmpix_putn_float_float	src/lib/ncx.h	/^ncmpix_putn_float_float(void **xpp, MPI_Offset nelems, const float *ip);$/;"	p	signature:(void **xpp, MPI_Offset nelems, const float *ip)
ncmpix_putn_float_int	src/lib/ncx.c	/^ncmpix_putn_float_int(void **xpp, MPI_Offset nelems, const int *tp)$/;"	f	signature:(void **xpp, MPI_Offset nelems, const int *tp)
ncmpix_putn_float_int	src/lib/ncx.h	/^ncmpix_putn_float_int(void **xpp, MPI_Offset nelems, const int *ip);$/;"	p	signature:(void **xpp, MPI_Offset nelems, const int *ip)
ncmpix_putn_float_long	src/lib/ncx.c	/^ncmpix_putn_float_long(void **xpp, MPI_Offset nelems, const long *tp)$/;"	f	signature:(void **xpp, MPI_Offset nelems, const long *tp)
ncmpix_putn_float_long	src/lib/ncx.h	/^ncmpix_putn_float_long(void **xpp, MPI_Offset nelems, const long *ip);$/;"	p	signature:(void **xpp, MPI_Offset nelems, const long *ip)
ncmpix_putn_float_schar	src/lib/ncx.c	/^ncmpix_putn_float_schar(void **xpp, MPI_Offset nelems, const schar *tp)$/;"	f	signature:(void **xpp, MPI_Offset nelems, const schar *tp)
ncmpix_putn_float_schar	src/lib/ncx.h	/^ncmpix_putn_float_schar(void **xpp, MPI_Offset nelems, const schar *ip);$/;"	p	signature:(void **xpp, MPI_Offset nelems, const schar *ip)
ncmpix_putn_float_short	src/lib/ncx.c	/^ncmpix_putn_float_short(void **xpp, MPI_Offset nelems, const short *tp)$/;"	f	signature:(void **xpp, MPI_Offset nelems, const short *tp)
ncmpix_putn_float_short	src/lib/ncx.h	/^ncmpix_putn_float_short(void **xpp, MPI_Offset nelems, const short *ip);$/;"	p	signature:(void **xpp, MPI_Offset nelems, const short *ip)
ncmpix_putn_float_uchar	src/lib/ncx.c	/^ncmpix_putn_float_uchar(void **xpp, MPI_Offset nelems, const uchar *tp)$/;"	f	signature:(void **xpp, MPI_Offset nelems, const uchar *tp)
ncmpix_putn_float_uchar	src/lib/ncx.h	/^ncmpix_putn_float_uchar(void **xpp, MPI_Offset nelems, const uchar *ip);$/;"	p	signature:(void **xpp, MPI_Offset nelems, const uchar *ip)
ncmpix_putn_int_double	src/lib/ncx.c	/^ncmpix_putn_int_double(void **xpp, MPI_Offset nelems, const double *tp)$/;"	f	signature:(void **xpp, MPI_Offset nelems, const double *tp)
ncmpix_putn_int_double	src/lib/ncx.h	/^ncmpix_putn_int_double(void **xpp, MPI_Offset nelems, const double *ip);$/;"	p	signature:(void **xpp, MPI_Offset nelems, const double *ip)
ncmpix_putn_int_float	src/lib/ncx.c	/^ncmpix_putn_int_float(void **xpp, MPI_Offset nelems, const float *tp)$/;"	f	signature:(void **xpp, MPI_Offset nelems, const float *tp)
ncmpix_putn_int_float	src/lib/ncx.h	/^ncmpix_putn_int_float(void **xpp, MPI_Offset nelems, const float *ip);$/;"	p	signature:(void **xpp, MPI_Offset nelems, const float *ip)
ncmpix_putn_int_int	src/lib/ncx.c	/^ncmpix_putn_int_int(void **xpp, MPI_Offset nelems, const int *tp)$/;"	f	signature:(void **xpp, MPI_Offset nelems, const int *tp)
ncmpix_putn_int_int	src/lib/ncx.h	/^ncmpix_putn_int_int(void **xpp, MPI_Offset nelems, const int *ip);$/;"	p	signature:(void **xpp, MPI_Offset nelems, const int *ip)
ncmpix_putn_int_long	src/lib/ncx.c	/^ncmpix_putn_int_long(void **xpp, MPI_Offset nelems, const long *tp)$/;"	f	signature:(void **xpp, MPI_Offset nelems, const long *tp)
ncmpix_putn_int_long	src/lib/ncx.h	/^ncmpix_putn_int_long(void **xpp, MPI_Offset nelems, const long *ip);$/;"	p	signature:(void **xpp, MPI_Offset nelems, const long *ip)
ncmpix_putn_int_schar	src/lib/ncx.c	/^ncmpix_putn_int_schar(void **xpp, MPI_Offset nelems, const schar *tp)$/;"	f	signature:(void **xpp, MPI_Offset nelems, const schar *tp)
ncmpix_putn_int_schar	src/lib/ncx.h	/^ncmpix_putn_int_schar(void **xpp, MPI_Offset nelems, const schar *ip);$/;"	p	signature:(void **xpp, MPI_Offset nelems, const schar *ip)
ncmpix_putn_int_short	src/lib/ncx.c	/^ncmpix_putn_int_short(void **xpp, MPI_Offset nelems, const short *tp)$/;"	f	signature:(void **xpp, MPI_Offset nelems, const short *tp)
ncmpix_putn_int_short	src/lib/ncx.h	/^ncmpix_putn_int_short(void **xpp, MPI_Offset nelems, const short *ip);$/;"	p	signature:(void **xpp, MPI_Offset nelems, const short *ip)
ncmpix_putn_int_uchar	src/lib/ncx.c	/^ncmpix_putn_int_uchar(void **xpp, MPI_Offset nelems, const uchar *tp)$/;"	f	signature:(void **xpp, MPI_Offset nelems, const uchar *tp)
ncmpix_putn_int_uchar	src/lib/ncx.h	/^ncmpix_putn_int_uchar(void **xpp, MPI_Offset nelems, const uchar *ip);$/;"	p	signature:(void **xpp, MPI_Offset nelems, const uchar *ip)
ncmpix_putn_schar_double	src/lib/ncx.c	/^ncmpix_putn_schar_double(void **xpp, MPI_Offset nelems, const double *tp)$/;"	f	signature:(void **xpp, MPI_Offset nelems, const double *tp)
ncmpix_putn_schar_double	src/lib/ncx.h	/^ncmpix_putn_schar_double(void **xpp, MPI_Offset nelems, const double *ip);$/;"	p	signature:(void **xpp, MPI_Offset nelems, const double *ip)
ncmpix_putn_schar_float	src/lib/ncx.c	/^ncmpix_putn_schar_float(void **xpp, MPI_Offset nelems, const float *tp)$/;"	f	signature:(void **xpp, MPI_Offset nelems, const float *tp)
ncmpix_putn_schar_float	src/lib/ncx.h	/^ncmpix_putn_schar_float(void **xpp, MPI_Offset nelems, const float *ip);$/;"	p	signature:(void **xpp, MPI_Offset nelems, const float *ip)
ncmpix_putn_schar_int	src/lib/ncx.c	/^ncmpix_putn_schar_int(void **xpp, MPI_Offset nelems, const int *tp)$/;"	f	signature:(void **xpp, MPI_Offset nelems, const int *tp)
ncmpix_putn_schar_int	src/lib/ncx.h	/^ncmpix_putn_schar_int(void **xpp, MPI_Offset nelems, const int *ip);$/;"	p	signature:(void **xpp, MPI_Offset nelems, const int *ip)
ncmpix_putn_schar_long	src/lib/ncx.c	/^ncmpix_putn_schar_long(void **xpp, MPI_Offset nelems, const long *tp)$/;"	f	signature:(void **xpp, MPI_Offset nelems, const long *tp)
ncmpix_putn_schar_long	src/lib/ncx.h	/^ncmpix_putn_schar_long(void **xpp, MPI_Offset nelems, const long *ip);$/;"	p	signature:(void **xpp, MPI_Offset nelems, const long *ip)
ncmpix_putn_schar_schar	src/lib/ncx.c	/^ncmpix_putn_schar_schar(void **xpp, MPI_Offset nelems, const schar *tp)$/;"	f	signature:(void **xpp, MPI_Offset nelems, const schar *tp)
ncmpix_putn_schar_schar	src/lib/ncx.h	/^ncmpix_putn_schar_schar(void **xpp, MPI_Offset nelems, const schar *ip);$/;"	p	signature:(void **xpp, MPI_Offset nelems, const schar *ip)
ncmpix_putn_schar_short	src/lib/ncx.c	/^ncmpix_putn_schar_short(void **xpp, MPI_Offset nelems, const short *tp)$/;"	f	signature:(void **xpp, MPI_Offset nelems, const short *tp)
ncmpix_putn_schar_short	src/lib/ncx.h	/^ncmpix_putn_schar_short(void **xpp, MPI_Offset nelems, const short *ip);$/;"	p	signature:(void **xpp, MPI_Offset nelems, const short *ip)
ncmpix_putn_schar_uchar	src/lib/ncx.c	/^ncmpix_putn_schar_uchar(void **xpp, MPI_Offset nelems, const uchar *tp)$/;"	f	signature:(void **xpp, MPI_Offset nelems, const uchar *tp)
ncmpix_putn_schar_uchar	src/lib/ncx.h	/^ncmpix_putn_schar_uchar(void **xpp, MPI_Offset nelems, const uchar *ip);$/;"	p	signature:(void **xpp, MPI_Offset nelems, const uchar *ip)
ncmpix_putn_short_double	src/lib/ncx.c	/^ncmpix_putn_short_double(void **xpp, MPI_Offset nelems, const double *tp)$/;"	f	signature:(void **xpp, MPI_Offset nelems, const double *tp)
ncmpix_putn_short_double	src/lib/ncx.h	/^ncmpix_putn_short_double(void **xpp, MPI_Offset nelems, const double *ip);$/;"	p	signature:(void **xpp, MPI_Offset nelems, const double *ip)
ncmpix_putn_short_float	src/lib/ncx.c	/^ncmpix_putn_short_float(void **xpp, MPI_Offset nelems, const float *tp)$/;"	f	signature:(void **xpp, MPI_Offset nelems, const float *tp)
ncmpix_putn_short_float	src/lib/ncx.h	/^ncmpix_putn_short_float(void **xpp, MPI_Offset nelems, const float *ip);$/;"	p	signature:(void **xpp, MPI_Offset nelems, const float *ip)
ncmpix_putn_short_int	src/lib/ncx.c	/^ncmpix_putn_short_int(void **xpp, MPI_Offset nelems, const int *tp)$/;"	f	signature:(void **xpp, MPI_Offset nelems, const int *tp)
ncmpix_putn_short_int	src/lib/ncx.h	/^ncmpix_putn_short_int(void **xpp, MPI_Offset nelems, const int *ip);$/;"	p	signature:(void **xpp, MPI_Offset nelems, const int *ip)
ncmpix_putn_short_long	src/lib/ncx.c	/^ncmpix_putn_short_long(void **xpp, MPI_Offset nelems, const long *tp)$/;"	f	signature:(void **xpp, MPI_Offset nelems, const long *tp)
ncmpix_putn_short_long	src/lib/ncx.h	/^ncmpix_putn_short_long(void **xpp, MPI_Offset nelems, const long *ip);$/;"	p	signature:(void **xpp, MPI_Offset nelems, const long *ip)
ncmpix_putn_short_schar	src/lib/ncx.c	/^ncmpix_putn_short_schar(void **xpp, MPI_Offset nelems, const schar *tp)$/;"	f	signature:(void **xpp, MPI_Offset nelems, const schar *tp)
ncmpix_putn_short_schar	src/lib/ncx.h	/^ncmpix_putn_short_schar(void **xpp, MPI_Offset nelems, const schar *ip);$/;"	p	signature:(void **xpp, MPI_Offset nelems, const schar *ip)
ncmpix_putn_short_short	src/lib/ncx.c	/^ncmpix_putn_short_short(void **xpp, MPI_Offset nelems, const short *tp)$/;"	f	signature:(void **xpp, MPI_Offset nelems, const short *tp)
ncmpix_putn_short_short	src/lib/ncx.h	/^ncmpix_putn_short_short(void **xpp, MPI_Offset nelems, const short *ip);$/;"	p	signature:(void **xpp, MPI_Offset nelems, const short *ip)
ncmpix_putn_short_uchar	src/lib/ncx.c	/^ncmpix_putn_short_uchar(void **xpp, MPI_Offset nelems, const uchar *tp)$/;"	f	signature:(void **xpp, MPI_Offset nelems, const uchar *tp)
ncmpix_putn_short_uchar	src/lib/ncx.h	/^ncmpix_putn_short_uchar(void **xpp, MPI_Offset nelems, const uchar *ip);$/;"	p	signature:(void **xpp, MPI_Offset nelems, const uchar *ip)
ncmpix_putn_text	src/lib/ncx.c	/^ncmpix_putn_text(void **xpp, MPI_Offset nelems, const char *tp)$/;"	f	signature:(void **xpp, MPI_Offset nelems, const char *tp)
ncmpix_putn_text	src/lib/ncx.h	/^ncmpix_putn_text(void **xpp, MPI_Offset nchars, const char *cp);$/;"	p	signature:(void **xpp, MPI_Offset nchars, const char *cp)
ncmpix_putn_void	src/lib/ncx.c	/^ncmpix_putn_void(void **xpp, MPI_Offset nelems, const void *tp)$/;"	f	signature:(void **xpp, MPI_Offset nelems, const void *tp)
ncmpix_putn_void	src/lib/ncx.h	/^ncmpix_putn_void(void **xpp, MPI_Offset nchars, const void *vp);$/;"	p	signature:(void **xpp, MPI_Offset nchars, const void *vp)
ncstype	src/utils/ncgen/genlib.c	/^ncstype($/;"	f	signature:( ncmpi_type type)
ncstype	src/utils/ncgen/genlib.h	/^extern const char* ncstype ( nc_type  type );$/;"	p	signature:( nc_type type )
nct_itype	test/nc_test/tests.h	/^} nct_itype;$/;"	t	typeref:enum:__anon2
nctype	src/utils/ncgen/genlib.c	/^nctype($/;"	f	signature:( ncmpi_type type)
nctype	src/utils/ncgen/genlib.h	/^extern const char* nctype ( nc_type  type );$/;"	p	signature:( nc_type type )
nctypesize	src/utils/ncgen/genlib.c	/^nctypesize($/;"	f	signature:( ncmpi_type type)
nctypesize	src/utils/ncgen/genlib.h	/^extern size_t nctypesize( nc_type type );$/;"	p	signature:( nc_type type )
ncvar	src/utils/ncdump/ncdump.h	/^struct ncvar {			\/* variable *\/$/;"	s
ncvar::dims	src/utils/ncdump/ncdump.h	/^    int dims[NC_MAX_VAR_DIMS];$/;"	m	struct:ncvar	access:public
ncvar::fillval	src/utils/ncdump/ncdump.h	/^    double fillval;$/;"	m	struct:ncvar	access:public
ncvar::has_fillval	src/utils/ncdump/ncdump.h	/^    boolean has_fillval;$/;"	m	struct:ncvar	access:public
ncvar::name	src/utils/ncdump/ncdump.h	/^    char name[NC_MAX_NAME];$/;"	m	struct:ncvar	access:public
ncvar::natts	src/utils/ncdump/ncdump.h	/^    int natts;$/;"	m	struct:ncvar	access:public
ncvar::ndims	src/utils/ncdump/ncdump.h	/^    int ndims;$/;"	m	struct:ncvar	access:public
ncvar::type	src/utils/ncdump/ncdump.h	/^    nc_type type;$/;"	m	struct:ncvar	access:public
ncx_len_NC	src/lib/nc.h	/^ncx_len_NC(const NC *ncp, MPI_Offset sizeof_off_t);$/;"	p	signature:(const NC *ncp, MPI_Offset sizeof_off_t)
ncx_put_NC	src/lib/nc.h	/^ncx_put_NC(const NC *ncp, void **xpp, MPI_Offset offset, MPI_Offset extent);$/;"	p	signature:(const NC *ncp, void **xpp, MPI_Offset offset, MPI_Offset extent)
ncx_szof	src/lib/var.c	/^ncx_szof(nc_type type)$/;"	f	file:	signature:(nc_type type)
ncx_szof	src/lib/var.c	/^static MPI_Offset ncx_szof(nc_type type);$/;"	p	file:	signature:(nc_type type)
ndims	src/lib/nc.h	/^	size_t ndims;	\/* assoc->count *\/$/;"	m	struct:__anon10	access:public
ndims	src/lib/nc.h	/^    int            ndims;$/;"	m	struct:NC_req	access:public
ndims	src/utils/ncdump/ncdump.h	/^    int ndims;$/;"	m	struct:ncvar	access:public
ndims	src/utils/ncgen/init.c	/^int ndims;			\/* number of dimensions declared for netcdf *\/$/;"	v
ndims	src/utils/ncgen/ncgen.h	/^    int ndims;$/;"	m	struct:vars	access:public
ndims	src/utils/ncgen/ncgen.h	/^extern int ndims;		\/* number of dimensions declared for netcdf *\/$/;"	x
ndims	test/test_dtype/test_darray.c	/^int ndims = TEST_DIMS;$/;"	v
ndims	test/test_dtype/test_nonblocking.c	/^int ndims = TEST_DIMS;$/;"	v
ndims	test/test_dtype/test_subarray.c	/^int ndims = TEST_DIMS;$/;"	v
nelems	src/lib/nc.h	/^	MPI_Offset nelems;		\/* number of defined variables *\/$/;"	m	struct:NC_dimarray	access:public
nelems	src/lib/nc.h	/^	MPI_Offset nelems;	\/* number of defined variables *\/$/;"	m	struct:NC_attrarray	access:public
nelems	src/lib/nc.h	/^	MPI_Offset nelems;	\/* number of defined variables *\/$/;"	m	struct:NC_vararray	access:public
nelems	src/lib/nc.h	/^	MPI_Offset nelems;	\/* number of defined variables *\/$/;"	m	struct:__anon9	access:public
nelems	src/lib/nc.h	/^    MPI_Offset     nelems;$/;"	m	struct:NC_req	access:public
netcdf_flag	src/utils/ncgen/genlib.c	/^extern int netcdf_flag;$/;"	x
netcdf_flag	src/utils/ncgen/init.c	/^extern int netcdf_flag;$/;"	x
netcdf_flag	src/utils/ncgen/load.c	/^extern int netcdf_flag;$/;"	x
netcdf_flag	src/utils/ncgen/main.c	/^int netcdf_flag;$/;"	v
netcdf_name	src/utils/ncgen/genlib.c	/^extern char *netcdf_name; \/* output netCDF filename, if on command line. *\/$/;"	x
netcdf_name	src/utils/ncgen/main.c	/^char *netcdf_name = NULL;	\/* name of output netCDF file to write *\/$/;"	v
netcdfname	src/utils/ncgen/ncgentab.c	/^static char *netcdfname;	\/* to construct netcdf file name *\/$/;"	v	file:
newvlist	src/utils/ncdump/dumplib.c	/^newvlist(void)$/;"	f	signature:(void)
newvlist	src/utils/ncdump/dumplib.h	/^extern vnode*	newvlist ( void );$/;"	p	signature:( void )
newvnode	src/utils/ncdump/dumplib.c	/^newvnode(void)$/;"	f	file:	signature:(void)
newvnode	src/utils/ncdump/dumplib.c	/^static vnode* newvnode(void);$/;"	p	file:	signature:(void)
next	src/lib/nc.h	/^	struct NC *next;$/;"	m	struct:NC	typeref:struct:NC::NC	access:public
next	src/lib/nc.h	/^    struct NC_req *next;$/;"	m	struct:NC_req	typeref:struct:NC_req::NC_req	access:public
next	src/utils/ncdump/dumplib.h	/^    struct vnode* next;$/;"	m	struct:vnode	typeref:struct:vnode::vnode	access:public
next	src/utils/ncgen/ncgentab.c	/^	struct Symbol   *next;$/;"	m	struct:Symbol	typeref:struct:Symbol::Symbol	file:	access:public
nfails	test/nc_test/error.c	/^extern int  nfails;             \/* number of failures in specific test *\/$/;"	x
nfails	test/nc_test/nc_test.c	/^int  nfails;		\/* number of failures in specific test *\/$/;"	v
nfails	test/nc_test/tests.h	/^extern int  nfails;		\/* number of failures in specific test *\/$/;"	x
nfftype	src/utils/ncgen/genlib.c	/^nfftype($/;"	f	signature:( ncmpi_type type)
nfftype	src/utils/ncgen/genlib.h	/^extern const char* nfftype ( nc_type  type );$/;"	p	signature:( nc_type type )
nfmpi_abort_	src/libf/abortf.c	/^FORTRAN_API int FORT_CALL nfmpi_abort_ ( int *v1 ){$/;"	f	signature:( int *v1 )
nfmpi_abort_	src/libf/abortf.c	13;"	d	file:
nfmpi_abort_	src/libf/abortf.c	15;"	d	file:
nfmpi_abort_	src/libf/abortf.c	17;"	d	file:
nfmpi_abort_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_abort_ ( int *v1 );$/;"	p	signature:( int *v1 )
nfmpi_begin_indep_data_	src/libf/begin_indep_dataf.c	/^FORTRAN_API int FORT_CALL nfmpi_begin_indep_data_ ( int *v1 ){$/;"	f	signature:( int *v1 )
nfmpi_begin_indep_data_	src/libf/begin_indep_dataf.c	13;"	d	file:
nfmpi_begin_indep_data_	src/libf/begin_indep_dataf.c	15;"	d	file:
nfmpi_begin_indep_data_	src/libf/begin_indep_dataf.c	17;"	d	file:
nfmpi_begin_indep_data_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_begin_indep_data_ ( int *v1 );$/;"	p	signature:( int *v1 )
nfmpi_cancel_	src/libf/cancelf.c	/^FORTRAN_API int FORT_CALL nfmpi_cancel_ ( int *v1, int *v2, MPI_Fint *v3, MPI_Fint *v4 ){$/;"	f	signature:( int *v1, int *v2, MPI_Fint *v3, MPI_Fint *v4 )
nfmpi_cancel_	src/libf/cancelf.c	13;"	d	file:
nfmpi_cancel_	src/libf/cancelf.c	15;"	d	file:
nfmpi_cancel_	src/libf/cancelf.c	17;"	d	file:
nfmpi_cancel_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_cancel_ ( int *v1, int *v2, MPI_Fint *v3, MPI_Fint *v4 );$/;"	p	signature:( int *v1, int *v2, MPI_Fint *v3, MPI_Fint *v4 )
nfmpi_close_	src/libf/closef.c	/^FORTRAN_API int FORT_CALL nfmpi_close_ ( int *v1 ){$/;"	f	signature:( int *v1 )
nfmpi_close_	src/libf/closef.c	13;"	d	file:
nfmpi_close_	src/libf/closef.c	15;"	d	file:
nfmpi_close_	src/libf/closef.c	17;"	d	file:
nfmpi_close_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_close_ ( int *v1 );$/;"	p	signature:( int *v1 )
nfmpi_copy_att_	src/libf/copy_attf.c	/^FORTRAN_API int FORT_CALL nfmpi_copy_att_ ( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), int *v4, int *v5 FORT_END_LEN(d3) ){$/;"	f	signature:( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), int *v4, int *v5 FORT_END_LEN(d3) )
nfmpi_copy_att_	src/libf/copy_attf.c	13;"	d	file:
nfmpi_copy_att_	src/libf/copy_attf.c	15;"	d	file:
nfmpi_copy_att_	src/libf/copy_attf.c	17;"	d	file:
nfmpi_copy_att_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_copy_att_ ( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), int *v4, int *v5 FORT_END_LEN(d3) );$/;"	p	signature:( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), int *v4, int *v5 FORT_END_LEN(d3) )
nfmpi_create_	src/libf/createf.c	/^FORTRAN_API int FORT_CALL nfmpi_create_ ( MPI_Fint *v1, char *v2 FORT_MIXED_LEN(d2), int *v3, MPI_Fint *v4, MPI_Fint *v5 FORT_END_LEN(d2) ){$/;"	f	signature:( MPI_Fint *v1, char *v2 FORT_MIXED_LEN(d2), int *v3, MPI_Fint *v4, MPI_Fint *v5 FORT_END_LEN(d2) )
nfmpi_create_	src/libf/createf.c	13;"	d	file:
nfmpi_create_	src/libf/createf.c	15;"	d	file:
nfmpi_create_	src/libf/createf.c	17;"	d	file:
nfmpi_create_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_create_ ( MPI_Fint *v1, char *v2 FORT_MIXED_LEN(d2), int *v3, MPI_Fint *v4, MPI_Fint *v5 FORT_END_LEN(d2) );$/;"	p	signature:( MPI_Fint *v1, char *v2 FORT_MIXED_LEN(d2), int *v3, MPI_Fint *v4, MPI_Fint *v5 FORT_END_LEN(d2) )
nfmpi_def_dim_	src/libf/def_dimf.c	/^FORTRAN_API int FORT_CALL nfmpi_def_dim_ ( int *v1, char *v2 FORT_MIXED_LEN(d2), MPI_Offset *v3, MPI_Fint *v4 FORT_END_LEN(d2) ){$/;"	f	signature:( int *v1, char *v2 FORT_MIXED_LEN(d2), MPI_Offset *v3, MPI_Fint *v4 FORT_END_LEN(d2) )
nfmpi_def_dim_	src/libf/def_dimf.c	13;"	d	file:
nfmpi_def_dim_	src/libf/def_dimf.c	15;"	d	file:
nfmpi_def_dim_	src/libf/def_dimf.c	17;"	d	file:
nfmpi_def_dim_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_def_dim_ ( int *v1, char *v2 FORT_MIXED_LEN(d2), MPI_Offset *v3, MPI_Fint *v4 FORT_END_LEN(d2) );$/;"	p	signature:( int *v1, char *v2 FORT_MIXED_LEN(d2), MPI_Offset *v3, MPI_Fint *v4 FORT_END_LEN(d2) )
nfmpi_def_var_	src/libf/def_varf.c	/^FORTRAN_API int FORT_CALL nfmpi_def_var_ ( int *v1, char *v2 FORT_MIXED_LEN(d2), int *v3, int *v4, MPI_Fint *v5, MPI_Fint *v6 FORT_END_LEN(d2) ){$/;"	f	signature:( int *v1, char *v2 FORT_MIXED_LEN(d2), int *v3, int *v4, MPI_Fint *v5, MPI_Fint *v6 FORT_END_LEN(d2) )
nfmpi_def_var_	src/libf/def_varf.c	13;"	d	file:
nfmpi_def_var_	src/libf/def_varf.c	15;"	d	file:
nfmpi_def_var_	src/libf/def_varf.c	17;"	d	file:
nfmpi_def_var_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_def_var_ ( int *v1, char *v2 FORT_MIXED_LEN(d2), int *v3, int *v4, MPI_Fint *v5, MPI_Fint *v6 FORT_END_LEN(d2) );$/;"	p	signature:( int *v1, char *v2 FORT_MIXED_LEN(d2), int *v3, int *v4, MPI_Fint *v5, MPI_Fint *v6 FORT_END_LEN(d2) )
nfmpi_del_att_	src/libf/del_attf.c	/^FORTRAN_API int FORT_CALL nfmpi_del_att_ ( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3) FORT_END_LEN(d3) ){$/;"	f	signature:( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3) FORT_END_LEN(d3) )
nfmpi_del_att_	src/libf/del_attf.c	13;"	d	file:
nfmpi_del_att_	src/libf/del_attf.c	15;"	d	file:
nfmpi_del_att_	src/libf/del_attf.c	17;"	d	file:
nfmpi_del_att_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_del_att_ ( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3) FORT_END_LEN(d3) );$/;"	p	signature:( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3) FORT_END_LEN(d3) )
nfmpi_delete_	src/libf/deletef.c	/^FORTRAN_API int FORT_CALL nfmpi_delete_ ( char *v1 FORT_MIXED_LEN(d1), MPI_Fint *v2 FORT_END_LEN(d1) ){$/;"	f	signature:( char *v1 FORT_MIXED_LEN(d1), MPI_Fint *v2 FORT_END_LEN(d1) )
nfmpi_delete_	src/libf/deletef.c	13;"	d	file:
nfmpi_delete_	src/libf/deletef.c	15;"	d	file:
nfmpi_delete_	src/libf/deletef.c	17;"	d	file:
nfmpi_delete_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_delete_ ( char *v1 FORT_MIXED_LEN(d1), MPI_Fint *v2 FORT_END_LEN(d1) );$/;"	p	signature:( char *v1 FORT_MIXED_LEN(d1), MPI_Fint *v2 FORT_END_LEN(d1) )
nfmpi_end_indep_data_	src/libf/end_indep_dataf.c	/^FORTRAN_API int FORT_CALL nfmpi_end_indep_data_ ( int *v1 ){$/;"	f	signature:( int *v1 )
nfmpi_end_indep_data_	src/libf/end_indep_dataf.c	13;"	d	file:
nfmpi_end_indep_data_	src/libf/end_indep_dataf.c	15;"	d	file:
nfmpi_end_indep_data_	src/libf/end_indep_dataf.c	17;"	d	file:
nfmpi_end_indep_data_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_end_indep_data_ ( int *v1 );$/;"	p	signature:( int *v1 )
nfmpi_enddef_	src/libf/enddeff.c	/^FORTRAN_API int FORT_CALL nfmpi_enddef_ ( int *v1 ){$/;"	f	signature:( int *v1 )
nfmpi_enddef_	src/libf/enddeff.c	13;"	d	file:
nfmpi_enddef_	src/libf/enddeff.c	15;"	d	file:
nfmpi_enddef_	src/libf/enddeff.c	17;"	d	file:
nfmpi_enddef_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_enddef_ ( int *v1 );$/;"	p	signature:( int *v1 )
nfmpi_get_att_double_	src/libf/get_att_doublef.c	/^FORTRAN_API int FORT_CALL nfmpi_get_att_double_ ( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), double*v4 FORT_END_LEN(d3) ){$/;"	f	signature:( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), double*v4 FORT_END_LEN(d3) )
nfmpi_get_att_double_	src/libf/get_att_doublef.c	13;"	d	file:
nfmpi_get_att_double_	src/libf/get_att_doublef.c	15;"	d	file:
nfmpi_get_att_double_	src/libf/get_att_doublef.c	17;"	d	file:
nfmpi_get_att_double_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_att_double_ ( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), double*v4 FORT_END_LEN(d3) );$/;"	p	signature:( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), double*v4 FORT_END_LEN(d3) )
nfmpi_get_att_int1_	src/libf/get_att_int1f.c	/^FORTRAN_API int FORT_CALL nfmpi_get_att_int1_ ( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), signed char * v4 FORT_END_LEN(d3) ){$/;"	f	signature:( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), signed char * v4 FORT_END_LEN(d3) )
nfmpi_get_att_int1_	src/libf/get_att_int1f.c	13;"	d	file:
nfmpi_get_att_int1_	src/libf/get_att_int1f.c	15;"	d	file:
nfmpi_get_att_int1_	src/libf/get_att_int1f.c	17;"	d	file:
nfmpi_get_att_int1_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_att_int1_ ( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), signed char * v4 FORT_END_LEN(d3) );$/;"	p	signature:( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), signed char * v4 FORT_END_LEN(d3) )
nfmpi_get_att_int2_	src/libf/get_att_int2f.c	/^FORTRAN_API int FORT_CALL nfmpi_get_att_int2_ ( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), short*v4 FORT_END_LEN(d3) ){$/;"	f	signature:( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), short*v4 FORT_END_LEN(d3) )
nfmpi_get_att_int2_	src/libf/get_att_int2f.c	13;"	d	file:
nfmpi_get_att_int2_	src/libf/get_att_int2f.c	15;"	d	file:
nfmpi_get_att_int2_	src/libf/get_att_int2f.c	17;"	d	file:
nfmpi_get_att_int2_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_att_int2_ ( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), short*v4 FORT_END_LEN(d3) );$/;"	p	signature:( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), short*v4 FORT_END_LEN(d3) )
nfmpi_get_att_int_	src/libf/get_att_intf.c	/^FORTRAN_API int FORT_CALL nfmpi_get_att_int_ ( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), MPI_Fint *v4 FORT_END_LEN(d3) ){$/;"	f	signature:( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), MPI_Fint *v4 FORT_END_LEN(d3) )
nfmpi_get_att_int_	src/libf/get_att_intf.c	13;"	d	file:
nfmpi_get_att_int_	src/libf/get_att_intf.c	15;"	d	file:
nfmpi_get_att_int_	src/libf/get_att_intf.c	17;"	d	file:
nfmpi_get_att_int_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_att_int_ ( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), MPI_Fint *v4 FORT_END_LEN(d3) );$/;"	p	signature:( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), MPI_Fint *v4 FORT_END_LEN(d3) )
nfmpi_get_att_real_	src/libf/get_att_realf.c	/^FORTRAN_API int FORT_CALL nfmpi_get_att_real_ ( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), float*v4 FORT_END_LEN(d3) ){$/;"	f	signature:( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), float*v4 FORT_END_LEN(d3) )
nfmpi_get_att_real_	src/libf/get_att_realf.c	13;"	d	file:
nfmpi_get_att_real_	src/libf/get_att_realf.c	15;"	d	file:
nfmpi_get_att_real_	src/libf/get_att_realf.c	17;"	d	file:
nfmpi_get_att_real_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_att_real_ ( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), float*v4 FORT_END_LEN(d3) );$/;"	p	signature:( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), float*v4 FORT_END_LEN(d3) )
nfmpi_get_att_text_	src/libf/get_att_textf.c	/^FORTRAN_API int FORT_CALL nfmpi_get_att_text_ ( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), char *v4 FORT_MIXED_LEN(d4) FORT_END_LEN(d3) FORT_END_LEN(d4) ){$/;"	f	signature:( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), char *v4 FORT_MIXED_LEN(d4) FORT_END_LEN(d3) FORT_END_LEN(d4) )
nfmpi_get_att_text_	src/libf/get_att_textf.c	13;"	d	file:
nfmpi_get_att_text_	src/libf/get_att_textf.c	15;"	d	file:
nfmpi_get_att_text_	src/libf/get_att_textf.c	17;"	d	file:
nfmpi_get_att_text_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_att_text_ ( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), char *v4 FORT_MIXED_LEN(d4) FORT_END_LEN(d3) FORT_END_LEN(d4) );$/;"	p	signature:( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), char *v4 FORT_MIXED_LEN(d4) FORT_END_LEN(d3) FORT_END_LEN(d4) )
nfmpi_get_file_info_	src/libf/get_file_infof.c	/^FORTRAN_API int FORT_CALL nfmpi_get_file_info_ ( MPI_Fint *v1, MPI_Fint *v2 ){$/;"	f	signature:( MPI_Fint *v1, MPI_Fint *v2 )
nfmpi_get_file_info_	src/libf/get_file_infof.c	13;"	d	file:
nfmpi_get_file_info_	src/libf/get_file_infof.c	15;"	d	file:
nfmpi_get_file_info_	src/libf/get_file_infof.c	17;"	d	file:
nfmpi_get_file_info_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_file_info_ ( int *v1, MPI_Fint *v2 );$/;"	p	signature:( int *v1, MPI_Fint *v2 )
nfmpi_get_var1_	src/libf/get_var1f.c	/^FORTRAN_API int FORT_CALL nfmpi_get_var1_ ( int *v1, int *v2, MPI_Offset v3[], void*v4, MPI_Offset *v5, MPI_Fint *v6 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], void*v4, MPI_Offset *v5, MPI_Fint *v6 )
nfmpi_get_var1_	src/libf/get_var1f.c	13;"	d	file:
nfmpi_get_var1_	src/libf/get_var1f.c	15;"	d	file:
nfmpi_get_var1_	src/libf/get_var1f.c	17;"	d	file:
nfmpi_get_var1_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_var1_ ( int *v1, int *v2, MPI_Offset v3[], void*v4, MPI_Offset *v5, MPI_Fint *v6 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], void*v4, MPI_Offset *v5, MPI_Fint *v6 )
nfmpi_get_var1_double_	src/libf/get_var1_doublef.c	/^FORTRAN_API int FORT_CALL nfmpi_get_var1_double_ ( int *v1, int *v2, MPI_Offset v3[], double*v4 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], double*v4 )
nfmpi_get_var1_double_	src/libf/get_var1_doublef.c	13;"	d	file:
nfmpi_get_var1_double_	src/libf/get_var1_doublef.c	15;"	d	file:
nfmpi_get_var1_double_	src/libf/get_var1_doublef.c	17;"	d	file:
nfmpi_get_var1_double_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_var1_double_ ( int *v1, int *v2, MPI_Offset v3[], double*v4 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], double*v4 )
nfmpi_get_var1_int1_	src/libf/get_var1_int1f.c	/^FORTRAN_API int FORT_CALL nfmpi_get_var1_int1_ ( int *v1, int *v2, MPI_Offset v3[], signed char * v4 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], signed char * v4 )
nfmpi_get_var1_int1_	src/libf/get_var1_int1f.c	13;"	d	file:
nfmpi_get_var1_int1_	src/libf/get_var1_int1f.c	15;"	d	file:
nfmpi_get_var1_int1_	src/libf/get_var1_int1f.c	17;"	d	file:
nfmpi_get_var1_int1_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_var1_int1_ ( int *v1, int *v2, MPI_Offset v3[], signed char * v4 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], signed char * v4 )
nfmpi_get_var1_int2_	src/libf/get_var1_int2f.c	/^FORTRAN_API int FORT_CALL nfmpi_get_var1_int2_ ( int *v1, int *v2, MPI_Offset v3[], short*v4 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], short*v4 )
nfmpi_get_var1_int2_	src/libf/get_var1_int2f.c	13;"	d	file:
nfmpi_get_var1_int2_	src/libf/get_var1_int2f.c	15;"	d	file:
nfmpi_get_var1_int2_	src/libf/get_var1_int2f.c	17;"	d	file:
nfmpi_get_var1_int2_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_var1_int2_ ( int *v1, int *v2, MPI_Offset v3[], short*v4 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], short*v4 )
nfmpi_get_var1_int_	src/libf/get_var1_intf.c	/^FORTRAN_API int FORT_CALL nfmpi_get_var1_int_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Fint *v4 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Fint *v4 )
nfmpi_get_var1_int_	src/libf/get_var1_intf.c	13;"	d	file:
nfmpi_get_var1_int_	src/libf/get_var1_intf.c	15;"	d	file:
nfmpi_get_var1_int_	src/libf/get_var1_intf.c	17;"	d	file:
nfmpi_get_var1_int_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_var1_int_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Fint *v4 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Fint *v4 )
nfmpi_get_var1_real_	src/libf/get_var1_realf.c	/^FORTRAN_API int FORT_CALL nfmpi_get_var1_real_ ( int *v1, int *v2, MPI_Offset v3[], float*v4 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], float*v4 )
nfmpi_get_var1_real_	src/libf/get_var1_realf.c	13;"	d	file:
nfmpi_get_var1_real_	src/libf/get_var1_realf.c	15;"	d	file:
nfmpi_get_var1_real_	src/libf/get_var1_realf.c	17;"	d	file:
nfmpi_get_var1_real_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_var1_real_ ( int *v1, int *v2, MPI_Offset v3[], float*v4 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], float*v4 )
nfmpi_get_var1_text_	src/libf/get_var1_textf.c	/^FORTRAN_API int FORT_CALL nfmpi_get_var1_text_ ( int *v1, int *v2, MPI_Offset v3[], char *v4 FORT_MIXED_LEN(d4) FORT_END_LEN(d4) ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], char *v4 FORT_MIXED_LEN(d4) FORT_END_LEN(d4) )
nfmpi_get_var1_text_	src/libf/get_var1_textf.c	13;"	d	file:
nfmpi_get_var1_text_	src/libf/get_var1_textf.c	15;"	d	file:
nfmpi_get_var1_text_	src/libf/get_var1_textf.c	17;"	d	file:
nfmpi_get_var1_text_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_var1_text_ ( int *v1, int *v2, MPI_Offset v3[], char *v4 FORT_MIXED_LEN(d4) FORT_END_LEN(d4) );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], char *v4 FORT_MIXED_LEN(d4) FORT_END_LEN(d4) )
nfmpi_get_var_	src/libf/get_varf.c	/^FORTRAN_API int FORT_CALL nfmpi_get_var_ ( int *v1, int *v2, void*v3, MPI_Offset *v4, MPI_Fint *v5 ){$/;"	f	signature:( int *v1, int *v2, void*v3, MPI_Offset *v4, MPI_Fint *v5 )
nfmpi_get_var_	src/libf/get_varf.c	13;"	d	file:
nfmpi_get_var_	src/libf/get_varf.c	15;"	d	file:
nfmpi_get_var_	src/libf/get_varf.c	17;"	d	file:
nfmpi_get_var_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_var_ ( int *v1, int *v2, void*v3, MPI_Offset *v4, MPI_Fint *v5 );$/;"	p	signature:( int *v1, int *v2, void*v3, MPI_Offset *v4, MPI_Fint *v5 )
nfmpi_get_var_all_	src/libf/get_var_allf.c	/^FORTRAN_API int FORT_CALL nfmpi_get_var_all_ ( int *v1, int *v2, void*v3, MPI_Offset *v4, MPI_Fint *v5 ){$/;"	f	signature:( int *v1, int *v2, void*v3, MPI_Offset *v4, MPI_Fint *v5 )
nfmpi_get_var_all_	src/libf/get_var_allf.c	13;"	d	file:
nfmpi_get_var_all_	src/libf/get_var_allf.c	15;"	d	file:
nfmpi_get_var_all_	src/libf/get_var_allf.c	17;"	d	file:
nfmpi_get_var_all_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_var_all_ ( int *v1, int *v2, void*v3, MPI_Offset *v4, MPI_Fint *v5 );$/;"	p	signature:( int *v1, int *v2, void*v3, MPI_Offset *v4, MPI_Fint *v5 )
nfmpi_get_var_double_	src/libf/get_var_doublef.c	/^FORTRAN_API int FORT_CALL nfmpi_get_var_double_ ( int *v1, int *v2, double*v3 ){$/;"	f	signature:( int *v1, int *v2, double*v3 )
nfmpi_get_var_double_	src/libf/get_var_doublef.c	13;"	d	file:
nfmpi_get_var_double_	src/libf/get_var_doublef.c	15;"	d	file:
nfmpi_get_var_double_	src/libf/get_var_doublef.c	17;"	d	file:
nfmpi_get_var_double_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_var_double_ ( int *v1, int *v2, double*v3 );$/;"	p	signature:( int *v1, int *v2, double*v3 )
nfmpi_get_var_double_all_	src/libf/get_var_double_allf.c	/^FORTRAN_API int FORT_CALL nfmpi_get_var_double_all_ ( int *v1, int *v2, double*v3 ){$/;"	f	signature:( int *v1, int *v2, double*v3 )
nfmpi_get_var_double_all_	src/libf/get_var_double_allf.c	13;"	d	file:
nfmpi_get_var_double_all_	src/libf/get_var_double_allf.c	15;"	d	file:
nfmpi_get_var_double_all_	src/libf/get_var_double_allf.c	17;"	d	file:
nfmpi_get_var_double_all_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_var_double_all_ ( int *v1, int *v2, double*v3 );$/;"	p	signature:( int *v1, int *v2, double*v3 )
nfmpi_get_var_int1_	src/libf/get_var_int1f.c	/^FORTRAN_API int FORT_CALL nfmpi_get_var_int1_ ( int *v1, int *v2, signed char * v3 ){$/;"	f	signature:( int *v1, int *v2, signed char * v3 )
nfmpi_get_var_int1_	src/libf/get_var_int1f.c	13;"	d	file:
nfmpi_get_var_int1_	src/libf/get_var_int1f.c	15;"	d	file:
nfmpi_get_var_int1_	src/libf/get_var_int1f.c	17;"	d	file:
nfmpi_get_var_int1_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_var_int1_ ( int *v1, int *v2, signed char * v3 );$/;"	p	signature:( int *v1, int *v2, signed char * v3 )
nfmpi_get_var_int1_all_	src/libf/get_var_int1_allf.c	/^FORTRAN_API int FORT_CALL nfmpi_get_var_int1_all_ ( int *v1, int *v2, signed char * v3 ){$/;"	f	signature:( int *v1, int *v2, signed char * v3 )
nfmpi_get_var_int1_all_	src/libf/get_var_int1_allf.c	13;"	d	file:
nfmpi_get_var_int1_all_	src/libf/get_var_int1_allf.c	15;"	d	file:
nfmpi_get_var_int1_all_	src/libf/get_var_int1_allf.c	17;"	d	file:
nfmpi_get_var_int1_all_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_var_int1_all_ ( int *v1, int *v2, signed char * v3 );$/;"	p	signature:( int *v1, int *v2, signed char * v3 )
nfmpi_get_var_int2_	src/libf/get_var_int2f.c	/^FORTRAN_API int FORT_CALL nfmpi_get_var_int2_ ( int *v1, int *v2, short*v3 ){$/;"	f	signature:( int *v1, int *v2, short*v3 )
nfmpi_get_var_int2_	src/libf/get_var_int2f.c	13;"	d	file:
nfmpi_get_var_int2_	src/libf/get_var_int2f.c	15;"	d	file:
nfmpi_get_var_int2_	src/libf/get_var_int2f.c	17;"	d	file:
nfmpi_get_var_int2_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_var_int2_ ( int *v1, int *v2, short*v3 );$/;"	p	signature:( int *v1, int *v2, short*v3 )
nfmpi_get_var_int2_all_	src/libf/get_var_int2_allf.c	/^FORTRAN_API int FORT_CALL nfmpi_get_var_int2_all_ ( int *v1, int *v2, short*v3 ){$/;"	f	signature:( int *v1, int *v2, short*v3 )
nfmpi_get_var_int2_all_	src/libf/get_var_int2_allf.c	13;"	d	file:
nfmpi_get_var_int2_all_	src/libf/get_var_int2_allf.c	15;"	d	file:
nfmpi_get_var_int2_all_	src/libf/get_var_int2_allf.c	17;"	d	file:
nfmpi_get_var_int2_all_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_var_int2_all_ ( int *v1, int *v2, short*v3 );$/;"	p	signature:( int *v1, int *v2, short*v3 )
nfmpi_get_var_int_	src/libf/get_var_intf.c	/^FORTRAN_API int FORT_CALL nfmpi_get_var_int_ ( int *v1, int *v2, MPI_Fint *v3 ){$/;"	f	signature:( int *v1, int *v2, MPI_Fint *v3 )
nfmpi_get_var_int_	src/libf/get_var_intf.c	13;"	d	file:
nfmpi_get_var_int_	src/libf/get_var_intf.c	15;"	d	file:
nfmpi_get_var_int_	src/libf/get_var_intf.c	17;"	d	file:
nfmpi_get_var_int_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_var_int_ ( int *v1, int *v2, MPI_Fint *v3 );$/;"	p	signature:( int *v1, int *v2, MPI_Fint *v3 )
nfmpi_get_var_int_all_	src/libf/get_var_int_allf.c	/^FORTRAN_API int FORT_CALL nfmpi_get_var_int_all_ ( int *v1, int *v2, MPI_Fint *v3 ){$/;"	f	signature:( int *v1, int *v2, MPI_Fint *v3 )
nfmpi_get_var_int_all_	src/libf/get_var_int_allf.c	13;"	d	file:
nfmpi_get_var_int_all_	src/libf/get_var_int_allf.c	15;"	d	file:
nfmpi_get_var_int_all_	src/libf/get_var_int_allf.c	17;"	d	file:
nfmpi_get_var_int_all_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_var_int_all_ ( int *v1, int *v2, MPI_Fint *v3 );$/;"	p	signature:( int *v1, int *v2, MPI_Fint *v3 )
nfmpi_get_var_real_	src/libf/get_var_realf.c	/^FORTRAN_API int FORT_CALL nfmpi_get_var_real_ ( int *v1, int *v2, float*v3 ){$/;"	f	signature:( int *v1, int *v2, float*v3 )
nfmpi_get_var_real_	src/libf/get_var_realf.c	13;"	d	file:
nfmpi_get_var_real_	src/libf/get_var_realf.c	15;"	d	file:
nfmpi_get_var_real_	src/libf/get_var_realf.c	17;"	d	file:
nfmpi_get_var_real_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_var_real_ ( int *v1, int *v2, float*v3 );$/;"	p	signature:( int *v1, int *v2, float*v3 )
nfmpi_get_var_real_all_	src/libf/get_var_real_allf.c	/^FORTRAN_API int FORT_CALL nfmpi_get_var_real_all_ ( int *v1, int *v2, float*v3 ){$/;"	f	signature:( int *v1, int *v2, float*v3 )
nfmpi_get_var_real_all_	src/libf/get_var_real_allf.c	13;"	d	file:
nfmpi_get_var_real_all_	src/libf/get_var_real_allf.c	15;"	d	file:
nfmpi_get_var_real_all_	src/libf/get_var_real_allf.c	17;"	d	file:
nfmpi_get_var_real_all_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_var_real_all_ ( int *v1, int *v2, float*v3 );$/;"	p	signature:( int *v1, int *v2, float*v3 )
nfmpi_get_var_text_	src/libf/get_var_textf.c	/^FORTRAN_API int FORT_CALL nfmpi_get_var_text_ ( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3) FORT_END_LEN(d3) ){$/;"	f	signature:( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3) FORT_END_LEN(d3) )
nfmpi_get_var_text_	src/libf/get_var_textf.c	13;"	d	file:
nfmpi_get_var_text_	src/libf/get_var_textf.c	15;"	d	file:
nfmpi_get_var_text_	src/libf/get_var_textf.c	17;"	d	file:
nfmpi_get_var_text_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_var_text_ ( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3) FORT_END_LEN(d3) );$/;"	p	signature:( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3) FORT_END_LEN(d3) )
nfmpi_get_var_text_all_	src/libf/get_var_text_allf.c	/^FORTRAN_API int FORT_CALL nfmpi_get_var_text_all_ ( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3) FORT_END_LEN(d3) ){$/;"	f	signature:( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3) FORT_END_LEN(d3) )
nfmpi_get_var_text_all_	src/libf/get_var_text_allf.c	13;"	d	file:
nfmpi_get_var_text_all_	src/libf/get_var_text_allf.c	15;"	d	file:
nfmpi_get_var_text_all_	src/libf/get_var_text_allf.c	17;"	d	file:
nfmpi_get_var_text_all_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_var_text_all_ ( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3) FORT_END_LEN(d3) );$/;"	p	signature:( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3) FORT_END_LEN(d3) )
nfmpi_get_vara_	src/libf/get_varaf.c	/^FORTRAN_API int FORT_CALL nfmpi_get_vara_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], void*v5, MPI_Offset *v6, MPI_Fint *v7 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], void*v5, MPI_Offset *v6, MPI_Fint *v7 )
nfmpi_get_vara_	src/libf/get_varaf.c	13;"	d	file:
nfmpi_get_vara_	src/libf/get_varaf.c	15;"	d	file:
nfmpi_get_vara_	src/libf/get_varaf.c	17;"	d	file:
nfmpi_get_vara_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_vara_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], void*v5, MPI_Offset *v6, MPI_Fint *v7 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], void*v5, MPI_Offset *v6, MPI_Fint *v7 )
nfmpi_get_vara_all_	src/libf/get_vara_allf.c	/^FORTRAN_API int FORT_CALL nfmpi_get_vara_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], void*v5, MPI_Offset *v6, MPI_Fint *v7 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], void*v5, MPI_Offset *v6, MPI_Fint *v7 )
nfmpi_get_vara_all_	src/libf/get_vara_allf.c	13;"	d	file:
nfmpi_get_vara_all_	src/libf/get_vara_allf.c	15;"	d	file:
nfmpi_get_vara_all_	src/libf/get_vara_allf.c	17;"	d	file:
nfmpi_get_vara_all_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_vara_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], void*v5, MPI_Offset *v6, MPI_Fint *v7 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], void*v5, MPI_Offset *v6, MPI_Fint *v7 )
nfmpi_get_vara_double_	src/libf/get_vara_doublef.c	/^FORTRAN_API int FORT_CALL nfmpi_get_vara_double_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], double*v5 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], double*v5 )
nfmpi_get_vara_double_	src/libf/get_vara_doublef.c	13;"	d	file:
nfmpi_get_vara_double_	src/libf/get_vara_doublef.c	15;"	d	file:
nfmpi_get_vara_double_	src/libf/get_vara_doublef.c	17;"	d	file:
nfmpi_get_vara_double_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_vara_double_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], double*v5 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], double*v5 )
nfmpi_get_vara_double_all_	src/libf/get_vara_double_allf.c	/^FORTRAN_API int FORT_CALL nfmpi_get_vara_double_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], double*v5 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], double*v5 )
nfmpi_get_vara_double_all_	src/libf/get_vara_double_allf.c	13;"	d	file:
nfmpi_get_vara_double_all_	src/libf/get_vara_double_allf.c	15;"	d	file:
nfmpi_get_vara_double_all_	src/libf/get_vara_double_allf.c	17;"	d	file:
nfmpi_get_vara_double_all_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_vara_double_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], double*v5 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], double*v5 )
nfmpi_get_vara_int1_	src/libf/get_vara_int1f.c	/^FORTRAN_API int FORT_CALL nfmpi_get_vara_int1_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], signed char * v5 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], signed char * v5 )
nfmpi_get_vara_int1_	src/libf/get_vara_int1f.c	13;"	d	file:
nfmpi_get_vara_int1_	src/libf/get_vara_int1f.c	15;"	d	file:
nfmpi_get_vara_int1_	src/libf/get_vara_int1f.c	17;"	d	file:
nfmpi_get_vara_int1_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_vara_int1_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], signed char * v5 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], signed char * v5 )
nfmpi_get_vara_int1_all_	src/libf/get_vara_int1_allf.c	/^FORTRAN_API int FORT_CALL nfmpi_get_vara_int1_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], signed char * v5 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], signed char * v5 )
nfmpi_get_vara_int1_all_	src/libf/get_vara_int1_allf.c	13;"	d	file:
nfmpi_get_vara_int1_all_	src/libf/get_vara_int1_allf.c	15;"	d	file:
nfmpi_get_vara_int1_all_	src/libf/get_vara_int1_allf.c	17;"	d	file:
nfmpi_get_vara_int1_all_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_vara_int1_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], signed char * v5 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], signed char * v5 )
nfmpi_get_vara_int2_	src/libf/get_vara_int2f.c	/^FORTRAN_API int FORT_CALL nfmpi_get_vara_int2_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], short*v5 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], short*v5 )
nfmpi_get_vara_int2_	src/libf/get_vara_int2f.c	13;"	d	file:
nfmpi_get_vara_int2_	src/libf/get_vara_int2f.c	15;"	d	file:
nfmpi_get_vara_int2_	src/libf/get_vara_int2f.c	17;"	d	file:
nfmpi_get_vara_int2_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_vara_int2_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], short*v5 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], short*v5 )
nfmpi_get_vara_int2_all_	src/libf/get_vara_int2_allf.c	/^FORTRAN_API int FORT_CALL nfmpi_get_vara_int2_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], short*v5 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], short*v5 )
nfmpi_get_vara_int2_all_	src/libf/get_vara_int2_allf.c	13;"	d	file:
nfmpi_get_vara_int2_all_	src/libf/get_vara_int2_allf.c	15;"	d	file:
nfmpi_get_vara_int2_all_	src/libf/get_vara_int2_allf.c	17;"	d	file:
nfmpi_get_vara_int2_all_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_vara_int2_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], short*v5 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], short*v5 )
nfmpi_get_vara_int_	src/libf/get_vara_intf.c	/^FORTRAN_API int FORT_CALL nfmpi_get_vara_int_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Fint *v5 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Fint *v5 )
nfmpi_get_vara_int_	src/libf/get_vara_intf.c	13;"	d	file:
nfmpi_get_vara_int_	src/libf/get_vara_intf.c	15;"	d	file:
nfmpi_get_vara_int_	src/libf/get_vara_intf.c	17;"	d	file:
nfmpi_get_vara_int_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_vara_int_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Fint *v5 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Fint *v5 )
nfmpi_get_vara_int_all_	src/libf/get_vara_int_allf.c	/^FORTRAN_API int FORT_CALL nfmpi_get_vara_int_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Fint *v5 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Fint *v5 )
nfmpi_get_vara_int_all_	src/libf/get_vara_int_allf.c	13;"	d	file:
nfmpi_get_vara_int_all_	src/libf/get_vara_int_allf.c	15;"	d	file:
nfmpi_get_vara_int_all_	src/libf/get_vara_int_allf.c	17;"	d	file:
nfmpi_get_vara_int_all_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_vara_int_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Fint *v5 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Fint *v5 )
nfmpi_get_vara_real_	src/libf/get_vara_realf.c	/^FORTRAN_API int FORT_CALL nfmpi_get_vara_real_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], float*v5 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], float*v5 )
nfmpi_get_vara_real_	src/libf/get_vara_realf.c	13;"	d	file:
nfmpi_get_vara_real_	src/libf/get_vara_realf.c	15;"	d	file:
nfmpi_get_vara_real_	src/libf/get_vara_realf.c	17;"	d	file:
nfmpi_get_vara_real_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_vara_real_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], float*v5 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], float*v5 )
nfmpi_get_vara_real_all_	src/libf/get_vara_real_allf.c	/^FORTRAN_API int FORT_CALL nfmpi_get_vara_real_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], float*v5 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], float*v5 )
nfmpi_get_vara_real_all_	src/libf/get_vara_real_allf.c	13;"	d	file:
nfmpi_get_vara_real_all_	src/libf/get_vara_real_allf.c	15;"	d	file:
nfmpi_get_vara_real_all_	src/libf/get_vara_real_allf.c	17;"	d	file:
nfmpi_get_vara_real_all_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_vara_real_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], float*v5 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], float*v5 )
nfmpi_get_vara_text_	src/libf/get_vara_textf.c	/^FORTRAN_API int FORT_CALL nfmpi_get_vara_text_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], char *v5 FORT_MIXED_LEN(d5) FORT_END_LEN(d5) ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], char *v5 FORT_MIXED_LEN(d5) FORT_END_LEN(d5) )
nfmpi_get_vara_text_	src/libf/get_vara_textf.c	13;"	d	file:
nfmpi_get_vara_text_	src/libf/get_vara_textf.c	15;"	d	file:
nfmpi_get_vara_text_	src/libf/get_vara_textf.c	17;"	d	file:
nfmpi_get_vara_text_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_vara_text_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], char *v5 FORT_MIXED_LEN(d5) FORT_END_LEN(d5) );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], char *v5 FORT_MIXED_LEN(d5) FORT_END_LEN(d5) )
nfmpi_get_vara_text_all_	src/libf/get_vara_text_allf.c	/^FORTRAN_API int FORT_CALL nfmpi_get_vara_text_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], char *v5 FORT_MIXED_LEN(d5) FORT_END_LEN(d5) ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], char *v5 FORT_MIXED_LEN(d5) FORT_END_LEN(d5) )
nfmpi_get_vara_text_all_	src/libf/get_vara_text_allf.c	13;"	d	file:
nfmpi_get_vara_text_all_	src/libf/get_vara_text_allf.c	15;"	d	file:
nfmpi_get_vara_text_all_	src/libf/get_vara_text_allf.c	17;"	d	file:
nfmpi_get_vara_text_all_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_vara_text_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], char *v5 FORT_MIXED_LEN(d5) FORT_END_LEN(d5) );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], char *v5 FORT_MIXED_LEN(d5) FORT_END_LEN(d5) )
nfmpi_get_varm_	src/libf/get_varmf.c	/^FORTRAN_API int FORT_CALL nfmpi_get_varm_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], void*v7, MPI_Offset *v8, MPI_Fint *v9 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], void*v7, MPI_Offset *v8, MPI_Fint *v9 )
nfmpi_get_varm_	src/libf/get_varmf.c	13;"	d	file:
nfmpi_get_varm_	src/libf/get_varmf.c	15;"	d	file:
nfmpi_get_varm_	src/libf/get_varmf.c	17;"	d	file:
nfmpi_get_varm_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_varm_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], void*v7, MPI_Offset *v8, MPI_Fint *v9 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], void*v7, MPI_Offset *v8, MPI_Fint *v9 )
nfmpi_get_varm_all_	src/libf/get_varm_allf.c	/^FORTRAN_API int FORT_CALL nfmpi_get_varm_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], void*v7, MPI_Offset *v8, MPI_Fint *v9 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], void*v7, MPI_Offset *v8, MPI_Fint *v9 )
nfmpi_get_varm_all_	src/libf/get_varm_allf.c	13;"	d	file:
nfmpi_get_varm_all_	src/libf/get_varm_allf.c	15;"	d	file:
nfmpi_get_varm_all_	src/libf/get_varm_allf.c	17;"	d	file:
nfmpi_get_varm_all_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_varm_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], void*v7, MPI_Offset *v8, MPI_Fint *v9 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], void*v7, MPI_Offset *v8, MPI_Fint *v9 )
nfmpi_get_varm_double_	src/libf/get_varm_doublef.c	/^FORTRAN_API int FORT_CALL nfmpi_get_varm_double_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], double*v7 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], double*v7 )
nfmpi_get_varm_double_	src/libf/get_varm_doublef.c	13;"	d	file:
nfmpi_get_varm_double_	src/libf/get_varm_doublef.c	15;"	d	file:
nfmpi_get_varm_double_	src/libf/get_varm_doublef.c	17;"	d	file:
nfmpi_get_varm_double_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_varm_double_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], double*v7 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], double*v7 )
nfmpi_get_varm_double_all_	src/libf/get_varm_double_allf.c	/^FORTRAN_API int FORT_CALL nfmpi_get_varm_double_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], double*v7 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], double*v7 )
nfmpi_get_varm_double_all_	src/libf/get_varm_double_allf.c	13;"	d	file:
nfmpi_get_varm_double_all_	src/libf/get_varm_double_allf.c	15;"	d	file:
nfmpi_get_varm_double_all_	src/libf/get_varm_double_allf.c	17;"	d	file:
nfmpi_get_varm_double_all_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_varm_double_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], double*v7 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], double*v7 )
nfmpi_get_varm_int1_	src/libf/get_varm_int1f.c	/^FORTRAN_API int FORT_CALL nfmpi_get_varm_int1_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], signed char * v7 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], signed char * v7 )
nfmpi_get_varm_int1_	src/libf/get_varm_int1f.c	13;"	d	file:
nfmpi_get_varm_int1_	src/libf/get_varm_int1f.c	15;"	d	file:
nfmpi_get_varm_int1_	src/libf/get_varm_int1f.c	17;"	d	file:
nfmpi_get_varm_int1_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_varm_int1_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], signed char * v7 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], signed char * v7 )
nfmpi_get_varm_int1_all_	src/libf/get_varm_int1_allf.c	/^FORTRAN_API int FORT_CALL nfmpi_get_varm_int1_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], signed char * v7 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], signed char * v7 )
nfmpi_get_varm_int1_all_	src/libf/get_varm_int1_allf.c	13;"	d	file:
nfmpi_get_varm_int1_all_	src/libf/get_varm_int1_allf.c	15;"	d	file:
nfmpi_get_varm_int1_all_	src/libf/get_varm_int1_allf.c	17;"	d	file:
nfmpi_get_varm_int1_all_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_varm_int1_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], signed char * v7 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], signed char * v7 )
nfmpi_get_varm_int2_	src/libf/get_varm_int2f.c	/^FORTRAN_API int FORT_CALL nfmpi_get_varm_int2_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], short*v7 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], short*v7 )
nfmpi_get_varm_int2_	src/libf/get_varm_int2f.c	13;"	d	file:
nfmpi_get_varm_int2_	src/libf/get_varm_int2f.c	15;"	d	file:
nfmpi_get_varm_int2_	src/libf/get_varm_int2f.c	17;"	d	file:
nfmpi_get_varm_int2_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_varm_int2_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], short*v7 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], short*v7 )
nfmpi_get_varm_int2_all_	src/libf/get_varm_int2_allf.c	/^FORTRAN_API int FORT_CALL nfmpi_get_varm_int2_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], short*v7 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], short*v7 )
nfmpi_get_varm_int2_all_	src/libf/get_varm_int2_allf.c	13;"	d	file:
nfmpi_get_varm_int2_all_	src/libf/get_varm_int2_allf.c	15;"	d	file:
nfmpi_get_varm_int2_all_	src/libf/get_varm_int2_allf.c	17;"	d	file:
nfmpi_get_varm_int2_all_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_varm_int2_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], short*v7 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], short*v7 )
nfmpi_get_varm_int_	src/libf/get_varm_intf.c	/^FORTRAN_API int FORT_CALL nfmpi_get_varm_int_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], MPI_Fint *v7 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], MPI_Fint *v7 )
nfmpi_get_varm_int_	src/libf/get_varm_intf.c	13;"	d	file:
nfmpi_get_varm_int_	src/libf/get_varm_intf.c	15;"	d	file:
nfmpi_get_varm_int_	src/libf/get_varm_intf.c	17;"	d	file:
nfmpi_get_varm_int_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_varm_int_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], MPI_Fint *v7 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], MPI_Fint *v7 )
nfmpi_get_varm_int_all_	src/libf/get_varm_int_allf.c	/^FORTRAN_API int FORT_CALL nfmpi_get_varm_int_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], MPI_Fint *v7 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], MPI_Fint *v7 )
nfmpi_get_varm_int_all_	src/libf/get_varm_int_allf.c	13;"	d	file:
nfmpi_get_varm_int_all_	src/libf/get_varm_int_allf.c	15;"	d	file:
nfmpi_get_varm_int_all_	src/libf/get_varm_int_allf.c	17;"	d	file:
nfmpi_get_varm_int_all_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_varm_int_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], MPI_Fint *v7 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], MPI_Fint *v7 )
nfmpi_get_varm_real_	src/libf/get_varm_realf.c	/^FORTRAN_API int FORT_CALL nfmpi_get_varm_real_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], float*v7 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], float*v7 )
nfmpi_get_varm_real_	src/libf/get_varm_realf.c	13;"	d	file:
nfmpi_get_varm_real_	src/libf/get_varm_realf.c	15;"	d	file:
nfmpi_get_varm_real_	src/libf/get_varm_realf.c	17;"	d	file:
nfmpi_get_varm_real_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_varm_real_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], float*v7 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], float*v7 )
nfmpi_get_varm_real_all_	src/libf/get_varm_real_allf.c	/^FORTRAN_API int FORT_CALL nfmpi_get_varm_real_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], float*v7 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], float*v7 )
nfmpi_get_varm_real_all_	src/libf/get_varm_real_allf.c	13;"	d	file:
nfmpi_get_varm_real_all_	src/libf/get_varm_real_allf.c	15;"	d	file:
nfmpi_get_varm_real_all_	src/libf/get_varm_real_allf.c	17;"	d	file:
nfmpi_get_varm_real_all_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_varm_real_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], float*v7 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], float*v7 )
nfmpi_get_varm_text_	src/libf/get_varm_textf.c	/^FORTRAN_API int FORT_CALL nfmpi_get_varm_text_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], char *v7 FORT_MIXED_LEN(d7) FORT_END_LEN(d7) ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], char *v7 FORT_MIXED_LEN(d7) FORT_END_LEN(d7) )
nfmpi_get_varm_text_	src/libf/get_varm_textf.c	13;"	d	file:
nfmpi_get_varm_text_	src/libf/get_varm_textf.c	15;"	d	file:
nfmpi_get_varm_text_	src/libf/get_varm_textf.c	17;"	d	file:
nfmpi_get_varm_text_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_varm_text_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], char *v7 FORT_MIXED_LEN(d7) FORT_END_LEN(d7) );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], char *v7 FORT_MIXED_LEN(d7) FORT_END_LEN(d7) )
nfmpi_get_varm_text_all_	src/libf/get_varm_text_allf.c	/^FORTRAN_API int FORT_CALL nfmpi_get_varm_text_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], char *v7 FORT_MIXED_LEN(d7) FORT_END_LEN(d7) ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], char *v7 FORT_MIXED_LEN(d7) FORT_END_LEN(d7) )
nfmpi_get_varm_text_all_	src/libf/get_varm_text_allf.c	13;"	d	file:
nfmpi_get_varm_text_all_	src/libf/get_varm_text_allf.c	15;"	d	file:
nfmpi_get_varm_text_all_	src/libf/get_varm_text_allf.c	17;"	d	file:
nfmpi_get_varm_text_all_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_varm_text_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], char *v7 FORT_MIXED_LEN(d7) FORT_END_LEN(d7) );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], char *v7 FORT_MIXED_LEN(d7) FORT_END_LEN(d7) )
nfmpi_get_vars_	src/libf/get_varsf.c	/^FORTRAN_API int FORT_CALL nfmpi_get_vars_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], void*v6, MPI_Offset *v7, MPI_Fint *v8 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], void*v6, MPI_Offset *v7, MPI_Fint *v8 )
nfmpi_get_vars_	src/libf/get_varsf.c	13;"	d	file:
nfmpi_get_vars_	src/libf/get_varsf.c	15;"	d	file:
nfmpi_get_vars_	src/libf/get_varsf.c	17;"	d	file:
nfmpi_get_vars_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_vars_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], void*v6, MPI_Offset *v7, MPI_Fint *v8 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], void*v6, MPI_Offset *v7, MPI_Fint *v8 )
nfmpi_get_vars_all_	src/libf/get_vars_allf.c	/^FORTRAN_API int FORT_CALL nfmpi_get_vars_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], void*v6, MPI_Offset *v7, MPI_Fint *v8 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], void*v6, MPI_Offset *v7, MPI_Fint *v8 )
nfmpi_get_vars_all_	src/libf/get_vars_allf.c	13;"	d	file:
nfmpi_get_vars_all_	src/libf/get_vars_allf.c	15;"	d	file:
nfmpi_get_vars_all_	src/libf/get_vars_allf.c	17;"	d	file:
nfmpi_get_vars_all_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_vars_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], void*v6, MPI_Offset *v7, MPI_Fint *v8 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], void*v6, MPI_Offset *v7, MPI_Fint *v8 )
nfmpi_get_vars_double_	src/libf/get_vars_doublef.c	/^FORTRAN_API int FORT_CALL nfmpi_get_vars_double_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], double*v6 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], double*v6 )
nfmpi_get_vars_double_	src/libf/get_vars_doublef.c	13;"	d	file:
nfmpi_get_vars_double_	src/libf/get_vars_doublef.c	15;"	d	file:
nfmpi_get_vars_double_	src/libf/get_vars_doublef.c	17;"	d	file:
nfmpi_get_vars_double_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_vars_double_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], double*v6 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], double*v6 )
nfmpi_get_vars_double_all_	src/libf/get_vars_double_allf.c	/^FORTRAN_API int FORT_CALL nfmpi_get_vars_double_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], double*v6 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], double*v6 )
nfmpi_get_vars_double_all_	src/libf/get_vars_double_allf.c	13;"	d	file:
nfmpi_get_vars_double_all_	src/libf/get_vars_double_allf.c	15;"	d	file:
nfmpi_get_vars_double_all_	src/libf/get_vars_double_allf.c	17;"	d	file:
nfmpi_get_vars_double_all_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_vars_double_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], double*v6 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], double*v6 )
nfmpi_get_vars_int1_	src/libf/get_vars_int1f.c	/^FORTRAN_API int FORT_CALL nfmpi_get_vars_int1_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], signed char * v6 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], signed char * v6 )
nfmpi_get_vars_int1_	src/libf/get_vars_int1f.c	13;"	d	file:
nfmpi_get_vars_int1_	src/libf/get_vars_int1f.c	15;"	d	file:
nfmpi_get_vars_int1_	src/libf/get_vars_int1f.c	17;"	d	file:
nfmpi_get_vars_int1_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_vars_int1_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], signed char * v6 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], signed char * v6 )
nfmpi_get_vars_int1_all_	src/libf/get_vars_int1_allf.c	/^FORTRAN_API int FORT_CALL nfmpi_get_vars_int1_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], signed char * v6 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], signed char * v6 )
nfmpi_get_vars_int1_all_	src/libf/get_vars_int1_allf.c	13;"	d	file:
nfmpi_get_vars_int1_all_	src/libf/get_vars_int1_allf.c	15;"	d	file:
nfmpi_get_vars_int1_all_	src/libf/get_vars_int1_allf.c	17;"	d	file:
nfmpi_get_vars_int1_all_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_vars_int1_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], signed char * v6 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], signed char * v6 )
nfmpi_get_vars_int2_	src/libf/get_vars_int2f.c	/^FORTRAN_API int FORT_CALL nfmpi_get_vars_int2_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], short*v6 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], short*v6 )
nfmpi_get_vars_int2_	src/libf/get_vars_int2f.c	13;"	d	file:
nfmpi_get_vars_int2_	src/libf/get_vars_int2f.c	15;"	d	file:
nfmpi_get_vars_int2_	src/libf/get_vars_int2f.c	17;"	d	file:
nfmpi_get_vars_int2_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_vars_int2_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], short*v6 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], short*v6 )
nfmpi_get_vars_int2_all_	src/libf/get_vars_int2_allf.c	/^FORTRAN_API int FORT_CALL nfmpi_get_vars_int2_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], short*v6 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], short*v6 )
nfmpi_get_vars_int2_all_	src/libf/get_vars_int2_allf.c	13;"	d	file:
nfmpi_get_vars_int2_all_	src/libf/get_vars_int2_allf.c	15;"	d	file:
nfmpi_get_vars_int2_all_	src/libf/get_vars_int2_allf.c	17;"	d	file:
nfmpi_get_vars_int2_all_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_vars_int2_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], short*v6 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], short*v6 )
nfmpi_get_vars_int_	src/libf/get_vars_intf.c	/^FORTRAN_API int FORT_CALL nfmpi_get_vars_int_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Fint *v6 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Fint *v6 )
nfmpi_get_vars_int_	src/libf/get_vars_intf.c	13;"	d	file:
nfmpi_get_vars_int_	src/libf/get_vars_intf.c	15;"	d	file:
nfmpi_get_vars_int_	src/libf/get_vars_intf.c	17;"	d	file:
nfmpi_get_vars_int_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_vars_int_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Fint *v6 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Fint *v6 )
nfmpi_get_vars_int_all_	src/libf/get_vars_int_allf.c	/^FORTRAN_API int FORT_CALL nfmpi_get_vars_int_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Fint *v6 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Fint *v6 )
nfmpi_get_vars_int_all_	src/libf/get_vars_int_allf.c	13;"	d	file:
nfmpi_get_vars_int_all_	src/libf/get_vars_int_allf.c	15;"	d	file:
nfmpi_get_vars_int_all_	src/libf/get_vars_int_allf.c	17;"	d	file:
nfmpi_get_vars_int_all_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_vars_int_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Fint *v6 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Fint *v6 )
nfmpi_get_vars_real_	src/libf/get_vars_realf.c	/^FORTRAN_API int FORT_CALL nfmpi_get_vars_real_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], float*v6 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], float*v6 )
nfmpi_get_vars_real_	src/libf/get_vars_realf.c	13;"	d	file:
nfmpi_get_vars_real_	src/libf/get_vars_realf.c	15;"	d	file:
nfmpi_get_vars_real_	src/libf/get_vars_realf.c	17;"	d	file:
nfmpi_get_vars_real_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_vars_real_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], float*v6 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], float*v6 )
nfmpi_get_vars_real_all_	src/libf/get_vars_real_allf.c	/^FORTRAN_API int FORT_CALL nfmpi_get_vars_real_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], float*v6 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], float*v6 )
nfmpi_get_vars_real_all_	src/libf/get_vars_real_allf.c	13;"	d	file:
nfmpi_get_vars_real_all_	src/libf/get_vars_real_allf.c	15;"	d	file:
nfmpi_get_vars_real_all_	src/libf/get_vars_real_allf.c	17;"	d	file:
nfmpi_get_vars_real_all_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_vars_real_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], float*v6 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], float*v6 )
nfmpi_get_vars_text_	src/libf/get_vars_textf.c	/^FORTRAN_API int FORT_CALL nfmpi_get_vars_text_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], char *v6 FORT_MIXED_LEN(d6) FORT_END_LEN(d6) ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], char *v6 FORT_MIXED_LEN(d6) FORT_END_LEN(d6) )
nfmpi_get_vars_text_	src/libf/get_vars_textf.c	13;"	d	file:
nfmpi_get_vars_text_	src/libf/get_vars_textf.c	15;"	d	file:
nfmpi_get_vars_text_	src/libf/get_vars_textf.c	17;"	d	file:
nfmpi_get_vars_text_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_vars_text_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], char *v6 FORT_MIXED_LEN(d6) FORT_END_LEN(d6) );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], char *v6 FORT_MIXED_LEN(d6) FORT_END_LEN(d6) )
nfmpi_get_vars_text_all_	src/libf/get_vars_text_allf.c	/^FORTRAN_API int FORT_CALL nfmpi_get_vars_text_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], char *v6 FORT_MIXED_LEN(d6) FORT_END_LEN(d6) ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], char *v6 FORT_MIXED_LEN(d6) FORT_END_LEN(d6) )
nfmpi_get_vars_text_all_	src/libf/get_vars_text_allf.c	13;"	d	file:
nfmpi_get_vars_text_all_	src/libf/get_vars_text_allf.c	15;"	d	file:
nfmpi_get_vars_text_all_	src/libf/get_vars_text_allf.c	17;"	d	file:
nfmpi_get_vars_text_all_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_get_vars_text_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], char *v6 FORT_MIXED_LEN(d6) FORT_END_LEN(d6) );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], char *v6 FORT_MIXED_LEN(d6) FORT_END_LEN(d6) )
nfmpi_iget_var1_	src/libf/iget_var1f.c	/^FORTRAN_API int FORT_CALL nfmpi_iget_var1_ ( int *v1, int *v2, MPI_Offset v3[], void*v4, MPI_Offset *v5, MPI_Fint *v6, MPI_Fint *v7 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], void*v4, MPI_Offset *v5, MPI_Fint *v6, MPI_Fint *v7 )
nfmpi_iget_var1_	src/libf/iget_var1f.c	13;"	d	file:
nfmpi_iget_var1_	src/libf/iget_var1f.c	15;"	d	file:
nfmpi_iget_var1_	src/libf/iget_var1f.c	17;"	d	file:
nfmpi_iget_var1_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iget_var1_ ( int *v1, int *v2, MPI_Offset v3[], void*v4, MPI_Offset *v5, MPI_Fint *v6, MPI_Fint *v7 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], void*v4, MPI_Offset *v5, MPI_Fint *v6, MPI_Fint *v7 )
nfmpi_iget_var1_double_	src/libf/iget_var1_doublef.c	/^FORTRAN_API int FORT_CALL nfmpi_iget_var1_double_ ( int *v1, int *v2, MPI_Offset v3[], double*v4, MPI_Fint *v5 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], double*v4, MPI_Fint *v5 )
nfmpi_iget_var1_double_	src/libf/iget_var1_doublef.c	13;"	d	file:
nfmpi_iget_var1_double_	src/libf/iget_var1_doublef.c	15;"	d	file:
nfmpi_iget_var1_double_	src/libf/iget_var1_doublef.c	17;"	d	file:
nfmpi_iget_var1_double_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iget_var1_double_ ( int *v1, int *v2, MPI_Offset v3[], double*v4, MPI_Fint *v5 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], double*v4, MPI_Fint *v5 )
nfmpi_iget_var1_int1_	src/libf/iget_var1_int1f.c	/^FORTRAN_API int FORT_CALL nfmpi_iget_var1_int1_ ( int *v1, int *v2, MPI_Offset v3[], signed char * v4, MPI_Fint *v5 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], signed char * v4, MPI_Fint *v5 )
nfmpi_iget_var1_int1_	src/libf/iget_var1_int1f.c	13;"	d	file:
nfmpi_iget_var1_int1_	src/libf/iget_var1_int1f.c	15;"	d	file:
nfmpi_iget_var1_int1_	src/libf/iget_var1_int1f.c	17;"	d	file:
nfmpi_iget_var1_int1_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iget_var1_int1_ ( int *v1, int *v2, MPI_Offset v3[], signed char * v4, MPI_Fint *v5 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], signed char * v4, MPI_Fint *v5 )
nfmpi_iget_var1_int2_	src/libf/iget_var1_int2f.c	/^FORTRAN_API int FORT_CALL nfmpi_iget_var1_int2_ ( int *v1, int *v2, MPI_Offset v3[], short*v4, MPI_Fint *v5 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], short*v4, MPI_Fint *v5 )
nfmpi_iget_var1_int2_	src/libf/iget_var1_int2f.c	13;"	d	file:
nfmpi_iget_var1_int2_	src/libf/iget_var1_int2f.c	15;"	d	file:
nfmpi_iget_var1_int2_	src/libf/iget_var1_int2f.c	17;"	d	file:
nfmpi_iget_var1_int2_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iget_var1_int2_ ( int *v1, int *v2, MPI_Offset v3[], short*v4, MPI_Fint *v5 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], short*v4, MPI_Fint *v5 )
nfmpi_iget_var1_int_	src/libf/iget_var1_intf.c	/^FORTRAN_API int FORT_CALL nfmpi_iget_var1_int_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Fint *v4, MPI_Fint *v5 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Fint *v4, MPI_Fint *v5 )
nfmpi_iget_var1_int_	src/libf/iget_var1_intf.c	13;"	d	file:
nfmpi_iget_var1_int_	src/libf/iget_var1_intf.c	15;"	d	file:
nfmpi_iget_var1_int_	src/libf/iget_var1_intf.c	17;"	d	file:
nfmpi_iget_var1_int_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iget_var1_int_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Fint *v4, MPI_Fint *v5 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Fint *v4, MPI_Fint *v5 )
nfmpi_iget_var1_real_	src/libf/iget_var1_realf.c	/^FORTRAN_API int FORT_CALL nfmpi_iget_var1_real_ ( int *v1, int *v2, MPI_Offset v3[], float*v4, MPI_Fint *v5 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], float*v4, MPI_Fint *v5 )
nfmpi_iget_var1_real_	src/libf/iget_var1_realf.c	13;"	d	file:
nfmpi_iget_var1_real_	src/libf/iget_var1_realf.c	15;"	d	file:
nfmpi_iget_var1_real_	src/libf/iget_var1_realf.c	17;"	d	file:
nfmpi_iget_var1_real_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iget_var1_real_ ( int *v1, int *v2, MPI_Offset v3[], float*v4, MPI_Fint *v5 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], float*v4, MPI_Fint *v5 )
nfmpi_iget_var1_text_	src/libf/iget_var1_textf.c	/^FORTRAN_API int FORT_CALL nfmpi_iget_var1_text_ ( int *v1, int *v2, MPI_Offset v3[], char *v4 FORT_MIXED_LEN(d4), MPI_Fint *v5 FORT_END_LEN(d4) ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], char *v4 FORT_MIXED_LEN(d4), MPI_Fint *v5 FORT_END_LEN(d4) )
nfmpi_iget_var1_text_	src/libf/iget_var1_textf.c	13;"	d	file:
nfmpi_iget_var1_text_	src/libf/iget_var1_textf.c	15;"	d	file:
nfmpi_iget_var1_text_	src/libf/iget_var1_textf.c	17;"	d	file:
nfmpi_iget_var1_text_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iget_var1_text_ ( int *v1, int *v2, MPI_Offset v3[], char *v4 FORT_MIXED_LEN(d4), MPI_Fint *v5 FORT_END_LEN(d4) );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], char *v4 FORT_MIXED_LEN(d4), MPI_Fint *v5 FORT_END_LEN(d4) )
nfmpi_iget_var_	src/libf/iget_varf.c	/^FORTRAN_API int FORT_CALL nfmpi_iget_var_ ( int *v1, int *v2, void*v3, MPI_Offset *v4, MPI_Fint *v5, MPI_Fint *v6 ){$/;"	f	signature:( int *v1, int *v2, void*v3, MPI_Offset *v4, MPI_Fint *v5, MPI_Fint *v6 )
nfmpi_iget_var_	src/libf/iget_varf.c	13;"	d	file:
nfmpi_iget_var_	src/libf/iget_varf.c	15;"	d	file:
nfmpi_iget_var_	src/libf/iget_varf.c	17;"	d	file:
nfmpi_iget_var_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iget_var_ ( int *v1, int *v2, void*v3, MPI_Offset *v4, MPI_Fint *v5, MPI_Fint *v6 );$/;"	p	signature:( int *v1, int *v2, void*v3, MPI_Offset *v4, MPI_Fint *v5, MPI_Fint *v6 )
nfmpi_iget_var_double_	src/libf/iget_var_doublef.c	/^FORTRAN_API int FORT_CALL nfmpi_iget_var_double_ ( int *v1, int *v2, double*v3, MPI_Fint *v4 ){$/;"	f	signature:( int *v1, int *v2, double*v3, MPI_Fint *v4 )
nfmpi_iget_var_double_	src/libf/iget_var_doublef.c	13;"	d	file:
nfmpi_iget_var_double_	src/libf/iget_var_doublef.c	15;"	d	file:
nfmpi_iget_var_double_	src/libf/iget_var_doublef.c	17;"	d	file:
nfmpi_iget_var_double_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iget_var_double_ ( int *v1, int *v2, double*v3, MPI_Fint *v4 );$/;"	p	signature:( int *v1, int *v2, double*v3, MPI_Fint *v4 )
nfmpi_iget_var_int1_	src/libf/iget_var_int1f.c	/^FORTRAN_API int FORT_CALL nfmpi_iget_var_int1_ ( int *v1, int *v2, signed char * v3, MPI_Fint *v4 ){$/;"	f	signature:( int *v1, int *v2, signed char * v3, MPI_Fint *v4 )
nfmpi_iget_var_int1_	src/libf/iget_var_int1f.c	13;"	d	file:
nfmpi_iget_var_int1_	src/libf/iget_var_int1f.c	15;"	d	file:
nfmpi_iget_var_int1_	src/libf/iget_var_int1f.c	17;"	d	file:
nfmpi_iget_var_int1_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iget_var_int1_ ( int *v1, int *v2, signed char * v3, MPI_Fint *v4 );$/;"	p	signature:( int *v1, int *v2, signed char * v3, MPI_Fint *v4 )
nfmpi_iget_var_int2_	src/libf/iget_var_int2f.c	/^FORTRAN_API int FORT_CALL nfmpi_iget_var_int2_ ( int *v1, int *v2, short*v3, MPI_Fint *v4 ){$/;"	f	signature:( int *v1, int *v2, short*v3, MPI_Fint *v4 )
nfmpi_iget_var_int2_	src/libf/iget_var_int2f.c	13;"	d	file:
nfmpi_iget_var_int2_	src/libf/iget_var_int2f.c	15;"	d	file:
nfmpi_iget_var_int2_	src/libf/iget_var_int2f.c	17;"	d	file:
nfmpi_iget_var_int2_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iget_var_int2_ ( int *v1, int *v2, short*v3, MPI_Fint *v4 );$/;"	p	signature:( int *v1, int *v2, short*v3, MPI_Fint *v4 )
nfmpi_iget_var_int_	src/libf/iget_var_intf.c	/^FORTRAN_API int FORT_CALL nfmpi_iget_var_int_ ( int *v1, int *v2, MPI_Fint *v3, MPI_Fint *v4 ){$/;"	f	signature:( int *v1, int *v2, MPI_Fint *v3, MPI_Fint *v4 )
nfmpi_iget_var_int_	src/libf/iget_var_intf.c	13;"	d	file:
nfmpi_iget_var_int_	src/libf/iget_var_intf.c	15;"	d	file:
nfmpi_iget_var_int_	src/libf/iget_var_intf.c	17;"	d	file:
nfmpi_iget_var_int_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iget_var_int_ ( int *v1, int *v2, MPI_Fint *v3, MPI_Fint *v4 );$/;"	p	signature:( int *v1, int *v2, MPI_Fint *v3, MPI_Fint *v4 )
nfmpi_iget_var_real_	src/libf/iget_var_realf.c	/^FORTRAN_API int FORT_CALL nfmpi_iget_var_real_ ( int *v1, int *v2, float*v3, MPI_Fint *v4 ){$/;"	f	signature:( int *v1, int *v2, float*v3, MPI_Fint *v4 )
nfmpi_iget_var_real_	src/libf/iget_var_realf.c	13;"	d	file:
nfmpi_iget_var_real_	src/libf/iget_var_realf.c	15;"	d	file:
nfmpi_iget_var_real_	src/libf/iget_var_realf.c	17;"	d	file:
nfmpi_iget_var_real_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iget_var_real_ ( int *v1, int *v2, float*v3, MPI_Fint *v4 );$/;"	p	signature:( int *v1, int *v2, float*v3, MPI_Fint *v4 )
nfmpi_iget_var_text_	src/libf/iget_var_textf.c	/^FORTRAN_API int FORT_CALL nfmpi_iget_var_text_ ( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), MPI_Fint *v4 FORT_END_LEN(d3) ){$/;"	f	signature:( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), MPI_Fint *v4 FORT_END_LEN(d3) )
nfmpi_iget_var_text_	src/libf/iget_var_textf.c	13;"	d	file:
nfmpi_iget_var_text_	src/libf/iget_var_textf.c	15;"	d	file:
nfmpi_iget_var_text_	src/libf/iget_var_textf.c	17;"	d	file:
nfmpi_iget_var_text_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iget_var_text_ ( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), MPI_Fint *v4 FORT_END_LEN(d3) );$/;"	p	signature:( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), MPI_Fint *v4 FORT_END_LEN(d3) )
nfmpi_iget_vara_	src/libf/iget_varaf.c	/^FORTRAN_API int FORT_CALL nfmpi_iget_vara_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], void*v5, MPI_Offset *v6, MPI_Fint *v7, MPI_Fint *v8 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], void*v5, MPI_Offset *v6, MPI_Fint *v7, MPI_Fint *v8 )
nfmpi_iget_vara_	src/libf/iget_varaf.c	13;"	d	file:
nfmpi_iget_vara_	src/libf/iget_varaf.c	15;"	d	file:
nfmpi_iget_vara_	src/libf/iget_varaf.c	17;"	d	file:
nfmpi_iget_vara_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iget_vara_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], void*v5, MPI_Offset *v6, MPI_Fint *v7, MPI_Fint *v8 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], void*v5, MPI_Offset *v6, MPI_Fint *v7, MPI_Fint *v8 )
nfmpi_iget_vara_double_	src/libf/iget_vara_doublef.c	/^FORTRAN_API int FORT_CALL nfmpi_iget_vara_double_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], double*v5, MPI_Fint *v6 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], double*v5, MPI_Fint *v6 )
nfmpi_iget_vara_double_	src/libf/iget_vara_doublef.c	13;"	d	file:
nfmpi_iget_vara_double_	src/libf/iget_vara_doublef.c	15;"	d	file:
nfmpi_iget_vara_double_	src/libf/iget_vara_doublef.c	17;"	d	file:
nfmpi_iget_vara_double_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iget_vara_double_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], double*v5, MPI_Fint *v6 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], double*v5, MPI_Fint *v6 )
nfmpi_iget_vara_int1_	src/libf/iget_vara_int1f.c	/^FORTRAN_API int FORT_CALL nfmpi_iget_vara_int1_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], signed char * v5, MPI_Fint *v6 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], signed char * v5, MPI_Fint *v6 )
nfmpi_iget_vara_int1_	src/libf/iget_vara_int1f.c	13;"	d	file:
nfmpi_iget_vara_int1_	src/libf/iget_vara_int1f.c	15;"	d	file:
nfmpi_iget_vara_int1_	src/libf/iget_vara_int1f.c	17;"	d	file:
nfmpi_iget_vara_int1_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iget_vara_int1_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], signed char * v5, MPI_Fint *v6 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], signed char * v5, MPI_Fint *v6 )
nfmpi_iget_vara_int2_	src/libf/iget_vara_int2f.c	/^FORTRAN_API int FORT_CALL nfmpi_iget_vara_int2_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], short*v5, MPI_Fint *v6 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], short*v5, MPI_Fint *v6 )
nfmpi_iget_vara_int2_	src/libf/iget_vara_int2f.c	13;"	d	file:
nfmpi_iget_vara_int2_	src/libf/iget_vara_int2f.c	15;"	d	file:
nfmpi_iget_vara_int2_	src/libf/iget_vara_int2f.c	17;"	d	file:
nfmpi_iget_vara_int2_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iget_vara_int2_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], short*v5, MPI_Fint *v6 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], short*v5, MPI_Fint *v6 )
nfmpi_iget_vara_int_	src/libf/iget_vara_intf.c	/^FORTRAN_API int FORT_CALL nfmpi_iget_vara_int_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Fint *v5, MPI_Fint *v6 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Fint *v5, MPI_Fint *v6 )
nfmpi_iget_vara_int_	src/libf/iget_vara_intf.c	13;"	d	file:
nfmpi_iget_vara_int_	src/libf/iget_vara_intf.c	15;"	d	file:
nfmpi_iget_vara_int_	src/libf/iget_vara_intf.c	17;"	d	file:
nfmpi_iget_vara_int_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iget_vara_int_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Fint *v5, MPI_Fint *v6 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Fint *v5, MPI_Fint *v6 )
nfmpi_iget_vara_real_	src/libf/iget_vara_realf.c	/^FORTRAN_API int FORT_CALL nfmpi_iget_vara_real_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], float*v5, MPI_Fint *v6 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], float*v5, MPI_Fint *v6 )
nfmpi_iget_vara_real_	src/libf/iget_vara_realf.c	13;"	d	file:
nfmpi_iget_vara_real_	src/libf/iget_vara_realf.c	15;"	d	file:
nfmpi_iget_vara_real_	src/libf/iget_vara_realf.c	17;"	d	file:
nfmpi_iget_vara_real_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iget_vara_real_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], float*v5, MPI_Fint *v6 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], float*v5, MPI_Fint *v6 )
nfmpi_iget_vara_text_	src/libf/iget_vara_textf.c	/^FORTRAN_API int FORT_CALL nfmpi_iget_vara_text_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], char *v5 FORT_MIXED_LEN(d5), MPI_Fint *v6 FORT_END_LEN(d5) ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], char *v5 FORT_MIXED_LEN(d5), MPI_Fint *v6 FORT_END_LEN(d5) )
nfmpi_iget_vara_text_	src/libf/iget_vara_textf.c	13;"	d	file:
nfmpi_iget_vara_text_	src/libf/iget_vara_textf.c	15;"	d	file:
nfmpi_iget_vara_text_	src/libf/iget_vara_textf.c	17;"	d	file:
nfmpi_iget_vara_text_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iget_vara_text_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], char *v5 FORT_MIXED_LEN(d5), MPI_Fint *v6 FORT_END_LEN(d5) );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], char *v5 FORT_MIXED_LEN(d5), MPI_Fint *v6 FORT_END_LEN(d5) )
nfmpi_iget_varm_	src/libf/iget_varmf.c	/^FORTRAN_API int FORT_CALL nfmpi_iget_varm_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], void*v7, MPI_Offset *v8, MPI_Fint *v9, MPI_Fint *v10 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], void*v7, MPI_Offset *v8, MPI_Fint *v9, MPI_Fint *v10 )
nfmpi_iget_varm_	src/libf/iget_varmf.c	13;"	d	file:
nfmpi_iget_varm_	src/libf/iget_varmf.c	15;"	d	file:
nfmpi_iget_varm_	src/libf/iget_varmf.c	17;"	d	file:
nfmpi_iget_varm_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iget_varm_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], void*v7, MPI_Offset *v8, MPI_Fint *v9, MPI_Fint *v10 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], void*v7, MPI_Offset *v8, MPI_Fint *v9, MPI_Fint *v10 )
nfmpi_iget_varm_double_	src/libf/iget_varm_doublef.c	/^FORTRAN_API int FORT_CALL nfmpi_iget_varm_double_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], double*v7, MPI_Fint *v8 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], double*v7, MPI_Fint *v8 )
nfmpi_iget_varm_double_	src/libf/iget_varm_doublef.c	13;"	d	file:
nfmpi_iget_varm_double_	src/libf/iget_varm_doublef.c	15;"	d	file:
nfmpi_iget_varm_double_	src/libf/iget_varm_doublef.c	17;"	d	file:
nfmpi_iget_varm_double_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iget_varm_double_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], double*v7, MPI_Fint *v8 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], double*v7, MPI_Fint *v8 )
nfmpi_iget_varm_int1_	src/libf/iget_varm_int1f.c	/^FORTRAN_API int FORT_CALL nfmpi_iget_varm_int1_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], signed char * v7, MPI_Fint *v8 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], signed char * v7, MPI_Fint *v8 )
nfmpi_iget_varm_int1_	src/libf/iget_varm_int1f.c	13;"	d	file:
nfmpi_iget_varm_int1_	src/libf/iget_varm_int1f.c	15;"	d	file:
nfmpi_iget_varm_int1_	src/libf/iget_varm_int1f.c	17;"	d	file:
nfmpi_iget_varm_int1_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iget_varm_int1_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], signed char * v7, MPI_Fint *v8 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], signed char * v7, MPI_Fint *v8 )
nfmpi_iget_varm_int2_	src/libf/iget_varm_int2f.c	/^FORTRAN_API int FORT_CALL nfmpi_iget_varm_int2_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], short*v7, MPI_Fint *v8 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], short*v7, MPI_Fint *v8 )
nfmpi_iget_varm_int2_	src/libf/iget_varm_int2f.c	13;"	d	file:
nfmpi_iget_varm_int2_	src/libf/iget_varm_int2f.c	15;"	d	file:
nfmpi_iget_varm_int2_	src/libf/iget_varm_int2f.c	17;"	d	file:
nfmpi_iget_varm_int2_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iget_varm_int2_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], short*v7, MPI_Fint *v8 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], short*v7, MPI_Fint *v8 )
nfmpi_iget_varm_int_	src/libf/iget_varm_intf.c	/^FORTRAN_API int FORT_CALL nfmpi_iget_varm_int_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], MPI_Fint *v7, MPI_Fint *v8 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], MPI_Fint *v7, MPI_Fint *v8 )
nfmpi_iget_varm_int_	src/libf/iget_varm_intf.c	13;"	d	file:
nfmpi_iget_varm_int_	src/libf/iget_varm_intf.c	15;"	d	file:
nfmpi_iget_varm_int_	src/libf/iget_varm_intf.c	17;"	d	file:
nfmpi_iget_varm_int_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iget_varm_int_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], MPI_Fint *v7, MPI_Fint *v8 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], MPI_Fint *v7, MPI_Fint *v8 )
nfmpi_iget_varm_real_	src/libf/iget_varm_realf.c	/^FORTRAN_API int FORT_CALL nfmpi_iget_varm_real_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], float*v7, MPI_Fint *v8 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], float*v7, MPI_Fint *v8 )
nfmpi_iget_varm_real_	src/libf/iget_varm_realf.c	13;"	d	file:
nfmpi_iget_varm_real_	src/libf/iget_varm_realf.c	15;"	d	file:
nfmpi_iget_varm_real_	src/libf/iget_varm_realf.c	17;"	d	file:
nfmpi_iget_varm_real_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iget_varm_real_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], float*v7, MPI_Fint *v8 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], float*v7, MPI_Fint *v8 )
nfmpi_iget_varm_text_	src/libf/iget_varm_textf.c	/^FORTRAN_API int FORT_CALL nfmpi_iget_varm_text_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], char *v7 FORT_MIXED_LEN(d7), MPI_Fint *v8 FORT_END_LEN(d7) ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], char *v7 FORT_MIXED_LEN(d7), MPI_Fint *v8 FORT_END_LEN(d7) )
nfmpi_iget_varm_text_	src/libf/iget_varm_textf.c	13;"	d	file:
nfmpi_iget_varm_text_	src/libf/iget_varm_textf.c	15;"	d	file:
nfmpi_iget_varm_text_	src/libf/iget_varm_textf.c	17;"	d	file:
nfmpi_iget_varm_text_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iget_varm_text_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], char *v7 FORT_MIXED_LEN(d7), MPI_Fint *v8 FORT_END_LEN(d7) );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], char *v7 FORT_MIXED_LEN(d7), MPI_Fint *v8 FORT_END_LEN(d7) )
nfmpi_iget_vars_	src/libf/iget_varsf.c	/^FORTRAN_API int FORT_CALL nfmpi_iget_vars_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], void*v6, MPI_Offset *v7, MPI_Fint *v8, MPI_Fint *v9 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], void*v6, MPI_Offset *v7, MPI_Fint *v8, MPI_Fint *v9 )
nfmpi_iget_vars_	src/libf/iget_varsf.c	13;"	d	file:
nfmpi_iget_vars_	src/libf/iget_varsf.c	15;"	d	file:
nfmpi_iget_vars_	src/libf/iget_varsf.c	17;"	d	file:
nfmpi_iget_vars_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iget_vars_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], void*v6, MPI_Offset *v7, MPI_Fint *v8, MPI_Fint *v9 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], void*v6, MPI_Offset *v7, MPI_Fint *v8, MPI_Fint *v9 )
nfmpi_iget_vars_double_	src/libf/iget_vars_doublef.c	/^FORTRAN_API int FORT_CALL nfmpi_iget_vars_double_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], double*v6, MPI_Fint *v7 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], double*v6, MPI_Fint *v7 )
nfmpi_iget_vars_double_	src/libf/iget_vars_doublef.c	13;"	d	file:
nfmpi_iget_vars_double_	src/libf/iget_vars_doublef.c	15;"	d	file:
nfmpi_iget_vars_double_	src/libf/iget_vars_doublef.c	17;"	d	file:
nfmpi_iget_vars_double_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iget_vars_double_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], double*v6, MPI_Fint *v7 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], double*v6, MPI_Fint *v7 )
nfmpi_iget_vars_int1_	src/libf/iget_vars_int1f.c	/^FORTRAN_API int FORT_CALL nfmpi_iget_vars_int1_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], signed char * v6, MPI_Fint *v7 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], signed char * v6, MPI_Fint *v7 )
nfmpi_iget_vars_int1_	src/libf/iget_vars_int1f.c	13;"	d	file:
nfmpi_iget_vars_int1_	src/libf/iget_vars_int1f.c	15;"	d	file:
nfmpi_iget_vars_int1_	src/libf/iget_vars_int1f.c	17;"	d	file:
nfmpi_iget_vars_int1_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iget_vars_int1_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], signed char * v6, MPI_Fint *v7 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], signed char * v6, MPI_Fint *v7 )
nfmpi_iget_vars_int2_	src/libf/iget_vars_int2f.c	/^FORTRAN_API int FORT_CALL nfmpi_iget_vars_int2_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], short*v6, MPI_Fint *v7 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], short*v6, MPI_Fint *v7 )
nfmpi_iget_vars_int2_	src/libf/iget_vars_int2f.c	13;"	d	file:
nfmpi_iget_vars_int2_	src/libf/iget_vars_int2f.c	15;"	d	file:
nfmpi_iget_vars_int2_	src/libf/iget_vars_int2f.c	17;"	d	file:
nfmpi_iget_vars_int2_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iget_vars_int2_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], short*v6, MPI_Fint *v7 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], short*v6, MPI_Fint *v7 )
nfmpi_iget_vars_int_	src/libf/iget_vars_intf.c	/^FORTRAN_API int FORT_CALL nfmpi_iget_vars_int_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Fint *v6, MPI_Fint *v7 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Fint *v6, MPI_Fint *v7 )
nfmpi_iget_vars_int_	src/libf/iget_vars_intf.c	13;"	d	file:
nfmpi_iget_vars_int_	src/libf/iget_vars_intf.c	15;"	d	file:
nfmpi_iget_vars_int_	src/libf/iget_vars_intf.c	17;"	d	file:
nfmpi_iget_vars_int_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iget_vars_int_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Fint *v6, MPI_Fint *v7 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Fint *v6, MPI_Fint *v7 )
nfmpi_iget_vars_real_	src/libf/iget_vars_realf.c	/^FORTRAN_API int FORT_CALL nfmpi_iget_vars_real_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], float*v6, MPI_Fint *v7 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], float*v6, MPI_Fint *v7 )
nfmpi_iget_vars_real_	src/libf/iget_vars_realf.c	13;"	d	file:
nfmpi_iget_vars_real_	src/libf/iget_vars_realf.c	15;"	d	file:
nfmpi_iget_vars_real_	src/libf/iget_vars_realf.c	17;"	d	file:
nfmpi_iget_vars_real_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iget_vars_real_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], float*v6, MPI_Fint *v7 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], float*v6, MPI_Fint *v7 )
nfmpi_iget_vars_text_	src/libf/iget_vars_textf.c	/^FORTRAN_API int FORT_CALL nfmpi_iget_vars_text_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], char *v6 FORT_MIXED_LEN(d6), MPI_Fint *v7 FORT_END_LEN(d6) ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], char *v6 FORT_MIXED_LEN(d6), MPI_Fint *v7 FORT_END_LEN(d6) )
nfmpi_iget_vars_text_	src/libf/iget_vars_textf.c	13;"	d	file:
nfmpi_iget_vars_text_	src/libf/iget_vars_textf.c	15;"	d	file:
nfmpi_iget_vars_text_	src/libf/iget_vars_textf.c	17;"	d	file:
nfmpi_iget_vars_text_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iget_vars_text_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], char *v6 FORT_MIXED_LEN(d6), MPI_Fint *v7 FORT_END_LEN(d6) );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], char *v6 FORT_MIXED_LEN(d6), MPI_Fint *v7 FORT_END_LEN(d6) )
nfmpi_inq_	src/libf/inqf.c	/^FORTRAN_API int FORT_CALL nfmpi_inq_ ( int *v1, MPI_Fint *v2, MPI_Fint *v3, MPI_Fint *v4, MPI_Fint *v5 ){$/;"	f	signature:( int *v1, MPI_Fint *v2, MPI_Fint *v3, MPI_Fint *v4, MPI_Fint *v5 )
nfmpi_inq_	src/libf/inqf.c	13;"	d	file:
nfmpi_inq_	src/libf/inqf.c	15;"	d	file:
nfmpi_inq_	src/libf/inqf.c	17;"	d	file:
nfmpi_inq_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_inq_ ( int *v1, MPI_Fint *v2, MPI_Fint *v3, MPI_Fint *v4, MPI_Fint *v5 );$/;"	p	signature:( int *v1, MPI_Fint *v2, MPI_Fint *v3, MPI_Fint *v4, MPI_Fint *v5 )
nfmpi_inq_att_	src/libf/inq_attf.c	/^FORTRAN_API int FORT_CALL nfmpi_inq_att_ ( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), int *v4, MPI_Offset*v5 FORT_END_LEN(d3) ){$/;"	f	signature:( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), int *v4, MPI_Offset*v5 FORT_END_LEN(d3) )
nfmpi_inq_att_	src/libf/inq_attf.c	13;"	d	file:
nfmpi_inq_att_	src/libf/inq_attf.c	15;"	d	file:
nfmpi_inq_att_	src/libf/inq_attf.c	17;"	d	file:
nfmpi_inq_att_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_inq_att_ ( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), int *v4, MPI_Offset*v5 FORT_END_LEN(d3) );$/;"	p	signature:( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), int *v4, MPI_Offset*v5 FORT_END_LEN(d3) )
nfmpi_inq_attid_	src/libf/inq_attidf.c	/^FORTRAN_API int FORT_CALL nfmpi_inq_attid_ ( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), MPI_Fint *v4 FORT_END_LEN(d3) ){$/;"	f	signature:( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), MPI_Fint *v4 FORT_END_LEN(d3) )
nfmpi_inq_attid_	src/libf/inq_attidf.c	13;"	d	file:
nfmpi_inq_attid_	src/libf/inq_attidf.c	15;"	d	file:
nfmpi_inq_attid_	src/libf/inq_attidf.c	17;"	d	file:
nfmpi_inq_attid_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_inq_attid_ ( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), MPI_Fint *v4 FORT_END_LEN(d3) );$/;"	p	signature:( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), MPI_Fint *v4 FORT_END_LEN(d3) )
nfmpi_inq_attlen_	src/libf/inq_attlenf.c	/^FORTRAN_API int FORT_CALL nfmpi_inq_attlen_ ( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), MPI_Offset*v4 FORT_END_LEN(d3) ){$/;"	f	signature:( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), MPI_Offset*v4 FORT_END_LEN(d3) )
nfmpi_inq_attlen_	src/libf/inq_attlenf.c	13;"	d	file:
nfmpi_inq_attlen_	src/libf/inq_attlenf.c	15;"	d	file:
nfmpi_inq_attlen_	src/libf/inq_attlenf.c	17;"	d	file:
nfmpi_inq_attlen_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_inq_attlen_ ( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), MPI_Offset*v4 FORT_END_LEN(d3) );$/;"	p	signature:( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), MPI_Offset*v4 FORT_END_LEN(d3) )
nfmpi_inq_attname_	src/libf/inq_attnamef.c	/^FORTRAN_API int FORT_CALL nfmpi_inq_attname_ ( int *v1, int *v2, int *v3, char *v4 FORT_MIXED_LEN(d4) FORT_END_LEN(d4) ){$/;"	f	signature:( int *v1, int *v2, int *v3, char *v4 FORT_MIXED_LEN(d4) FORT_END_LEN(d4) )
nfmpi_inq_attname_	src/libf/inq_attnamef.c	13;"	d	file:
nfmpi_inq_attname_	src/libf/inq_attnamef.c	15;"	d	file:
nfmpi_inq_attname_	src/libf/inq_attnamef.c	17;"	d	file:
nfmpi_inq_attname_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_inq_attname_ ( int *v1, int *v2, int *v3, char *v4 FORT_MIXED_LEN(d4) FORT_END_LEN(d4) );$/;"	p	signature:( int *v1, int *v2, int *v3, char *v4 FORT_MIXED_LEN(d4) FORT_END_LEN(d4) )
nfmpi_inq_atttype_	src/libf/inq_atttypef.c	/^FORTRAN_API int FORT_CALL nfmpi_inq_atttype_ ( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), int *v4 FORT_END_LEN(d3) ){$/;"	f	signature:( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), int *v4 FORT_END_LEN(d3) )
nfmpi_inq_atttype_	src/libf/inq_atttypef.c	13;"	d	file:
nfmpi_inq_atttype_	src/libf/inq_atttypef.c	15;"	d	file:
nfmpi_inq_atttype_	src/libf/inq_atttypef.c	17;"	d	file:
nfmpi_inq_atttype_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_inq_atttype_ ( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), int *v4 FORT_END_LEN(d3) );$/;"	p	signature:( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), int *v4 FORT_END_LEN(d3) )
nfmpi_inq_dim_	src/libf/inq_dimf.c	/^FORTRAN_API int FORT_CALL nfmpi_inq_dim_ ( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), MPI_Offset*v4 FORT_END_LEN(d3) ){$/;"	f	signature:( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), MPI_Offset*v4 FORT_END_LEN(d3) )
nfmpi_inq_dim_	src/libf/inq_dimf.c	13;"	d	file:
nfmpi_inq_dim_	src/libf/inq_dimf.c	15;"	d	file:
nfmpi_inq_dim_	src/libf/inq_dimf.c	17;"	d	file:
nfmpi_inq_dim_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_inq_dim_ ( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), MPI_Offset*v4 FORT_END_LEN(d3) );$/;"	p	signature:( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), MPI_Offset*v4 FORT_END_LEN(d3) )
nfmpi_inq_dimid_	src/libf/inq_dimidf.c	/^FORTRAN_API int FORT_CALL nfmpi_inq_dimid_ ( int *v1, char *v2 FORT_MIXED_LEN(d2), MPI_Fint *v3 FORT_END_LEN(d2) ){$/;"	f	signature:( int *v1, char *v2 FORT_MIXED_LEN(d2), MPI_Fint *v3 FORT_END_LEN(d2) )
nfmpi_inq_dimid_	src/libf/inq_dimidf.c	13;"	d	file:
nfmpi_inq_dimid_	src/libf/inq_dimidf.c	15;"	d	file:
nfmpi_inq_dimid_	src/libf/inq_dimidf.c	17;"	d	file:
nfmpi_inq_dimid_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_inq_dimid_ ( int *v1, char *v2 FORT_MIXED_LEN(d2), MPI_Fint *v3 FORT_END_LEN(d2) );$/;"	p	signature:( int *v1, char *v2 FORT_MIXED_LEN(d2), MPI_Fint *v3 FORT_END_LEN(d2) )
nfmpi_inq_dimlen_	src/libf/inq_dimlenf.c	/^FORTRAN_API int FORT_CALL nfmpi_inq_dimlen_ ( int *v1, int *v2, MPI_Offset*v3 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset*v3 )
nfmpi_inq_dimlen_	src/libf/inq_dimlenf.c	13;"	d	file:
nfmpi_inq_dimlen_	src/libf/inq_dimlenf.c	15;"	d	file:
nfmpi_inq_dimlen_	src/libf/inq_dimlenf.c	17;"	d	file:
nfmpi_inq_dimlen_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_inq_dimlen_ ( int *v1, int *v2, MPI_Offset*v3 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset*v3 )
nfmpi_inq_dimname_	src/libf/inq_dimnamef.c	/^FORTRAN_API int FORT_CALL nfmpi_inq_dimname_ ( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3) FORT_END_LEN(d3) ){$/;"	f	signature:( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3) FORT_END_LEN(d3) )
nfmpi_inq_dimname_	src/libf/inq_dimnamef.c	13;"	d	file:
nfmpi_inq_dimname_	src/libf/inq_dimnamef.c	15;"	d	file:
nfmpi_inq_dimname_	src/libf/inq_dimnamef.c	17;"	d	file:
nfmpi_inq_dimname_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_inq_dimname_ ( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3) FORT_END_LEN(d3) );$/;"	p	signature:( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3) FORT_END_LEN(d3) )
nfmpi_inq_file_format_	src/libf/inq_file_formatf.c	/^FORTRAN_API int FORT_CALL nfmpi_inq_file_format_ ( char *v1 FORT_MIXED_LEN(d1), MPI_Fint *v2 FORT_END_LEN(d1) ){$/;"	f	signature:( char *v1 FORT_MIXED_LEN(d1), MPI_Fint *v2 FORT_END_LEN(d1) )
nfmpi_inq_file_format_	src/libf/inq_file_formatf.c	13;"	d	file:
nfmpi_inq_file_format_	src/libf/inq_file_formatf.c	15;"	d	file:
nfmpi_inq_file_format_	src/libf/inq_file_formatf.c	17;"	d	file:
nfmpi_inq_file_format_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_inq_file_format_ ( char *v1 FORT_MIXED_LEN(d1), MPI_Fint *v2 FORT_END_LEN(d1) );$/;"	p	signature:( char *v1 FORT_MIXED_LEN(d1), MPI_Fint *v2 FORT_END_LEN(d1) )
nfmpi_inq_format_	src/libf/inq_formatf.c	/^FORTRAN_API int FORT_CALL nfmpi_inq_format_ ( int *v1, MPI_Fint *v2 ){$/;"	f	signature:( int *v1, MPI_Fint *v2 )
nfmpi_inq_format_	src/libf/inq_formatf.c	13;"	d	file:
nfmpi_inq_format_	src/libf/inq_formatf.c	15;"	d	file:
nfmpi_inq_format_	src/libf/inq_formatf.c	17;"	d	file:
nfmpi_inq_format_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_inq_format_ ( int *v1, MPI_Fint *v2 );$/;"	p	signature:( int *v1, MPI_Fint *v2 )
nfmpi_inq_natts_	src/libf/inq_nattsf.c	/^FORTRAN_API int FORT_CALL nfmpi_inq_natts_ ( int *v1, MPI_Fint *v2 ){$/;"	f	signature:( int *v1, MPI_Fint *v2 )
nfmpi_inq_natts_	src/libf/inq_nattsf.c	13;"	d	file:
nfmpi_inq_natts_	src/libf/inq_nattsf.c	15;"	d	file:
nfmpi_inq_natts_	src/libf/inq_nattsf.c	17;"	d	file:
nfmpi_inq_natts_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_inq_natts_ ( int *v1, MPI_Fint *v2 );$/;"	p	signature:( int *v1, MPI_Fint *v2 )
nfmpi_inq_ndims_	src/libf/inq_ndimsf.c	/^FORTRAN_API int FORT_CALL nfmpi_inq_ndims_ ( int *v1, MPI_Fint *v2 ){$/;"	f	signature:( int *v1, MPI_Fint *v2 )
nfmpi_inq_ndims_	src/libf/inq_ndimsf.c	13;"	d	file:
nfmpi_inq_ndims_	src/libf/inq_ndimsf.c	15;"	d	file:
nfmpi_inq_ndims_	src/libf/inq_ndimsf.c	17;"	d	file:
nfmpi_inq_ndims_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_inq_ndims_ ( int *v1, MPI_Fint *v2 );$/;"	p	signature:( int *v1, MPI_Fint *v2 )
nfmpi_inq_nvars_	src/libf/inq_nvarsf.c	/^FORTRAN_API int FORT_CALL nfmpi_inq_nvars_ ( int *v1, MPI_Fint *v2 ){$/;"	f	signature:( int *v1, MPI_Fint *v2 )
nfmpi_inq_nvars_	src/libf/inq_nvarsf.c	13;"	d	file:
nfmpi_inq_nvars_	src/libf/inq_nvarsf.c	15;"	d	file:
nfmpi_inq_nvars_	src/libf/inq_nvarsf.c	17;"	d	file:
nfmpi_inq_nvars_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_inq_nvars_ ( int *v1, MPI_Fint *v2 );$/;"	p	signature:( int *v1, MPI_Fint *v2 )
nfmpi_inq_unlimdim_	src/libf/inq_unlimdimf.c	/^FORTRAN_API int FORT_CALL nfmpi_inq_unlimdim_ ( int *v1, MPI_Fint *v2 ){$/;"	f	signature:( int *v1, MPI_Fint *v2 )
nfmpi_inq_unlimdim_	src/libf/inq_unlimdimf.c	13;"	d	file:
nfmpi_inq_unlimdim_	src/libf/inq_unlimdimf.c	15;"	d	file:
nfmpi_inq_unlimdim_	src/libf/inq_unlimdimf.c	17;"	d	file:
nfmpi_inq_unlimdim_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_inq_unlimdim_ ( int *v1, MPI_Fint *v2 );$/;"	p	signature:( int *v1, MPI_Fint *v2 )
nfmpi_inq_var_	src/libf/inq_varf.c	/^FORTRAN_API int FORT_CALL nfmpi_inq_var_ ( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), int *v4, MPI_Fint *v5, MPI_Fint *v6, MPI_Fint *v7 FORT_END_LEN(d3) ){$/;"	f	signature:( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), int *v4, MPI_Fint *v5, MPI_Fint *v6, MPI_Fint *v7 FORT_END_LEN(d3) )
nfmpi_inq_var_	src/libf/inq_varf.c	13;"	d	file:
nfmpi_inq_var_	src/libf/inq_varf.c	15;"	d	file:
nfmpi_inq_var_	src/libf/inq_varf.c	17;"	d	file:
nfmpi_inq_var_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_inq_var_ ( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), int *v4, MPI_Fint *v5, MPI_Fint *v6, MPI_Fint *v7 FORT_END_LEN(d3) );$/;"	p	signature:( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), int *v4, MPI_Fint *v5, MPI_Fint *v6, MPI_Fint *v7 FORT_END_LEN(d3) )
nfmpi_inq_vardimid_	src/libf/inq_vardimidf.c	/^FORTRAN_API int FORT_CALL nfmpi_inq_vardimid_ ( int *v1, int *v2, MPI_Fint *v3 ){$/;"	f	signature:( int *v1, int *v2, MPI_Fint *v3 )
nfmpi_inq_vardimid_	src/libf/inq_vardimidf.c	13;"	d	file:
nfmpi_inq_vardimid_	src/libf/inq_vardimidf.c	15;"	d	file:
nfmpi_inq_vardimid_	src/libf/inq_vardimidf.c	17;"	d	file:
nfmpi_inq_vardimid_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_inq_vardimid_ ( int *v1, int *v2, MPI_Fint *v3 );$/;"	p	signature:( int *v1, int *v2, MPI_Fint *v3 )
nfmpi_inq_varid_	src/libf/inq_varidf.c	/^FORTRAN_API int FORT_CALL nfmpi_inq_varid_ ( int *v1, char *v2 FORT_MIXED_LEN(d2), MPI_Fint *v3 FORT_END_LEN(d2) ){$/;"	f	signature:( int *v1, char *v2 FORT_MIXED_LEN(d2), MPI_Fint *v3 FORT_END_LEN(d2) )
nfmpi_inq_varid_	src/libf/inq_varidf.c	13;"	d	file:
nfmpi_inq_varid_	src/libf/inq_varidf.c	15;"	d	file:
nfmpi_inq_varid_	src/libf/inq_varidf.c	17;"	d	file:
nfmpi_inq_varid_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_inq_varid_ ( int *v1, char *v2 FORT_MIXED_LEN(d2), MPI_Fint *v3 FORT_END_LEN(d2) );$/;"	p	signature:( int *v1, char *v2 FORT_MIXED_LEN(d2), MPI_Fint *v3 FORT_END_LEN(d2) )
nfmpi_inq_varname_	src/libf/inq_varnamef.c	/^FORTRAN_API int FORT_CALL nfmpi_inq_varname_ ( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3) FORT_END_LEN(d3) ){$/;"	f	signature:( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3) FORT_END_LEN(d3) )
nfmpi_inq_varname_	src/libf/inq_varnamef.c	13;"	d	file:
nfmpi_inq_varname_	src/libf/inq_varnamef.c	15;"	d	file:
nfmpi_inq_varname_	src/libf/inq_varnamef.c	17;"	d	file:
nfmpi_inq_varname_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_inq_varname_ ( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3) FORT_END_LEN(d3) );$/;"	p	signature:( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3) FORT_END_LEN(d3) )
nfmpi_inq_varnatts_	src/libf/inq_varnattsf.c	/^FORTRAN_API int FORT_CALL nfmpi_inq_varnatts_ ( int *v1, int *v2, MPI_Fint *v3 ){$/;"	f	signature:( int *v1, int *v2, MPI_Fint *v3 )
nfmpi_inq_varnatts_	src/libf/inq_varnattsf.c	13;"	d	file:
nfmpi_inq_varnatts_	src/libf/inq_varnattsf.c	15;"	d	file:
nfmpi_inq_varnatts_	src/libf/inq_varnattsf.c	17;"	d	file:
nfmpi_inq_varnatts_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_inq_varnatts_ ( int *v1, int *v2, MPI_Fint *v3 );$/;"	p	signature:( int *v1, int *v2, MPI_Fint *v3 )
nfmpi_inq_varndims_	src/libf/inq_varndimsf.c	/^FORTRAN_API int FORT_CALL nfmpi_inq_varndims_ ( int *v1, int *v2, MPI_Fint *v3 ){$/;"	f	signature:( int *v1, int *v2, MPI_Fint *v3 )
nfmpi_inq_varndims_	src/libf/inq_varndimsf.c	13;"	d	file:
nfmpi_inq_varndims_	src/libf/inq_varndimsf.c	15;"	d	file:
nfmpi_inq_varndims_	src/libf/inq_varndimsf.c	17;"	d	file:
nfmpi_inq_varndims_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_inq_varndims_ ( int *v1, int *v2, MPI_Fint *v3 );$/;"	p	signature:( int *v1, int *v2, MPI_Fint *v3 )
nfmpi_inq_vartype_	src/libf/inq_vartypef.c	/^FORTRAN_API int FORT_CALL nfmpi_inq_vartype_ ( int *v1, int *v2, int *v3 ){$/;"	f	signature:( int *v1, int *v2, int *v3 )
nfmpi_inq_vartype_	src/libf/inq_vartypef.c	13;"	d	file:
nfmpi_inq_vartype_	src/libf/inq_vartypef.c	15;"	d	file:
nfmpi_inq_vartype_	src/libf/inq_vartypef.c	17;"	d	file:
nfmpi_inq_vartype_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_inq_vartype_ ( int *v1, int *v2, int *v3 );$/;"	p	signature:( int *v1, int *v2, int *v3 )
nfmpi_inq_version_	src/libf/inq_versionf.c	/^FORTRAN_API int FORT_CALL nfmpi_inq_version_ ( int *v1, MPI_Fint *v2 ){$/;"	f	signature:( int *v1, MPI_Fint *v2 )
nfmpi_inq_version_	src/libf/inq_versionf.c	13;"	d	file:
nfmpi_inq_version_	src/libf/inq_versionf.c	15;"	d	file:
nfmpi_inq_version_	src/libf/inq_versionf.c	17;"	d	file:
nfmpi_inq_version_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_inq_version_ ( int *v1, MPI_Fint *v2 );$/;"	p	signature:( int *v1, MPI_Fint *v2 )
nfmpi_iput_var1_	src/libf/iput_var1f.c	/^FORTRAN_API int FORT_CALL nfmpi_iput_var1_ ( int *v1, int *v2, MPI_Offset v3[], void*v4, MPI_Offset *v5, MPI_Fint *v6, MPI_Fint *v7 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], void*v4, MPI_Offset *v5, MPI_Fint *v6, MPI_Fint *v7 )
nfmpi_iput_var1_	src/libf/iput_var1f.c	13;"	d	file:
nfmpi_iput_var1_	src/libf/iput_var1f.c	15;"	d	file:
nfmpi_iput_var1_	src/libf/iput_var1f.c	17;"	d	file:
nfmpi_iput_var1_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iput_var1_ ( int *v1, int *v2, MPI_Offset v3[], void*v4, MPI_Offset *v5, MPI_Fint *v6, MPI_Fint *v7 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], void*v4, MPI_Offset *v5, MPI_Fint *v6, MPI_Fint *v7 )
nfmpi_iput_var1_double_	src/libf/iput_var1_doublef.c	/^FORTRAN_API int FORT_CALL nfmpi_iput_var1_double_ ( int *v1, int *v2, MPI_Offset v3[], double*v4, MPI_Fint *v5 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], double*v4, MPI_Fint *v5 )
nfmpi_iput_var1_double_	src/libf/iput_var1_doublef.c	13;"	d	file:
nfmpi_iput_var1_double_	src/libf/iput_var1_doublef.c	15;"	d	file:
nfmpi_iput_var1_double_	src/libf/iput_var1_doublef.c	17;"	d	file:
nfmpi_iput_var1_double_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iput_var1_double_ ( int *v1, int *v2, MPI_Offset v3[], double*v4, MPI_Fint *v5 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], double*v4, MPI_Fint *v5 )
nfmpi_iput_var1_int1_	src/libf/iput_var1_int1f.c	/^FORTRAN_API int FORT_CALL nfmpi_iput_var1_int1_ ( int *v1, int *v2, MPI_Offset v3[], const signed char * v4, MPI_Fint *v5 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], const signed char * v4, MPI_Fint *v5 )
nfmpi_iput_var1_int1_	src/libf/iput_var1_int1f.c	13;"	d	file:
nfmpi_iput_var1_int1_	src/libf/iput_var1_int1f.c	15;"	d	file:
nfmpi_iput_var1_int1_	src/libf/iput_var1_int1f.c	17;"	d	file:
nfmpi_iput_var1_int1_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iput_var1_int1_ ( int *v1, int *v2, MPI_Offset v3[], const signed char * v4, MPI_Fint *v5 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], const signed char * v4, MPI_Fint *v5 )
nfmpi_iput_var1_int2_	src/libf/iput_var1_int2f.c	/^FORTRAN_API int FORT_CALL nfmpi_iput_var1_int2_ ( int *v1, int *v2, MPI_Offset v3[], short*v4, MPI_Fint *v5 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], short*v4, MPI_Fint *v5 )
nfmpi_iput_var1_int2_	src/libf/iput_var1_int2f.c	13;"	d	file:
nfmpi_iput_var1_int2_	src/libf/iput_var1_int2f.c	15;"	d	file:
nfmpi_iput_var1_int2_	src/libf/iput_var1_int2f.c	17;"	d	file:
nfmpi_iput_var1_int2_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iput_var1_int2_ ( int *v1, int *v2, MPI_Offset v3[], short*v4, MPI_Fint *v5 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], short*v4, MPI_Fint *v5 )
nfmpi_iput_var1_int_	src/libf/iput_var1_intf.c	/^FORTRAN_API int FORT_CALL nfmpi_iput_var1_int_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Fint *v4, MPI_Fint *v5 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Fint *v4, MPI_Fint *v5 )
nfmpi_iput_var1_int_	src/libf/iput_var1_intf.c	13;"	d	file:
nfmpi_iput_var1_int_	src/libf/iput_var1_intf.c	15;"	d	file:
nfmpi_iput_var1_int_	src/libf/iput_var1_intf.c	17;"	d	file:
nfmpi_iput_var1_int_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iput_var1_int_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Fint *v4, MPI_Fint *v5 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Fint *v4, MPI_Fint *v5 )
nfmpi_iput_var1_real_	src/libf/iput_var1_realf.c	/^FORTRAN_API int FORT_CALL nfmpi_iput_var1_real_ ( int *v1, int *v2, MPI_Offset v3[], float*v4, MPI_Fint *v5 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], float*v4, MPI_Fint *v5 )
nfmpi_iput_var1_real_	src/libf/iput_var1_realf.c	13;"	d	file:
nfmpi_iput_var1_real_	src/libf/iput_var1_realf.c	15;"	d	file:
nfmpi_iput_var1_real_	src/libf/iput_var1_realf.c	17;"	d	file:
nfmpi_iput_var1_real_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iput_var1_real_ ( int *v1, int *v2, MPI_Offset v3[], float*v4, MPI_Fint *v5 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], float*v4, MPI_Fint *v5 )
nfmpi_iput_var1_text_	src/libf/iput_var1_textf.c	/^FORTRAN_API int FORT_CALL nfmpi_iput_var1_text_ ( int *v1, int *v2, MPI_Offset v3[], char *v4 FORT_MIXED_LEN(d4), MPI_Fint *v5 FORT_END_LEN(d4) ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], char *v4 FORT_MIXED_LEN(d4), MPI_Fint *v5 FORT_END_LEN(d4) )
nfmpi_iput_var1_text_	src/libf/iput_var1_textf.c	13;"	d	file:
nfmpi_iput_var1_text_	src/libf/iput_var1_textf.c	15;"	d	file:
nfmpi_iput_var1_text_	src/libf/iput_var1_textf.c	17;"	d	file:
nfmpi_iput_var1_text_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iput_var1_text_ ( int *v1, int *v2, MPI_Offset v3[], char *v4 FORT_MIXED_LEN(d4), MPI_Fint *v5 FORT_END_LEN(d4) );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], char *v4 FORT_MIXED_LEN(d4), MPI_Fint *v5 FORT_END_LEN(d4) )
nfmpi_iput_var_	src/libf/iput_varf.c	/^FORTRAN_API int FORT_CALL nfmpi_iput_var_ ( int *v1, int *v2, void*v3, MPI_Offset *v4, MPI_Fint *v5, MPI_Fint *v6 ){$/;"	f	signature:( int *v1, int *v2, void*v3, MPI_Offset *v4, MPI_Fint *v5, MPI_Fint *v6 )
nfmpi_iput_var_	src/libf/iput_varf.c	13;"	d	file:
nfmpi_iput_var_	src/libf/iput_varf.c	15;"	d	file:
nfmpi_iput_var_	src/libf/iput_varf.c	17;"	d	file:
nfmpi_iput_var_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iput_var_ ( int *v1, int *v2, void*v3, MPI_Offset *v4, MPI_Fint *v5, MPI_Fint *v6 );$/;"	p	signature:( int *v1, int *v2, void*v3, MPI_Offset *v4, MPI_Fint *v5, MPI_Fint *v6 )
nfmpi_iput_var_double_	src/libf/iput_var_doublef.c	/^FORTRAN_API int FORT_CALL nfmpi_iput_var_double_ ( int *v1, int *v2, double*v3, MPI_Fint *v4 ){$/;"	f	signature:( int *v1, int *v2, double*v3, MPI_Fint *v4 )
nfmpi_iput_var_double_	src/libf/iput_var_doublef.c	13;"	d	file:
nfmpi_iput_var_double_	src/libf/iput_var_doublef.c	15;"	d	file:
nfmpi_iput_var_double_	src/libf/iput_var_doublef.c	17;"	d	file:
nfmpi_iput_var_double_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iput_var_double_ ( int *v1, int *v2, double*v3, MPI_Fint *v4 );$/;"	p	signature:( int *v1, int *v2, double*v3, MPI_Fint *v4 )
nfmpi_iput_var_int1_	src/libf/iput_var_int1f.c	/^FORTRAN_API int FORT_CALL nfmpi_iput_var_int1_ ( int *v1, int *v2, const signed char * v3, MPI_Fint *v4 ){$/;"	f	signature:( int *v1, int *v2, const signed char * v3, MPI_Fint *v4 )
nfmpi_iput_var_int1_	src/libf/iput_var_int1f.c	13;"	d	file:
nfmpi_iput_var_int1_	src/libf/iput_var_int1f.c	15;"	d	file:
nfmpi_iput_var_int1_	src/libf/iput_var_int1f.c	17;"	d	file:
nfmpi_iput_var_int1_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iput_var_int1_ ( int *v1, int *v2, const signed char * v3, MPI_Fint *v4 );$/;"	p	signature:( int *v1, int *v2, const signed char * v3, MPI_Fint *v4 )
nfmpi_iput_var_int2_	src/libf/iput_var_int2f.c	/^FORTRAN_API int FORT_CALL nfmpi_iput_var_int2_ ( int *v1, int *v2, short*v3, MPI_Fint *v4 ){$/;"	f	signature:( int *v1, int *v2, short*v3, MPI_Fint *v4 )
nfmpi_iput_var_int2_	src/libf/iput_var_int2f.c	13;"	d	file:
nfmpi_iput_var_int2_	src/libf/iput_var_int2f.c	15;"	d	file:
nfmpi_iput_var_int2_	src/libf/iput_var_int2f.c	17;"	d	file:
nfmpi_iput_var_int2_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iput_var_int2_ ( int *v1, int *v2, short*v3, MPI_Fint *v4 );$/;"	p	signature:( int *v1, int *v2, short*v3, MPI_Fint *v4 )
nfmpi_iput_var_int_	src/libf/iput_var_intf.c	/^FORTRAN_API int FORT_CALL nfmpi_iput_var_int_ ( int *v1, int *v2, MPI_Fint *v3, MPI_Fint *v4 ){$/;"	f	signature:( int *v1, int *v2, MPI_Fint *v3, MPI_Fint *v4 )
nfmpi_iput_var_int_	src/libf/iput_var_intf.c	13;"	d	file:
nfmpi_iput_var_int_	src/libf/iput_var_intf.c	15;"	d	file:
nfmpi_iput_var_int_	src/libf/iput_var_intf.c	17;"	d	file:
nfmpi_iput_var_int_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iput_var_int_ ( int *v1, int *v2, MPI_Fint *v3, MPI_Fint *v4 );$/;"	p	signature:( int *v1, int *v2, MPI_Fint *v3, MPI_Fint *v4 )
nfmpi_iput_var_real_	src/libf/iput_var_realf.c	/^FORTRAN_API int FORT_CALL nfmpi_iput_var_real_ ( int *v1, int *v2, float*v3, MPI_Fint *v4 ){$/;"	f	signature:( int *v1, int *v2, float*v3, MPI_Fint *v4 )
nfmpi_iput_var_real_	src/libf/iput_var_realf.c	13;"	d	file:
nfmpi_iput_var_real_	src/libf/iput_var_realf.c	15;"	d	file:
nfmpi_iput_var_real_	src/libf/iput_var_realf.c	17;"	d	file:
nfmpi_iput_var_real_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iput_var_real_ ( int *v1, int *v2, float*v3, MPI_Fint *v4 );$/;"	p	signature:( int *v1, int *v2, float*v3, MPI_Fint *v4 )
nfmpi_iput_var_text_	src/libf/iput_var_textf.c	/^FORTRAN_API int FORT_CALL nfmpi_iput_var_text_ ( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), MPI_Fint *v4 FORT_END_LEN(d3) ){$/;"	f	signature:( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), MPI_Fint *v4 FORT_END_LEN(d3) )
nfmpi_iput_var_text_	src/libf/iput_var_textf.c	13;"	d	file:
nfmpi_iput_var_text_	src/libf/iput_var_textf.c	15;"	d	file:
nfmpi_iput_var_text_	src/libf/iput_var_textf.c	17;"	d	file:
nfmpi_iput_var_text_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iput_var_text_ ( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), MPI_Fint *v4 FORT_END_LEN(d3) );$/;"	p	signature:( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), MPI_Fint *v4 FORT_END_LEN(d3) )
nfmpi_iput_vara_	src/libf/iput_varaf.c	/^FORTRAN_API int FORT_CALL nfmpi_iput_vara_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], void*v5, MPI_Offset *v6, MPI_Fint *v7, MPI_Fint *v8 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], void*v5, MPI_Offset *v6, MPI_Fint *v7, MPI_Fint *v8 )
nfmpi_iput_vara_	src/libf/iput_varaf.c	13;"	d	file:
nfmpi_iput_vara_	src/libf/iput_varaf.c	15;"	d	file:
nfmpi_iput_vara_	src/libf/iput_varaf.c	17;"	d	file:
nfmpi_iput_vara_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iput_vara_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], void*v5, MPI_Offset *v6, MPI_Fint *v7, MPI_Fint *v8 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], void*v5, MPI_Offset *v6, MPI_Fint *v7, MPI_Fint *v8 )
nfmpi_iput_vara_double_	src/libf/iput_vara_doublef.c	/^FORTRAN_API int FORT_CALL nfmpi_iput_vara_double_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], double*v5, MPI_Fint *v6 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], double*v5, MPI_Fint *v6 )
nfmpi_iput_vara_double_	src/libf/iput_vara_doublef.c	13;"	d	file:
nfmpi_iput_vara_double_	src/libf/iput_vara_doublef.c	15;"	d	file:
nfmpi_iput_vara_double_	src/libf/iput_vara_doublef.c	17;"	d	file:
nfmpi_iput_vara_double_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iput_vara_double_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], double*v5, MPI_Fint *v6 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], double*v5, MPI_Fint *v6 )
nfmpi_iput_vara_int1_	src/libf/iput_vara_int1f.c	/^FORTRAN_API int FORT_CALL nfmpi_iput_vara_int1_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], const signed char * v5, MPI_Fint *v6 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], const signed char * v5, MPI_Fint *v6 )
nfmpi_iput_vara_int1_	src/libf/iput_vara_int1f.c	13;"	d	file:
nfmpi_iput_vara_int1_	src/libf/iput_vara_int1f.c	15;"	d	file:
nfmpi_iput_vara_int1_	src/libf/iput_vara_int1f.c	17;"	d	file:
nfmpi_iput_vara_int1_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iput_vara_int1_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], const signed char * v5, MPI_Fint *v6 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], const signed char * v5, MPI_Fint *v6 )
nfmpi_iput_vara_int2_	src/libf/iput_vara_int2f.c	/^FORTRAN_API int FORT_CALL nfmpi_iput_vara_int2_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], short*v5, MPI_Fint *v6 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], short*v5, MPI_Fint *v6 )
nfmpi_iput_vara_int2_	src/libf/iput_vara_int2f.c	13;"	d	file:
nfmpi_iput_vara_int2_	src/libf/iput_vara_int2f.c	15;"	d	file:
nfmpi_iput_vara_int2_	src/libf/iput_vara_int2f.c	17;"	d	file:
nfmpi_iput_vara_int2_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iput_vara_int2_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], short*v5, MPI_Fint *v6 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], short*v5, MPI_Fint *v6 )
nfmpi_iput_vara_int_	src/libf/iput_vara_intf.c	/^FORTRAN_API int FORT_CALL nfmpi_iput_vara_int_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Fint *v5, MPI_Fint *v6 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Fint *v5, MPI_Fint *v6 )
nfmpi_iput_vara_int_	src/libf/iput_vara_intf.c	13;"	d	file:
nfmpi_iput_vara_int_	src/libf/iput_vara_intf.c	15;"	d	file:
nfmpi_iput_vara_int_	src/libf/iput_vara_intf.c	17;"	d	file:
nfmpi_iput_vara_int_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iput_vara_int_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Fint *v5, MPI_Fint *v6 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Fint *v5, MPI_Fint *v6 )
nfmpi_iput_vara_real_	src/libf/iput_vara_realf.c	/^FORTRAN_API int FORT_CALL nfmpi_iput_vara_real_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], float*v5, MPI_Fint *v6 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], float*v5, MPI_Fint *v6 )
nfmpi_iput_vara_real_	src/libf/iput_vara_realf.c	13;"	d	file:
nfmpi_iput_vara_real_	src/libf/iput_vara_realf.c	15;"	d	file:
nfmpi_iput_vara_real_	src/libf/iput_vara_realf.c	17;"	d	file:
nfmpi_iput_vara_real_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iput_vara_real_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], float*v5, MPI_Fint *v6 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], float*v5, MPI_Fint *v6 )
nfmpi_iput_vara_text_	src/libf/iput_vara_textf.c	/^FORTRAN_API int FORT_CALL nfmpi_iput_vara_text_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], char *v5 FORT_MIXED_LEN(d5), MPI_Fint *v6 FORT_END_LEN(d5) ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], char *v5 FORT_MIXED_LEN(d5), MPI_Fint *v6 FORT_END_LEN(d5) )
nfmpi_iput_vara_text_	src/libf/iput_vara_textf.c	13;"	d	file:
nfmpi_iput_vara_text_	src/libf/iput_vara_textf.c	15;"	d	file:
nfmpi_iput_vara_text_	src/libf/iput_vara_textf.c	17;"	d	file:
nfmpi_iput_vara_text_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iput_vara_text_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], char *v5 FORT_MIXED_LEN(d5), MPI_Fint *v6 FORT_END_LEN(d5) );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], char *v5 FORT_MIXED_LEN(d5), MPI_Fint *v6 FORT_END_LEN(d5) )
nfmpi_iput_varm_	src/libf/iput_varmf.c	/^FORTRAN_API int FORT_CALL nfmpi_iput_varm_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], void*v7, MPI_Offset *v8, MPI_Fint *v9, MPI_Fint *v10 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], void*v7, MPI_Offset *v8, MPI_Fint *v9, MPI_Fint *v10 )
nfmpi_iput_varm_	src/libf/iput_varmf.c	13;"	d	file:
nfmpi_iput_varm_	src/libf/iput_varmf.c	15;"	d	file:
nfmpi_iput_varm_	src/libf/iput_varmf.c	17;"	d	file:
nfmpi_iput_varm_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iput_varm_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], void*v7, MPI_Offset *v8, MPI_Fint *v9, MPI_Fint *v10 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], void*v7, MPI_Offset *v8, MPI_Fint *v9, MPI_Fint *v10 )
nfmpi_iput_varm_double_	src/libf/iput_varm_doublef.c	/^FORTRAN_API int FORT_CALL nfmpi_iput_varm_double_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], double*v7, MPI_Fint *v8 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], double*v7, MPI_Fint *v8 )
nfmpi_iput_varm_double_	src/libf/iput_varm_doublef.c	13;"	d	file:
nfmpi_iput_varm_double_	src/libf/iput_varm_doublef.c	15;"	d	file:
nfmpi_iput_varm_double_	src/libf/iput_varm_doublef.c	17;"	d	file:
nfmpi_iput_varm_double_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iput_varm_double_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], double*v7, MPI_Fint *v8 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], double*v7, MPI_Fint *v8 )
nfmpi_iput_varm_int1_	src/libf/iput_varm_int1f.c	/^FORTRAN_API int FORT_CALL nfmpi_iput_varm_int1_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], const signed char * v7, MPI_Fint *v8 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], const signed char * v7, MPI_Fint *v8 )
nfmpi_iput_varm_int1_	src/libf/iput_varm_int1f.c	13;"	d	file:
nfmpi_iput_varm_int1_	src/libf/iput_varm_int1f.c	15;"	d	file:
nfmpi_iput_varm_int1_	src/libf/iput_varm_int1f.c	17;"	d	file:
nfmpi_iput_varm_int1_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iput_varm_int1_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], const signed char * v7, MPI_Fint *v8 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], const signed char * v7, MPI_Fint *v8 )
nfmpi_iput_varm_int2_	src/libf/iput_varm_int2f.c	/^FORTRAN_API int FORT_CALL nfmpi_iput_varm_int2_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], short*v7, MPI_Fint *v8 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], short*v7, MPI_Fint *v8 )
nfmpi_iput_varm_int2_	src/libf/iput_varm_int2f.c	13;"	d	file:
nfmpi_iput_varm_int2_	src/libf/iput_varm_int2f.c	15;"	d	file:
nfmpi_iput_varm_int2_	src/libf/iput_varm_int2f.c	17;"	d	file:
nfmpi_iput_varm_int2_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iput_varm_int2_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], short*v7, MPI_Fint *v8 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], short*v7, MPI_Fint *v8 )
nfmpi_iput_varm_int_	src/libf/iput_varm_intf.c	/^FORTRAN_API int FORT_CALL nfmpi_iput_varm_int_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], MPI_Fint *v7, MPI_Fint *v8 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], MPI_Fint *v7, MPI_Fint *v8 )
nfmpi_iput_varm_int_	src/libf/iput_varm_intf.c	13;"	d	file:
nfmpi_iput_varm_int_	src/libf/iput_varm_intf.c	15;"	d	file:
nfmpi_iput_varm_int_	src/libf/iput_varm_intf.c	17;"	d	file:
nfmpi_iput_varm_int_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iput_varm_int_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], MPI_Fint *v7, MPI_Fint *v8 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], MPI_Fint *v7, MPI_Fint *v8 )
nfmpi_iput_varm_real_	src/libf/iput_varm_realf.c	/^FORTRAN_API int FORT_CALL nfmpi_iput_varm_real_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], float*v7, MPI_Fint *v8 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], float*v7, MPI_Fint *v8 )
nfmpi_iput_varm_real_	src/libf/iput_varm_realf.c	13;"	d	file:
nfmpi_iput_varm_real_	src/libf/iput_varm_realf.c	15;"	d	file:
nfmpi_iput_varm_real_	src/libf/iput_varm_realf.c	17;"	d	file:
nfmpi_iput_varm_real_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iput_varm_real_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], float*v7, MPI_Fint *v8 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], float*v7, MPI_Fint *v8 )
nfmpi_iput_varm_text_	src/libf/iput_varm_textf.c	/^FORTRAN_API int FORT_CALL nfmpi_iput_varm_text_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], char *v7 FORT_MIXED_LEN(d7), MPI_Fint *v8 FORT_END_LEN(d7) ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], char *v7 FORT_MIXED_LEN(d7), MPI_Fint *v8 FORT_END_LEN(d7) )
nfmpi_iput_varm_text_	src/libf/iput_varm_textf.c	13;"	d	file:
nfmpi_iput_varm_text_	src/libf/iput_varm_textf.c	15;"	d	file:
nfmpi_iput_varm_text_	src/libf/iput_varm_textf.c	17;"	d	file:
nfmpi_iput_varm_text_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iput_varm_text_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], char *v7 FORT_MIXED_LEN(d7), MPI_Fint *v8 FORT_END_LEN(d7) );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], char *v7 FORT_MIXED_LEN(d7), MPI_Fint *v8 FORT_END_LEN(d7) )
nfmpi_iput_vars_	src/libf/iput_varsf.c	/^FORTRAN_API int FORT_CALL nfmpi_iput_vars_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], void*v6, MPI_Offset *v7, MPI_Fint *v8, MPI_Fint *v9 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], void*v6, MPI_Offset *v7, MPI_Fint *v8, MPI_Fint *v9 )
nfmpi_iput_vars_	src/libf/iput_varsf.c	13;"	d	file:
nfmpi_iput_vars_	src/libf/iput_varsf.c	15;"	d	file:
nfmpi_iput_vars_	src/libf/iput_varsf.c	17;"	d	file:
nfmpi_iput_vars_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iput_vars_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], void*v6, MPI_Offset *v7, MPI_Fint *v8, MPI_Fint *v9 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], void*v6, MPI_Offset *v7, MPI_Fint *v8, MPI_Fint *v9 )
nfmpi_iput_vars_double_	src/libf/iput_vars_doublef.c	/^FORTRAN_API int FORT_CALL nfmpi_iput_vars_double_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], double*v6, MPI_Fint *v7 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], double*v6, MPI_Fint *v7 )
nfmpi_iput_vars_double_	src/libf/iput_vars_doublef.c	13;"	d	file:
nfmpi_iput_vars_double_	src/libf/iput_vars_doublef.c	15;"	d	file:
nfmpi_iput_vars_double_	src/libf/iput_vars_doublef.c	17;"	d	file:
nfmpi_iput_vars_double_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iput_vars_double_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], double*v6, MPI_Fint *v7 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], double*v6, MPI_Fint *v7 )
nfmpi_iput_vars_int1_	src/libf/iput_vars_int1f.c	/^FORTRAN_API int FORT_CALL nfmpi_iput_vars_int1_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], const signed char * v6, MPI_Fint *v7 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], const signed char * v6, MPI_Fint *v7 )
nfmpi_iput_vars_int1_	src/libf/iput_vars_int1f.c	13;"	d	file:
nfmpi_iput_vars_int1_	src/libf/iput_vars_int1f.c	15;"	d	file:
nfmpi_iput_vars_int1_	src/libf/iput_vars_int1f.c	17;"	d	file:
nfmpi_iput_vars_int1_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iput_vars_int1_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], const signed char * v6, MPI_Fint *v7 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], const signed char * v6, MPI_Fint *v7 )
nfmpi_iput_vars_int2_	src/libf/iput_vars_int2f.c	/^FORTRAN_API int FORT_CALL nfmpi_iput_vars_int2_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], short*v6, MPI_Fint *v7 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], short*v6, MPI_Fint *v7 )
nfmpi_iput_vars_int2_	src/libf/iput_vars_int2f.c	13;"	d	file:
nfmpi_iput_vars_int2_	src/libf/iput_vars_int2f.c	15;"	d	file:
nfmpi_iput_vars_int2_	src/libf/iput_vars_int2f.c	17;"	d	file:
nfmpi_iput_vars_int2_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iput_vars_int2_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], short*v6, MPI_Fint *v7 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], short*v6, MPI_Fint *v7 )
nfmpi_iput_vars_int_	src/libf/iput_vars_intf.c	/^FORTRAN_API int FORT_CALL nfmpi_iput_vars_int_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Fint *v6, MPI_Fint *v7 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Fint *v6, MPI_Fint *v7 )
nfmpi_iput_vars_int_	src/libf/iput_vars_intf.c	13;"	d	file:
nfmpi_iput_vars_int_	src/libf/iput_vars_intf.c	15;"	d	file:
nfmpi_iput_vars_int_	src/libf/iput_vars_intf.c	17;"	d	file:
nfmpi_iput_vars_int_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iput_vars_int_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Fint *v6, MPI_Fint *v7 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Fint *v6, MPI_Fint *v7 )
nfmpi_iput_vars_real_	src/libf/iput_vars_realf.c	/^FORTRAN_API int FORT_CALL nfmpi_iput_vars_real_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], float*v6, MPI_Fint *v7 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], float*v6, MPI_Fint *v7 )
nfmpi_iput_vars_real_	src/libf/iput_vars_realf.c	13;"	d	file:
nfmpi_iput_vars_real_	src/libf/iput_vars_realf.c	15;"	d	file:
nfmpi_iput_vars_real_	src/libf/iput_vars_realf.c	17;"	d	file:
nfmpi_iput_vars_real_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iput_vars_real_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], float*v6, MPI_Fint *v7 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], float*v6, MPI_Fint *v7 )
nfmpi_iput_vars_text_	src/libf/iput_vars_textf.c	/^FORTRAN_API int FORT_CALL nfmpi_iput_vars_text_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], char *v6 FORT_MIXED_LEN(d6), MPI_Fint *v7 FORT_END_LEN(d6) ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], char *v6 FORT_MIXED_LEN(d6), MPI_Fint *v7 FORT_END_LEN(d6) )
nfmpi_iput_vars_text_	src/libf/iput_vars_textf.c	13;"	d	file:
nfmpi_iput_vars_text_	src/libf/iput_vars_textf.c	15;"	d	file:
nfmpi_iput_vars_text_	src/libf/iput_vars_textf.c	17;"	d	file:
nfmpi_iput_vars_text_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_iput_vars_text_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], char *v6 FORT_MIXED_LEN(d6), MPI_Fint *v7 FORT_END_LEN(d6) );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], char *v6 FORT_MIXED_LEN(d6), MPI_Fint *v7 FORT_END_LEN(d6) )
nfmpi_issyserr_	src/libf/issyserrf.c	/^FORTRAN_API int FORT_CALL nfmpi_issyserr_ ( MPI_Fint *v1 ){$/;"	f	signature:( MPI_Fint *v1 )
nfmpi_issyserr_	src/libf/issyserrf.c	13;"	d	file:
nfmpi_issyserr_	src/libf/issyserrf.c	15;"	d	file:
nfmpi_issyserr_	src/libf/issyserrf.c	17;"	d	file:
nfmpi_issyserr_	src/libf/mpinetcdf_impl.h	/^extern FORTRAN_API int FORT_CALL nfmpi_issyserr_ ( MPI_Fint *v1 );$/;"	p	signature:( MPI_Fint *v1 )
nfmpi_open_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_open_ ( MPI_Fint *v1, char *v2 FORT_MIXED_LEN(d2), int *v3, MPI_Fint *v4, MPI_Fint *v5 FORT_END_LEN(d2) );$/;"	p	signature:( MPI_Fint *v1, char *v2 FORT_MIXED_LEN(d2), int *v3, MPI_Fint *v4, MPI_Fint *v5 FORT_END_LEN(d2) )
nfmpi_open_	src/libf/openf.c	/^FORTRAN_API int FORT_CALL nfmpi_open_ ( MPI_Fint *v1, char *v2 FORT_MIXED_LEN(d2), int *v3, MPI_Fint *v4, MPI_Fint *v5 FORT_END_LEN(d2) ){$/;"	f	signature:( MPI_Fint *v1, char *v2 FORT_MIXED_LEN(d2), int *v3, MPI_Fint *v4, MPI_Fint *v5 FORT_END_LEN(d2) )
nfmpi_open_	src/libf/openf.c	13;"	d	file:
nfmpi_open_	src/libf/openf.c	15;"	d	file:
nfmpi_open_	src/libf/openf.c	17;"	d	file:
nfmpi_put_att_double_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_put_att_double_ ( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), int *v4, MPI_Offset *v5, double*v6 FORT_END_LEN(d3) );$/;"	p	signature:( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), int *v4, MPI_Offset *v5, double*v6 FORT_END_LEN(d3) )
nfmpi_put_att_double_	src/libf/put_att_doublef.c	/^FORTRAN_API int FORT_CALL nfmpi_put_att_double_ ( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), int *v4, MPI_Offset *v5, double*v6 FORT_END_LEN(d3) ){$/;"	f	signature:( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), int *v4, MPI_Offset *v5, double*v6 FORT_END_LEN(d3) )
nfmpi_put_att_double_	src/libf/put_att_doublef.c	13;"	d	file:
nfmpi_put_att_double_	src/libf/put_att_doublef.c	15;"	d	file:
nfmpi_put_att_double_	src/libf/put_att_doublef.c	17;"	d	file:
nfmpi_put_att_int1_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_put_att_int1_ ( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), int *v4, MPI_Offset *v5, const signed char * v6 FORT_END_LEN(d3) );$/;"	p	signature:( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), int *v4, MPI_Offset *v5, const signed char * v6 FORT_END_LEN(d3) )
nfmpi_put_att_int1_	src/libf/put_att_int1f.c	/^FORTRAN_API int FORT_CALL nfmpi_put_att_int1_ ( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), int *v4, MPI_Offset *v5, const signed char * v6 FORT_END_LEN(d3) ){$/;"	f	signature:( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), int *v4, MPI_Offset *v5, const signed char * v6 FORT_END_LEN(d3) )
nfmpi_put_att_int1_	src/libf/put_att_int1f.c	13;"	d	file:
nfmpi_put_att_int1_	src/libf/put_att_int1f.c	15;"	d	file:
nfmpi_put_att_int1_	src/libf/put_att_int1f.c	17;"	d	file:
nfmpi_put_att_int2_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_put_att_int2_ ( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), int *v4, MPI_Offset *v5, short*v6 FORT_END_LEN(d3) );$/;"	p	signature:( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), int *v4, MPI_Offset *v5, short*v6 FORT_END_LEN(d3) )
nfmpi_put_att_int2_	src/libf/put_att_int2f.c	/^FORTRAN_API int FORT_CALL nfmpi_put_att_int2_ ( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), int *v4, MPI_Offset *v5, short*v6 FORT_END_LEN(d3) ){$/;"	f	signature:( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), int *v4, MPI_Offset *v5, short*v6 FORT_END_LEN(d3) )
nfmpi_put_att_int2_	src/libf/put_att_int2f.c	13;"	d	file:
nfmpi_put_att_int2_	src/libf/put_att_int2f.c	15;"	d	file:
nfmpi_put_att_int2_	src/libf/put_att_int2f.c	17;"	d	file:
nfmpi_put_att_int_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_put_att_int_ ( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), int *v4, MPI_Offset *v5, MPI_Fint *v6 FORT_END_LEN(d3) );$/;"	p	signature:( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), int *v4, MPI_Offset *v5, MPI_Fint *v6 FORT_END_LEN(d3) )
nfmpi_put_att_int_	src/libf/put_att_intf.c	/^FORTRAN_API int FORT_CALL nfmpi_put_att_int_ ( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), int *v4, MPI_Offset *v5, MPI_Fint *v6 FORT_END_LEN(d3) ){$/;"	f	signature:( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), int *v4, MPI_Offset *v5, MPI_Fint *v6 FORT_END_LEN(d3) )
nfmpi_put_att_int_	src/libf/put_att_intf.c	13;"	d	file:
nfmpi_put_att_int_	src/libf/put_att_intf.c	15;"	d	file:
nfmpi_put_att_int_	src/libf/put_att_intf.c	17;"	d	file:
nfmpi_put_att_real_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_put_att_real_ ( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), int *v4, MPI_Offset *v5, float*v6 FORT_END_LEN(d3) );$/;"	p	signature:( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), int *v4, MPI_Offset *v5, float*v6 FORT_END_LEN(d3) )
nfmpi_put_att_real_	src/libf/put_att_realf.c	/^FORTRAN_API int FORT_CALL nfmpi_put_att_real_ ( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), int *v4, MPI_Offset *v5, float*v6 FORT_END_LEN(d3) ){$/;"	f	signature:( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), int *v4, MPI_Offset *v5, float*v6 FORT_END_LEN(d3) )
nfmpi_put_att_real_	src/libf/put_att_realf.c	13;"	d	file:
nfmpi_put_att_real_	src/libf/put_att_realf.c	15;"	d	file:
nfmpi_put_att_real_	src/libf/put_att_realf.c	17;"	d	file:
nfmpi_put_att_text_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_put_att_text_ ( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), MPI_Offset *v4, char *v5 FORT_MIXED_LEN(d5) FORT_END_LEN(d3) FORT_END_LEN(d5) );$/;"	p	signature:( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), MPI_Offset *v4, char *v5 FORT_MIXED_LEN(d5) FORT_END_LEN(d3) FORT_END_LEN(d5) )
nfmpi_put_att_text_	src/libf/put_att_textf.c	/^FORTRAN_API int FORT_CALL nfmpi_put_att_text_ ( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), MPI_Offset *v4, char *v5 FORT_MIXED_LEN(d5) FORT_END_LEN(d3) FORT_END_LEN(d5) ){$/;"	f	signature:( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), MPI_Offset *v4, char *v5 FORT_MIXED_LEN(d5) FORT_END_LEN(d3) FORT_END_LEN(d5) )
nfmpi_put_att_text_	src/libf/put_att_textf.c	13;"	d	file:
nfmpi_put_att_text_	src/libf/put_att_textf.c	15;"	d	file:
nfmpi_put_att_text_	src/libf/put_att_textf.c	17;"	d	file:
nfmpi_put_var1_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_put_var1_ ( int *v1, int *v2, MPI_Offset v3[], void*v4, MPI_Offset *v5, MPI_Fint *v6 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], void*v4, MPI_Offset *v5, MPI_Fint *v6 )
nfmpi_put_var1_	src/libf/put_var1f.c	/^FORTRAN_API int FORT_CALL nfmpi_put_var1_ ( int *v1, int *v2, MPI_Offset v3[], void*v4, MPI_Offset *v5, MPI_Fint *v6 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], void*v4, MPI_Offset *v5, MPI_Fint *v6 )
nfmpi_put_var1_	src/libf/put_var1f.c	13;"	d	file:
nfmpi_put_var1_	src/libf/put_var1f.c	15;"	d	file:
nfmpi_put_var1_	src/libf/put_var1f.c	17;"	d	file:
nfmpi_put_var1_double_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_put_var1_double_ ( int *v1, int *v2, MPI_Offset v3[], double*v4 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], double*v4 )
nfmpi_put_var1_double_	src/libf/put_var1_doublef.c	/^FORTRAN_API int FORT_CALL nfmpi_put_var1_double_ ( int *v1, int *v2, MPI_Offset v3[], double*v4 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], double*v4 )
nfmpi_put_var1_double_	src/libf/put_var1_doublef.c	13;"	d	file:
nfmpi_put_var1_double_	src/libf/put_var1_doublef.c	15;"	d	file:
nfmpi_put_var1_double_	src/libf/put_var1_doublef.c	17;"	d	file:
nfmpi_put_var1_int1_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_put_var1_int1_ ( int *v1, int *v2, MPI_Offset v3[], const signed char * v4 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], const signed char * v4 )
nfmpi_put_var1_int1_	src/libf/put_var1_int1f.c	/^FORTRAN_API int FORT_CALL nfmpi_put_var1_int1_ ( int *v1, int *v2, MPI_Offset v3[], const signed char * v4 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], const signed char * v4 )
nfmpi_put_var1_int1_	src/libf/put_var1_int1f.c	13;"	d	file:
nfmpi_put_var1_int1_	src/libf/put_var1_int1f.c	15;"	d	file:
nfmpi_put_var1_int1_	src/libf/put_var1_int1f.c	17;"	d	file:
nfmpi_put_var1_int2_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_put_var1_int2_ ( int *v1, int *v2, MPI_Offset v3[], short*v4 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], short*v4 )
nfmpi_put_var1_int2_	src/libf/put_var1_int2f.c	/^FORTRAN_API int FORT_CALL nfmpi_put_var1_int2_ ( int *v1, int *v2, MPI_Offset v3[], short*v4 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], short*v4 )
nfmpi_put_var1_int2_	src/libf/put_var1_int2f.c	13;"	d	file:
nfmpi_put_var1_int2_	src/libf/put_var1_int2f.c	15;"	d	file:
nfmpi_put_var1_int2_	src/libf/put_var1_int2f.c	17;"	d	file:
nfmpi_put_var1_int_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_put_var1_int_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Fint *v4 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Fint *v4 )
nfmpi_put_var1_int_	src/libf/put_var1_intf.c	/^FORTRAN_API int FORT_CALL nfmpi_put_var1_int_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Fint *v4 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Fint *v4 )
nfmpi_put_var1_int_	src/libf/put_var1_intf.c	13;"	d	file:
nfmpi_put_var1_int_	src/libf/put_var1_intf.c	15;"	d	file:
nfmpi_put_var1_int_	src/libf/put_var1_intf.c	17;"	d	file:
nfmpi_put_var1_real_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_put_var1_real_ ( int *v1, int *v2, MPI_Offset v3[], float*v4 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], float*v4 )
nfmpi_put_var1_real_	src/libf/put_var1_realf.c	/^FORTRAN_API int FORT_CALL nfmpi_put_var1_real_ ( int *v1, int *v2, MPI_Offset v3[], float*v4 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], float*v4 )
nfmpi_put_var1_real_	src/libf/put_var1_realf.c	13;"	d	file:
nfmpi_put_var1_real_	src/libf/put_var1_realf.c	15;"	d	file:
nfmpi_put_var1_real_	src/libf/put_var1_realf.c	17;"	d	file:
nfmpi_put_var1_text_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_put_var1_text_ ( int *v1, int *v2, MPI_Offset v3[], char *v4 FORT_MIXED_LEN(d4) FORT_END_LEN(d4) );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], char *v4 FORT_MIXED_LEN(d4) FORT_END_LEN(d4) )
nfmpi_put_var1_text_	src/libf/put_var1_textf.c	/^FORTRAN_API int FORT_CALL nfmpi_put_var1_text_ ( int *v1, int *v2, MPI_Offset v3[], char *v4 FORT_MIXED_LEN(d4) FORT_END_LEN(d4) ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], char *v4 FORT_MIXED_LEN(d4) FORT_END_LEN(d4) )
nfmpi_put_var1_text_	src/libf/put_var1_textf.c	13;"	d	file:
nfmpi_put_var1_text_	src/libf/put_var1_textf.c	15;"	d	file:
nfmpi_put_var1_text_	src/libf/put_var1_textf.c	17;"	d	file:
nfmpi_put_var_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_put_var_ ( int *v1, int *v2, void*v3, MPI_Offset *v4, MPI_Fint *v5 );$/;"	p	signature:( int *v1, int *v2, void*v3, MPI_Offset *v4, MPI_Fint *v5 )
nfmpi_put_var_	src/libf/put_varf.c	/^FORTRAN_API int FORT_CALL nfmpi_put_var_ ( int *v1, int *v2, void*v3, MPI_Offset *v4, MPI_Fint *v5 ){$/;"	f	signature:( int *v1, int *v2, void*v3, MPI_Offset *v4, MPI_Fint *v5 )
nfmpi_put_var_	src/libf/put_varf.c	13;"	d	file:
nfmpi_put_var_	src/libf/put_varf.c	15;"	d	file:
nfmpi_put_var_	src/libf/put_varf.c	17;"	d	file:
nfmpi_put_var_all_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_put_var_all_ ( int *v1, int *v2, void*v3, MPI_Offset *v4, MPI_Fint *v5 );$/;"	p	signature:( int *v1, int *v2, void*v3, MPI_Offset *v4, MPI_Fint *v5 )
nfmpi_put_var_all_	src/libf/put_var_allf.c	/^FORTRAN_API int FORT_CALL nfmpi_put_var_all_ ( int *v1, int *v2, void*v3, MPI_Offset *v4, MPI_Fint *v5 ){$/;"	f	signature:( int *v1, int *v2, void*v3, MPI_Offset *v4, MPI_Fint *v5 )
nfmpi_put_var_all_	src/libf/put_var_allf.c	13;"	d	file:
nfmpi_put_var_all_	src/libf/put_var_allf.c	15;"	d	file:
nfmpi_put_var_all_	src/libf/put_var_allf.c	17;"	d	file:
nfmpi_put_var_double_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_put_var_double_ ( int *v1, int *v2, double*v3 );$/;"	p	signature:( int *v1, int *v2, double*v3 )
nfmpi_put_var_double_	src/libf/put_var_doublef.c	/^FORTRAN_API int FORT_CALL nfmpi_put_var_double_ ( int *v1, int *v2, double*v3 ){$/;"	f	signature:( int *v1, int *v2, double*v3 )
nfmpi_put_var_double_	src/libf/put_var_doublef.c	13;"	d	file:
nfmpi_put_var_double_	src/libf/put_var_doublef.c	15;"	d	file:
nfmpi_put_var_double_	src/libf/put_var_doublef.c	17;"	d	file:
nfmpi_put_var_double_all_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_put_var_double_all_ ( int *v1, int *v2, double*v3 );$/;"	p	signature:( int *v1, int *v2, double*v3 )
nfmpi_put_var_double_all_	src/libf/put_var_double_allf.c	/^FORTRAN_API int FORT_CALL nfmpi_put_var_double_all_ ( int *v1, int *v2, double*v3 ){$/;"	f	signature:( int *v1, int *v2, double*v3 )
nfmpi_put_var_double_all_	src/libf/put_var_double_allf.c	13;"	d	file:
nfmpi_put_var_double_all_	src/libf/put_var_double_allf.c	15;"	d	file:
nfmpi_put_var_double_all_	src/libf/put_var_double_allf.c	17;"	d	file:
nfmpi_put_var_int1_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_put_var_int1_ ( int *v1, int *v2, const signed char * v3 );$/;"	p	signature:( int *v1, int *v2, const signed char * v3 )
nfmpi_put_var_int1_	src/libf/put_var_int1f.c	/^FORTRAN_API int FORT_CALL nfmpi_put_var_int1_ ( int *v1, int *v2, const signed char * v3 ){$/;"	f	signature:( int *v1, int *v2, const signed char * v3 )
nfmpi_put_var_int1_	src/libf/put_var_int1f.c	13;"	d	file:
nfmpi_put_var_int1_	src/libf/put_var_int1f.c	15;"	d	file:
nfmpi_put_var_int1_	src/libf/put_var_int1f.c	17;"	d	file:
nfmpi_put_var_int1_all_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_put_var_int1_all_ ( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3) FORT_END_LEN(d3) );$/;"	p	signature:( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3) FORT_END_LEN(d3) )
nfmpi_put_var_int1_all_	src/libf/put_var_int1_allf.c	/^FORTRAN_API int FORT_CALL nfmpi_put_var_int1_all_ ( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3) FORT_END_LEN(d3) ){$/;"	f	signature:( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3) FORT_END_LEN(d3) )
nfmpi_put_var_int1_all_	src/libf/put_var_int1_allf.c	13;"	d	file:
nfmpi_put_var_int1_all_	src/libf/put_var_int1_allf.c	15;"	d	file:
nfmpi_put_var_int1_all_	src/libf/put_var_int1_allf.c	17;"	d	file:
nfmpi_put_var_int2_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_put_var_int2_ ( int *v1, int *v2, short*v3 );$/;"	p	signature:( int *v1, int *v2, short*v3 )
nfmpi_put_var_int2_	src/libf/put_var_int2f.c	/^FORTRAN_API int FORT_CALL nfmpi_put_var_int2_ ( int *v1, int *v2, short*v3 ){$/;"	f	signature:( int *v1, int *v2, short*v3 )
nfmpi_put_var_int2_	src/libf/put_var_int2f.c	13;"	d	file:
nfmpi_put_var_int2_	src/libf/put_var_int2f.c	15;"	d	file:
nfmpi_put_var_int2_	src/libf/put_var_int2f.c	17;"	d	file:
nfmpi_put_var_int2_all_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_put_var_int2_all_ ( int *v1, int *v2, short*v3 );$/;"	p	signature:( int *v1, int *v2, short*v3 )
nfmpi_put_var_int2_all_	src/libf/put_var_int2_allf.c	/^FORTRAN_API int FORT_CALL nfmpi_put_var_int2_all_ ( int *v1, int *v2, short*v3 ){$/;"	f	signature:( int *v1, int *v2, short*v3 )
nfmpi_put_var_int2_all_	src/libf/put_var_int2_allf.c	13;"	d	file:
nfmpi_put_var_int2_all_	src/libf/put_var_int2_allf.c	15;"	d	file:
nfmpi_put_var_int2_all_	src/libf/put_var_int2_allf.c	17;"	d	file:
nfmpi_put_var_int_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_put_var_int_ ( int *v1, int *v2, MPI_Fint *v3 );$/;"	p	signature:( int *v1, int *v2, MPI_Fint *v3 )
nfmpi_put_var_int_	src/libf/put_var_intf.c	/^FORTRAN_API int FORT_CALL nfmpi_put_var_int_ ( int *v1, int *v2, MPI_Fint *v3 ){$/;"	f	signature:( int *v1, int *v2, MPI_Fint *v3 )
nfmpi_put_var_int_	src/libf/put_var_intf.c	13;"	d	file:
nfmpi_put_var_int_	src/libf/put_var_intf.c	15;"	d	file:
nfmpi_put_var_int_	src/libf/put_var_intf.c	17;"	d	file:
nfmpi_put_var_int_all_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_put_var_int_all_ ( int *v1, int *v2, MPI_Fint *v3 );$/;"	p	signature:( int *v1, int *v2, MPI_Fint *v3 )
nfmpi_put_var_int_all_	src/libf/put_var_int_allf.c	/^FORTRAN_API int FORT_CALL nfmpi_put_var_int_all_ ( int *v1, int *v2, MPI_Fint *v3 ){$/;"	f	signature:( int *v1, int *v2, MPI_Fint *v3 )
nfmpi_put_var_int_all_	src/libf/put_var_int_allf.c	13;"	d	file:
nfmpi_put_var_int_all_	src/libf/put_var_int_allf.c	15;"	d	file:
nfmpi_put_var_int_all_	src/libf/put_var_int_allf.c	17;"	d	file:
nfmpi_put_var_real_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_put_var_real_ ( int *v1, int *v2, float*v3 );$/;"	p	signature:( int *v1, int *v2, float*v3 )
nfmpi_put_var_real_	src/libf/put_var_realf.c	/^FORTRAN_API int FORT_CALL nfmpi_put_var_real_ ( int *v1, int *v2, float*v3 ){$/;"	f	signature:( int *v1, int *v2, float*v3 )
nfmpi_put_var_real_	src/libf/put_var_realf.c	13;"	d	file:
nfmpi_put_var_real_	src/libf/put_var_realf.c	15;"	d	file:
nfmpi_put_var_real_	src/libf/put_var_realf.c	17;"	d	file:
nfmpi_put_var_real_all_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_put_var_real_all_ ( int *v1, int *v2, float*v3 );$/;"	p	signature:( int *v1, int *v2, float*v3 )
nfmpi_put_var_real_all_	src/libf/put_var_real_allf.c	/^FORTRAN_API int FORT_CALL nfmpi_put_var_real_all_ ( int *v1, int *v2, float*v3 ){$/;"	f	signature:( int *v1, int *v2, float*v3 )
nfmpi_put_var_real_all_	src/libf/put_var_real_allf.c	13;"	d	file:
nfmpi_put_var_real_all_	src/libf/put_var_real_allf.c	15;"	d	file:
nfmpi_put_var_real_all_	src/libf/put_var_real_allf.c	17;"	d	file:
nfmpi_put_var_text_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_put_var_text_ ( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3) FORT_END_LEN(d3) );$/;"	p	signature:( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3) FORT_END_LEN(d3) )
nfmpi_put_var_text_	src/libf/put_var_textf.c	/^FORTRAN_API int FORT_CALL nfmpi_put_var_text_ ( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3) FORT_END_LEN(d3) ){$/;"	f	signature:( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3) FORT_END_LEN(d3) )
nfmpi_put_var_text_	src/libf/put_var_textf.c	13;"	d	file:
nfmpi_put_var_text_	src/libf/put_var_textf.c	15;"	d	file:
nfmpi_put_var_text_	src/libf/put_var_textf.c	17;"	d	file:
nfmpi_put_var_text_all_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_put_var_text_all_ ( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3) FORT_END_LEN(d3) );$/;"	p	signature:( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3) FORT_END_LEN(d3) )
nfmpi_put_var_text_all_	src/libf/put_var_text_allf.c	/^FORTRAN_API int FORT_CALL nfmpi_put_var_text_all_ ( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3) FORT_END_LEN(d3) ){$/;"	f	signature:( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3) FORT_END_LEN(d3) )
nfmpi_put_var_text_all_	src/libf/put_var_text_allf.c	13;"	d	file:
nfmpi_put_var_text_all_	src/libf/put_var_text_allf.c	15;"	d	file:
nfmpi_put_var_text_all_	src/libf/put_var_text_allf.c	17;"	d	file:
nfmpi_put_vara_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_put_vara_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], void*v5, MPI_Offset *v6, MPI_Fint *v7 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], void*v5, MPI_Offset *v6, MPI_Fint *v7 )
nfmpi_put_vara_	src/libf/put_varaf.c	/^FORTRAN_API int FORT_CALL nfmpi_put_vara_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], void*v5, MPI_Offset *v6, MPI_Fint *v7 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], void*v5, MPI_Offset *v6, MPI_Fint *v7 )
nfmpi_put_vara_	src/libf/put_varaf.c	13;"	d	file:
nfmpi_put_vara_	src/libf/put_varaf.c	15;"	d	file:
nfmpi_put_vara_	src/libf/put_varaf.c	17;"	d	file:
nfmpi_put_vara_all_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_put_vara_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], void*v5, MPI_Offset *v6, MPI_Fint *v7 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], void*v5, MPI_Offset *v6, MPI_Fint *v7 )
nfmpi_put_vara_all_	src/libf/put_vara_allf.c	/^FORTRAN_API int FORT_CALL nfmpi_put_vara_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], void*v5, MPI_Offset *v6, MPI_Fint *v7 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], void*v5, MPI_Offset *v6, MPI_Fint *v7 )
nfmpi_put_vara_all_	src/libf/put_vara_allf.c	13;"	d	file:
nfmpi_put_vara_all_	src/libf/put_vara_allf.c	15;"	d	file:
nfmpi_put_vara_all_	src/libf/put_vara_allf.c	17;"	d	file:
nfmpi_put_vara_double_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_put_vara_double_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], double*v5 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], double*v5 )
nfmpi_put_vara_double_	src/libf/put_vara_doublef.c	/^FORTRAN_API int FORT_CALL nfmpi_put_vara_double_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], double*v5 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], double*v5 )
nfmpi_put_vara_double_	src/libf/put_vara_doublef.c	13;"	d	file:
nfmpi_put_vara_double_	src/libf/put_vara_doublef.c	15;"	d	file:
nfmpi_put_vara_double_	src/libf/put_vara_doublef.c	17;"	d	file:
nfmpi_put_vara_double_all_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_put_vara_double_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], double*v5 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], double*v5 )
nfmpi_put_vara_double_all_	src/libf/put_vara_double_allf.c	/^FORTRAN_API int FORT_CALL nfmpi_put_vara_double_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], double*v5 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], double*v5 )
nfmpi_put_vara_double_all_	src/libf/put_vara_double_allf.c	13;"	d	file:
nfmpi_put_vara_double_all_	src/libf/put_vara_double_allf.c	15;"	d	file:
nfmpi_put_vara_double_all_	src/libf/put_vara_double_allf.c	17;"	d	file:
nfmpi_put_vara_int1_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_put_vara_int1_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], const signed char * v5 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], const signed char * v5 )
nfmpi_put_vara_int1_	src/libf/put_vara_int1f.c	/^FORTRAN_API int FORT_CALL nfmpi_put_vara_int1_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], const signed char * v5 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], const signed char * v5 )
nfmpi_put_vara_int1_	src/libf/put_vara_int1f.c	13;"	d	file:
nfmpi_put_vara_int1_	src/libf/put_vara_int1f.c	15;"	d	file:
nfmpi_put_vara_int1_	src/libf/put_vara_int1f.c	17;"	d	file:
nfmpi_put_vara_int1_all_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_put_vara_int1_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], const signed char * v5 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], const signed char * v5 )
nfmpi_put_vara_int1_all_	src/libf/put_vara_int1_allf.c	/^FORTRAN_API int FORT_CALL nfmpi_put_vara_int1_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], const signed char * v5 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], const signed char * v5 )
nfmpi_put_vara_int1_all_	src/libf/put_vara_int1_allf.c	13;"	d	file:
nfmpi_put_vara_int1_all_	src/libf/put_vara_int1_allf.c	15;"	d	file:
nfmpi_put_vara_int1_all_	src/libf/put_vara_int1_allf.c	17;"	d	file:
nfmpi_put_vara_int2_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_put_vara_int2_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], short*v5 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], short*v5 )
nfmpi_put_vara_int2_	src/libf/put_vara_int2f.c	/^FORTRAN_API int FORT_CALL nfmpi_put_vara_int2_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], short*v5 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], short*v5 )
nfmpi_put_vara_int2_	src/libf/put_vara_int2f.c	13;"	d	file:
nfmpi_put_vara_int2_	src/libf/put_vara_int2f.c	15;"	d	file:
nfmpi_put_vara_int2_	src/libf/put_vara_int2f.c	17;"	d	file:
nfmpi_put_vara_int2_all_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_put_vara_int2_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], short*v5 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], short*v5 )
nfmpi_put_vara_int2_all_	src/libf/put_vara_int2_allf.c	/^FORTRAN_API int FORT_CALL nfmpi_put_vara_int2_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], short*v5 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], short*v5 )
nfmpi_put_vara_int2_all_	src/libf/put_vara_int2_allf.c	13;"	d	file:
nfmpi_put_vara_int2_all_	src/libf/put_vara_int2_allf.c	15;"	d	file:
nfmpi_put_vara_int2_all_	src/libf/put_vara_int2_allf.c	17;"	d	file:
nfmpi_put_vara_int_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_put_vara_int_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Fint *v5 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Fint *v5 )
nfmpi_put_vara_int_	src/libf/put_vara_intf.c	/^FORTRAN_API int FORT_CALL nfmpi_put_vara_int_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Fint *v5 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Fint *v5 )
nfmpi_put_vara_int_	src/libf/put_vara_intf.c	13;"	d	file:
nfmpi_put_vara_int_	src/libf/put_vara_intf.c	15;"	d	file:
nfmpi_put_vara_int_	src/libf/put_vara_intf.c	17;"	d	file:
nfmpi_put_vara_int_all_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_put_vara_int_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Fint *v5 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Fint *v5 )
nfmpi_put_vara_int_all_	src/libf/put_vara_int_allf.c	/^FORTRAN_API int FORT_CALL nfmpi_put_vara_int_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Fint *v5 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Fint *v5 )
nfmpi_put_vara_int_all_	src/libf/put_vara_int_allf.c	13;"	d	file:
nfmpi_put_vara_int_all_	src/libf/put_vara_int_allf.c	15;"	d	file:
nfmpi_put_vara_int_all_	src/libf/put_vara_int_allf.c	17;"	d	file:
nfmpi_put_vara_real_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_put_vara_real_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], float*v5 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], float*v5 )
nfmpi_put_vara_real_	src/libf/put_vara_realf.c	/^FORTRAN_API int FORT_CALL nfmpi_put_vara_real_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], float*v5 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], float*v5 )
nfmpi_put_vara_real_	src/libf/put_vara_realf.c	13;"	d	file:
nfmpi_put_vara_real_	src/libf/put_vara_realf.c	15;"	d	file:
nfmpi_put_vara_real_	src/libf/put_vara_realf.c	17;"	d	file:
nfmpi_put_vara_real_all_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_put_vara_real_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], float*v5 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], float*v5 )
nfmpi_put_vara_real_all_	src/libf/put_vara_real_allf.c	/^FORTRAN_API int FORT_CALL nfmpi_put_vara_real_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], float*v5 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], float*v5 )
nfmpi_put_vara_real_all_	src/libf/put_vara_real_allf.c	13;"	d	file:
nfmpi_put_vara_real_all_	src/libf/put_vara_real_allf.c	15;"	d	file:
nfmpi_put_vara_real_all_	src/libf/put_vara_real_allf.c	17;"	d	file:
nfmpi_put_vara_text_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_put_vara_text_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], char *v5 FORT_MIXED_LEN(d5) FORT_END_LEN(d5) );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], char *v5 FORT_MIXED_LEN(d5) FORT_END_LEN(d5) )
nfmpi_put_vara_text_	src/libf/put_vara_textf.c	/^FORTRAN_API int FORT_CALL nfmpi_put_vara_text_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], char *v5 FORT_MIXED_LEN(d5) FORT_END_LEN(d5) ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], char *v5 FORT_MIXED_LEN(d5) FORT_END_LEN(d5) )
nfmpi_put_vara_text_	src/libf/put_vara_textf.c	13;"	d	file:
nfmpi_put_vara_text_	src/libf/put_vara_textf.c	15;"	d	file:
nfmpi_put_vara_text_	src/libf/put_vara_textf.c	17;"	d	file:
nfmpi_put_vara_text_all_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_put_vara_text_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], char *v5 FORT_MIXED_LEN(d5) FORT_END_LEN(d5) );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], char *v5 FORT_MIXED_LEN(d5) FORT_END_LEN(d5) )
nfmpi_put_vara_text_all_	src/libf/put_vara_text_allf.c	/^FORTRAN_API int FORT_CALL nfmpi_put_vara_text_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], char *v5 FORT_MIXED_LEN(d5) FORT_END_LEN(d5) ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], char *v5 FORT_MIXED_LEN(d5) FORT_END_LEN(d5) )
nfmpi_put_vara_text_all_	src/libf/put_vara_text_allf.c	13;"	d	file:
nfmpi_put_vara_text_all_	src/libf/put_vara_text_allf.c	15;"	d	file:
nfmpi_put_vara_text_all_	src/libf/put_vara_text_allf.c	17;"	d	file:
nfmpi_put_varm_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_put_varm_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], void*v7, MPI_Offset *v8, MPI_Fint *v9 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], void*v7, MPI_Offset *v8, MPI_Fint *v9 )
nfmpi_put_varm_	src/libf/put_varmf.c	/^FORTRAN_API int FORT_CALL nfmpi_put_varm_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], void*v7, MPI_Offset *v8, MPI_Fint *v9 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], void*v7, MPI_Offset *v8, MPI_Fint *v9 )
nfmpi_put_varm_	src/libf/put_varmf.c	13;"	d	file:
nfmpi_put_varm_	src/libf/put_varmf.c	15;"	d	file:
nfmpi_put_varm_	src/libf/put_varmf.c	17;"	d	file:
nfmpi_put_varm_all_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_put_varm_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], void*v7, MPI_Offset *v8, MPI_Fint *v9 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], void*v7, MPI_Offset *v8, MPI_Fint *v9 )
nfmpi_put_varm_all_	src/libf/put_varm_allf.c	/^FORTRAN_API int FORT_CALL nfmpi_put_varm_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], void*v7, MPI_Offset *v8, MPI_Fint *v9 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], void*v7, MPI_Offset *v8, MPI_Fint *v9 )
nfmpi_put_varm_all_	src/libf/put_varm_allf.c	13;"	d	file:
nfmpi_put_varm_all_	src/libf/put_varm_allf.c	15;"	d	file:
nfmpi_put_varm_all_	src/libf/put_varm_allf.c	17;"	d	file:
nfmpi_put_varm_double_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_put_varm_double_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], double*v7 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], double*v7 )
nfmpi_put_varm_double_	src/libf/put_varm_doublef.c	/^FORTRAN_API int FORT_CALL nfmpi_put_varm_double_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], double*v7 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], double*v7 )
nfmpi_put_varm_double_	src/libf/put_varm_doublef.c	13;"	d	file:
nfmpi_put_varm_double_	src/libf/put_varm_doublef.c	15;"	d	file:
nfmpi_put_varm_double_	src/libf/put_varm_doublef.c	17;"	d	file:
nfmpi_put_varm_double_all_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_put_varm_double_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], double*v7 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], double*v7 )
nfmpi_put_varm_double_all_	src/libf/put_varm_double_allf.c	/^FORTRAN_API int FORT_CALL nfmpi_put_varm_double_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], double*v7 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], double*v7 )
nfmpi_put_varm_double_all_	src/libf/put_varm_double_allf.c	13;"	d	file:
nfmpi_put_varm_double_all_	src/libf/put_varm_double_allf.c	15;"	d	file:
nfmpi_put_varm_double_all_	src/libf/put_varm_double_allf.c	17;"	d	file:
nfmpi_put_varm_int1_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_put_varm_int1_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], const signed char * v7 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], const signed char * v7 )
nfmpi_put_varm_int1_	src/libf/put_varm_int1f.c	/^FORTRAN_API int FORT_CALL nfmpi_put_varm_int1_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], const signed char * v7 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], const signed char * v7 )
nfmpi_put_varm_int1_	src/libf/put_varm_int1f.c	13;"	d	file:
nfmpi_put_varm_int1_	src/libf/put_varm_int1f.c	15;"	d	file:
nfmpi_put_varm_int1_	src/libf/put_varm_int1f.c	17;"	d	file:
nfmpi_put_varm_int1_all_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_put_varm_int1_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], const signed char * v7 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], const signed char * v7 )
nfmpi_put_varm_int1_all_	src/libf/put_varm_int1_allf.c	/^FORTRAN_API int FORT_CALL nfmpi_put_varm_int1_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], const signed char * v7 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], const signed char * v7 )
nfmpi_put_varm_int1_all_	src/libf/put_varm_int1_allf.c	13;"	d	file:
nfmpi_put_varm_int1_all_	src/libf/put_varm_int1_allf.c	15;"	d	file:
nfmpi_put_varm_int1_all_	src/libf/put_varm_int1_allf.c	17;"	d	file:
nfmpi_put_varm_int2_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_put_varm_int2_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], short*v7 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], short*v7 )
nfmpi_put_varm_int2_	src/libf/put_varm_int2f.c	/^FORTRAN_API int FORT_CALL nfmpi_put_varm_int2_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], short*v7 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], short*v7 )
nfmpi_put_varm_int2_	src/libf/put_varm_int2f.c	13;"	d	file:
nfmpi_put_varm_int2_	src/libf/put_varm_int2f.c	15;"	d	file:
nfmpi_put_varm_int2_	src/libf/put_varm_int2f.c	17;"	d	file:
nfmpi_put_varm_int2_all_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_put_varm_int2_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], short*v7 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], short*v7 )
nfmpi_put_varm_int2_all_	src/libf/put_varm_int2_allf.c	/^FORTRAN_API int FORT_CALL nfmpi_put_varm_int2_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], short*v7 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], short*v7 )
nfmpi_put_varm_int2_all_	src/libf/put_varm_int2_allf.c	13;"	d	file:
nfmpi_put_varm_int2_all_	src/libf/put_varm_int2_allf.c	15;"	d	file:
nfmpi_put_varm_int2_all_	src/libf/put_varm_int2_allf.c	17;"	d	file:
nfmpi_put_varm_int_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_put_varm_int_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], MPI_Fint *v7 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], MPI_Fint *v7 )
nfmpi_put_varm_int_	src/libf/put_varm_intf.c	/^FORTRAN_API int FORT_CALL nfmpi_put_varm_int_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], MPI_Fint *v7 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], MPI_Fint *v7 )
nfmpi_put_varm_int_	src/libf/put_varm_intf.c	13;"	d	file:
nfmpi_put_varm_int_	src/libf/put_varm_intf.c	15;"	d	file:
nfmpi_put_varm_int_	src/libf/put_varm_intf.c	17;"	d	file:
nfmpi_put_varm_int_all_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_put_varm_int_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], MPI_Fint *v7 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], MPI_Fint *v7 )
nfmpi_put_varm_int_all_	src/libf/put_varm_int_allf.c	/^FORTRAN_API int FORT_CALL nfmpi_put_varm_int_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], MPI_Fint *v7 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], MPI_Fint *v7 )
nfmpi_put_varm_int_all_	src/libf/put_varm_int_allf.c	13;"	d	file:
nfmpi_put_varm_int_all_	src/libf/put_varm_int_allf.c	15;"	d	file:
nfmpi_put_varm_int_all_	src/libf/put_varm_int_allf.c	17;"	d	file:
nfmpi_put_varm_real_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_put_varm_real_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], float*v7 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], float*v7 )
nfmpi_put_varm_real_	src/libf/put_varm_realf.c	/^FORTRAN_API int FORT_CALL nfmpi_put_varm_real_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], float*v7 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], float*v7 )
nfmpi_put_varm_real_	src/libf/put_varm_realf.c	13;"	d	file:
nfmpi_put_varm_real_	src/libf/put_varm_realf.c	15;"	d	file:
nfmpi_put_varm_real_	src/libf/put_varm_realf.c	17;"	d	file:
nfmpi_put_varm_real_all_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_put_varm_real_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], float*v7 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], float*v7 )
nfmpi_put_varm_real_all_	src/libf/put_varm_real_allf.c	/^FORTRAN_API int FORT_CALL nfmpi_put_varm_real_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], float*v7 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], float*v7 )
nfmpi_put_varm_real_all_	src/libf/put_varm_real_allf.c	13;"	d	file:
nfmpi_put_varm_real_all_	src/libf/put_varm_real_allf.c	15;"	d	file:
nfmpi_put_varm_real_all_	src/libf/put_varm_real_allf.c	17;"	d	file:
nfmpi_put_varm_text_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_put_varm_text_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], char *v7 FORT_MIXED_LEN(d7) FORT_END_LEN(d7) );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], char *v7 FORT_MIXED_LEN(d7) FORT_END_LEN(d7) )
nfmpi_put_varm_text_	src/libf/put_varm_textf.c	/^FORTRAN_API int FORT_CALL nfmpi_put_varm_text_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], char *v7 FORT_MIXED_LEN(d7) FORT_END_LEN(d7) ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], char *v7 FORT_MIXED_LEN(d7) FORT_END_LEN(d7) )
nfmpi_put_varm_text_	src/libf/put_varm_textf.c	13;"	d	file:
nfmpi_put_varm_text_	src/libf/put_varm_textf.c	15;"	d	file:
nfmpi_put_varm_text_	src/libf/put_varm_textf.c	17;"	d	file:
nfmpi_put_varm_text_all_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_put_varm_text_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], char *v7 FORT_MIXED_LEN(d7) FORT_END_LEN(d7) );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], char *v7 FORT_MIXED_LEN(d7) FORT_END_LEN(d7) )
nfmpi_put_varm_text_all_	src/libf/put_varm_text_allf.c	/^FORTRAN_API int FORT_CALL nfmpi_put_varm_text_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], char *v7 FORT_MIXED_LEN(d7) FORT_END_LEN(d7) ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Offset v6[], char *v7 FORT_MIXED_LEN(d7) FORT_END_LEN(d7) )
nfmpi_put_varm_text_all_	src/libf/put_varm_text_allf.c	13;"	d	file:
nfmpi_put_varm_text_all_	src/libf/put_varm_text_allf.c	15;"	d	file:
nfmpi_put_varm_text_all_	src/libf/put_varm_text_allf.c	17;"	d	file:
nfmpi_put_vars_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_put_vars_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], void*v6, MPI_Offset *v7, MPI_Fint *v8 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], void*v6, MPI_Offset *v7, MPI_Fint *v8 )
nfmpi_put_vars_	src/libf/put_varsf.c	/^FORTRAN_API int FORT_CALL nfmpi_put_vars_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], void*v6, MPI_Offset *v7, MPI_Fint *v8 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], void*v6, MPI_Offset *v7, MPI_Fint *v8 )
nfmpi_put_vars_	src/libf/put_varsf.c	13;"	d	file:
nfmpi_put_vars_	src/libf/put_varsf.c	15;"	d	file:
nfmpi_put_vars_	src/libf/put_varsf.c	17;"	d	file:
nfmpi_put_vars_all_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_put_vars_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], void*v6, MPI_Offset *v7, MPI_Fint *v8 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], void*v6, MPI_Offset *v7, MPI_Fint *v8 )
nfmpi_put_vars_all_	src/libf/put_vars_allf.c	/^FORTRAN_API int FORT_CALL nfmpi_put_vars_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], void*v6, MPI_Offset *v7, MPI_Fint *v8 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], void*v6, MPI_Offset *v7, MPI_Fint *v8 )
nfmpi_put_vars_all_	src/libf/put_vars_allf.c	13;"	d	file:
nfmpi_put_vars_all_	src/libf/put_vars_allf.c	15;"	d	file:
nfmpi_put_vars_all_	src/libf/put_vars_allf.c	17;"	d	file:
nfmpi_put_vars_double_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_put_vars_double_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], double*v6 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], double*v6 )
nfmpi_put_vars_double_	src/libf/put_vars_doublef.c	/^FORTRAN_API int FORT_CALL nfmpi_put_vars_double_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], double*v6 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], double*v6 )
nfmpi_put_vars_double_	src/libf/put_vars_doublef.c	13;"	d	file:
nfmpi_put_vars_double_	src/libf/put_vars_doublef.c	15;"	d	file:
nfmpi_put_vars_double_	src/libf/put_vars_doublef.c	17;"	d	file:
nfmpi_put_vars_double_all_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_put_vars_double_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], double*v6 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], double*v6 )
nfmpi_put_vars_double_all_	src/libf/put_vars_double_allf.c	/^FORTRAN_API int FORT_CALL nfmpi_put_vars_double_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], double*v6 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], double*v6 )
nfmpi_put_vars_double_all_	src/libf/put_vars_double_allf.c	13;"	d	file:
nfmpi_put_vars_double_all_	src/libf/put_vars_double_allf.c	15;"	d	file:
nfmpi_put_vars_double_all_	src/libf/put_vars_double_allf.c	17;"	d	file:
nfmpi_put_vars_int1_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_put_vars_int1_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], const signed char * v6 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], const signed char * v6 )
nfmpi_put_vars_int1_	src/libf/put_vars_int1f.c	/^FORTRAN_API int FORT_CALL nfmpi_put_vars_int1_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], const signed char * v6 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], const signed char * v6 )
nfmpi_put_vars_int1_	src/libf/put_vars_int1f.c	13;"	d	file:
nfmpi_put_vars_int1_	src/libf/put_vars_int1f.c	15;"	d	file:
nfmpi_put_vars_int1_	src/libf/put_vars_int1f.c	17;"	d	file:
nfmpi_put_vars_int1_all_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_put_vars_int1_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], const signed char * v6 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], const signed char * v6 )
nfmpi_put_vars_int1_all_	src/libf/put_vars_int1_allf.c	/^FORTRAN_API int FORT_CALL nfmpi_put_vars_int1_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], const signed char * v6 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], const signed char * v6 )
nfmpi_put_vars_int1_all_	src/libf/put_vars_int1_allf.c	13;"	d	file:
nfmpi_put_vars_int1_all_	src/libf/put_vars_int1_allf.c	15;"	d	file:
nfmpi_put_vars_int1_all_	src/libf/put_vars_int1_allf.c	17;"	d	file:
nfmpi_put_vars_int2_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_put_vars_int2_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], short*v6 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], short*v6 )
nfmpi_put_vars_int2_	src/libf/put_vars_int2f.c	/^FORTRAN_API int FORT_CALL nfmpi_put_vars_int2_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], short*v6 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], short*v6 )
nfmpi_put_vars_int2_	src/libf/put_vars_int2f.c	13;"	d	file:
nfmpi_put_vars_int2_	src/libf/put_vars_int2f.c	15;"	d	file:
nfmpi_put_vars_int2_	src/libf/put_vars_int2f.c	17;"	d	file:
nfmpi_put_vars_int2_all_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_put_vars_int2_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], short*v6 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], short*v6 )
nfmpi_put_vars_int2_all_	src/libf/put_vars_int2_allf.c	/^FORTRAN_API int FORT_CALL nfmpi_put_vars_int2_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], short*v6 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], short*v6 )
nfmpi_put_vars_int2_all_	src/libf/put_vars_int2_allf.c	13;"	d	file:
nfmpi_put_vars_int2_all_	src/libf/put_vars_int2_allf.c	15;"	d	file:
nfmpi_put_vars_int2_all_	src/libf/put_vars_int2_allf.c	17;"	d	file:
nfmpi_put_vars_int_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_put_vars_int_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Fint *v6 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Fint *v6 )
nfmpi_put_vars_int_	src/libf/put_vars_intf.c	/^FORTRAN_API int FORT_CALL nfmpi_put_vars_int_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Fint *v6 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Fint *v6 )
nfmpi_put_vars_int_	src/libf/put_vars_intf.c	13;"	d	file:
nfmpi_put_vars_int_	src/libf/put_vars_intf.c	15;"	d	file:
nfmpi_put_vars_int_	src/libf/put_vars_intf.c	17;"	d	file:
nfmpi_put_vars_int_all_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_put_vars_int_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Fint *v6 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Fint *v6 )
nfmpi_put_vars_int_all_	src/libf/put_vars_int_allf.c	/^FORTRAN_API int FORT_CALL nfmpi_put_vars_int_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Fint *v6 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], MPI_Fint *v6 )
nfmpi_put_vars_int_all_	src/libf/put_vars_int_allf.c	13;"	d	file:
nfmpi_put_vars_int_all_	src/libf/put_vars_int_allf.c	15;"	d	file:
nfmpi_put_vars_int_all_	src/libf/put_vars_int_allf.c	17;"	d	file:
nfmpi_put_vars_real_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_put_vars_real_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], float*v6 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], float*v6 )
nfmpi_put_vars_real_	src/libf/put_vars_realf.c	/^FORTRAN_API int FORT_CALL nfmpi_put_vars_real_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], float*v6 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], float*v6 )
nfmpi_put_vars_real_	src/libf/put_vars_realf.c	13;"	d	file:
nfmpi_put_vars_real_	src/libf/put_vars_realf.c	15;"	d	file:
nfmpi_put_vars_real_	src/libf/put_vars_realf.c	17;"	d	file:
nfmpi_put_vars_real_all_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_put_vars_real_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], float*v6 );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], float*v6 )
nfmpi_put_vars_real_all_	src/libf/put_vars_real_allf.c	/^FORTRAN_API int FORT_CALL nfmpi_put_vars_real_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], float*v6 ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], float*v6 )
nfmpi_put_vars_real_all_	src/libf/put_vars_real_allf.c	13;"	d	file:
nfmpi_put_vars_real_all_	src/libf/put_vars_real_allf.c	15;"	d	file:
nfmpi_put_vars_real_all_	src/libf/put_vars_real_allf.c	17;"	d	file:
nfmpi_put_vars_text_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_put_vars_text_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], char *v6 FORT_MIXED_LEN(d6) FORT_END_LEN(d6) );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], char *v6 FORT_MIXED_LEN(d6) FORT_END_LEN(d6) )
nfmpi_put_vars_text_	src/libf/put_vars_textf.c	/^FORTRAN_API int FORT_CALL nfmpi_put_vars_text_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], char *v6 FORT_MIXED_LEN(d6) FORT_END_LEN(d6) ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], char *v6 FORT_MIXED_LEN(d6) FORT_END_LEN(d6) )
nfmpi_put_vars_text_	src/libf/put_vars_textf.c	13;"	d	file:
nfmpi_put_vars_text_	src/libf/put_vars_textf.c	15;"	d	file:
nfmpi_put_vars_text_	src/libf/put_vars_textf.c	17;"	d	file:
nfmpi_put_vars_text_all_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_put_vars_text_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], char *v6 FORT_MIXED_LEN(d6) FORT_END_LEN(d6) );$/;"	p	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], char *v6 FORT_MIXED_LEN(d6) FORT_END_LEN(d6) )
nfmpi_put_vars_text_all_	src/libf/put_vars_text_allf.c	/^FORTRAN_API int FORT_CALL nfmpi_put_vars_text_all_ ( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], char *v6 FORT_MIXED_LEN(d6) FORT_END_LEN(d6) ){$/;"	f	signature:( int *v1, int *v2, MPI_Offset v3[], MPI_Offset v4[], MPI_Offset v5[], char *v6 FORT_MIXED_LEN(d6) FORT_END_LEN(d6) )
nfmpi_put_vars_text_all_	src/libf/put_vars_text_allf.c	13;"	d	file:
nfmpi_put_vars_text_all_	src/libf/put_vars_text_allf.c	15;"	d	file:
nfmpi_put_vars_text_all_	src/libf/put_vars_text_allf.c	17;"	d	file:
nfmpi_redef_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_redef_ ( int *v1 );$/;"	p	signature:( int *v1 )
nfmpi_redef_	src/libf/redeff.c	/^FORTRAN_API int FORT_CALL nfmpi_redef_ ( int *v1 ){$/;"	f	signature:( int *v1 )
nfmpi_redef_	src/libf/redeff.c	13;"	d	file:
nfmpi_redef_	src/libf/redeff.c	15;"	d	file:
nfmpi_redef_	src/libf/redeff.c	17;"	d	file:
nfmpi_rename_att_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_rename_att_ ( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), char *v4 FORT_MIXED_LEN(d4) FORT_END_LEN(d3) FORT_END_LEN(d4) );$/;"	p	signature:( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), char *v4 FORT_MIXED_LEN(d4) FORT_END_LEN(d3) FORT_END_LEN(d4) )
nfmpi_rename_att_	src/libf/rename_attf.c	/^FORTRAN_API int FORT_CALL nfmpi_rename_att_ ( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), char *v4 FORT_MIXED_LEN(d4) FORT_END_LEN(d3) FORT_END_LEN(d4) ){$/;"	f	signature:( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3), char *v4 FORT_MIXED_LEN(d4) FORT_END_LEN(d3) FORT_END_LEN(d4) )
nfmpi_rename_att_	src/libf/rename_attf.c	13;"	d	file:
nfmpi_rename_att_	src/libf/rename_attf.c	15;"	d	file:
nfmpi_rename_att_	src/libf/rename_attf.c	17;"	d	file:
nfmpi_rename_dim_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_rename_dim_ ( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3) FORT_END_LEN(d3) );$/;"	p	signature:( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3) FORT_END_LEN(d3) )
nfmpi_rename_dim_	src/libf/rename_dimf.c	/^FORTRAN_API int FORT_CALL nfmpi_rename_dim_ ( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3) FORT_END_LEN(d3) ){$/;"	f	signature:( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3) FORT_END_LEN(d3) )
nfmpi_rename_dim_	src/libf/rename_dimf.c	13;"	d	file:
nfmpi_rename_dim_	src/libf/rename_dimf.c	15;"	d	file:
nfmpi_rename_dim_	src/libf/rename_dimf.c	17;"	d	file:
nfmpi_rename_var_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_rename_var_ ( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3) FORT_END_LEN(d3) );$/;"	p	signature:( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3) FORT_END_LEN(d3) )
nfmpi_rename_var_	src/libf/rename_varf.c	/^FORTRAN_API int FORT_CALL nfmpi_rename_var_ ( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3) FORT_END_LEN(d3) ){$/;"	f	signature:( int *v1, int *v2, char *v3 FORT_MIXED_LEN(d3) FORT_END_LEN(d3) )
nfmpi_rename_var_	src/libf/rename_varf.c	13;"	d	file:
nfmpi_rename_var_	src/libf/rename_varf.c	15;"	d	file:
nfmpi_rename_var_	src/libf/rename_varf.c	17;"	d	file:
nfmpi_set_default_format_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_set_default_format_ ( int *v1, MPI_Fint *v2 );$/;"	p	signature:( int *v1, MPI_Fint *v2 )
nfmpi_set_default_format_	src/libf/set_default_formatf.c	/^FORTRAN_API int FORT_CALL nfmpi_set_default_format_ ( int *v1, MPI_Fint *v2 ){$/;"	f	signature:( int *v1, MPI_Fint *v2 )
nfmpi_set_default_format_	src/libf/set_default_formatf.c	13;"	d	file:
nfmpi_set_default_format_	src/libf/set_default_formatf.c	15;"	d	file:
nfmpi_set_default_format_	src/libf/set_default_formatf.c	17;"	d	file:
nfmpi_set_fill_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_set_fill_ ( int *v1, int *v2, MPI_Fint *v3 );$/;"	p	signature:( int *v1, int *v2, MPI_Fint *v3 )
nfmpi_set_fill_	src/libf/set_fillf.c	/^FORTRAN_API int FORT_CALL nfmpi_set_fill_ ( int *v1, int *v2, MPI_Fint *v3 ){$/;"	f	signature:( int *v1, int *v2, MPI_Fint *v3 )
nfmpi_set_fill_	src/libf/set_fillf.c	13;"	d	file:
nfmpi_set_fill_	src/libf/set_fillf.c	15;"	d	file:
nfmpi_set_fill_	src/libf/set_fillf.c	17;"	d	file:
nfmpi_sync_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_sync_ ( int *v1 );$/;"	p	signature:( int *v1 )
nfmpi_sync_	src/libf/syncf.c	/^FORTRAN_API int FORT_CALL nfmpi_sync_ ( int *v1 ){$/;"	f	signature:( int *v1 )
nfmpi_sync_	src/libf/syncf.c	13;"	d	file:
nfmpi_sync_	src/libf/syncf.c	15;"	d	file:
nfmpi_sync_	src/libf/syncf.c	17;"	d	file:
nfmpi_wait_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_wait_ ( int *v1, int *v2, MPI_Fint v3[], MPI_Fint v4[] );$/;"	p	signature:( int *v1, int *v2, MPI_Fint v3[], MPI_Fint v4[] )
nfmpi_wait_	src/libf/waitf.c	/^FORTRAN_API int FORT_CALL nfmpi_wait_ ( int *v1, int *v2, MPI_Fint v3[], MPI_Fint v4[] ){$/;"	f	signature:( int *v1, int *v2, MPI_Fint v3[], MPI_Fint v4[] )
nfmpi_wait_	src/libf/waitf.c	13;"	d	file:
nfmpi_wait_	src/libf/waitf.c	15;"	d	file:
nfmpi_wait_	src/libf/waitf.c	17;"	d	file:
nfmpi_wait_all_	src/libf/mpifnetcdf.h	/^extern FORTRAN_API int FORT_CALL nfmpi_wait_all_ ( int *v1, int *v2, MPI_Fint v3[], MPI_Fint v4[] );$/;"	p	signature:( int *v1, int *v2, MPI_Fint v3[], MPI_Fint v4[] )
nfmpi_wait_all_	src/libf/wait_allf.c	/^FORTRAN_API int FORT_CALL nfmpi_wait_all_ ( int *v1, int *v2, MPI_Fint v3[], MPI_Fint v4[] ){$/;"	f	signature:( int *v1, int *v2, MPI_Fint v3[], MPI_Fint v4[] )
nfmpi_wait_all_	src/libf/wait_allf.c	13;"	d	file:
nfmpi_wait_all_	src/libf/wait_allf.c	15;"	d	file:
nfmpi_wait_all_	src/libf/wait_allf.c	17;"	d	file:
nfmpi_xinq_libvers_	src/libf/mpinetcdf_impl.h	/^extern FORTRAN_API int FORT_CALL nfmpi_xinq_libvers_ ( char *v1 FORT_MIXED_LEN(d1) FORT_END_LEN(d1) );$/;"	p	signature:( char *v1 FORT_MIXED_LEN(d1) FORT_END_LEN(d1) )
nfmpi_xinq_libvers_	src/libf/xinq_libversf.c	/^FORTRAN_API int FORT_CALL nfmpi_xinq_libvers_ ( char *v1 FORT_MIXED_LEN(d1) FORT_END_LEN(d1) ){$/;"	f	signature:( char *v1 FORT_MIXED_LEN(d1) FORT_END_LEN(d1) )
nfmpi_xinq_libvers_	src/libf/xinq_libversf.c	13;"	d	file:
nfmpi_xinq_libvers_	src/libf/xinq_libversf.c	15;"	d	file:
nfmpi_xinq_libvers_	src/libf/xinq_libversf.c	17;"	d	file:
nfmpi_xstrerror_	src/libf/mpinetcdf_impl.h	/^extern FORTRAN_API int FORT_CALL nfmpi_xstrerror_ ( MPI_Fint *v1, char *v2 FORT_MIXED_LEN(d2) FORT_END_LEN(d2) );$/;"	p	signature:( MPI_Fint *v1, char *v2 FORT_MIXED_LEN(d2) FORT_END_LEN(d2) )
nfmpi_xstrerror_	src/libf/xstrerrorf.c	/^FORTRAN_API int FORT_CALL nfmpi_xstrerror_ ( MPI_Fint *v1, char *v2 FORT_MIXED_LEN(d2) FORT_END_LEN(d2) ){$/;"	f	signature:( MPI_Fint *v1, char *v2 FORT_MIXED_LEN(d2) FORT_END_LEN(d2) )
nfmpi_xstrerror_	src/libf/xstrerrorf.c	13;"	d	file:
nfmpi_xstrerror_	src/libf/xstrerrorf.c	15;"	d	file:
nfmpi_xstrerror_	src/libf/xstrerrorf.c	17;"	d	file:
nfstype	src/utils/ncgen/genlib.c	/^nfstype($/;"	f	signature:( ncmpi_type type)
nfstype	src/utils/ncgen/genlib.h	/^extern const char* nfstype ( nc_type  type );$/;"	p	signature:( nc_type type )
nlvars	src/utils/ncdump/ncdump.h	/^    int nlvars;			\/* Number of variables specified with -v$/;"	m	struct:fspec	access:public
nofill_flag	src/utils/ncgen/genlib.c	/^extern int nofill_flag;$/;"	x
nofill_flag	src/utils/ncgen/main.c	/^int nofill_flag;$/;"	v
not_a_string	src/utils/ncgen/ncgentab.c	/^static int not_a_string;	\/* whether last constant read was a string *\/$/;"	v	file:
nreads	test/fandc/csnap.c	/^const int nreads  = 5;                      \/* number of read samples *\/$/;"	v
nrecs	src/utils/ncgen/ncgen.h	/^    size_t nrecs;		\/* for record variables, number of records$/;"	m	struct:vars	access:public
num_subreqs	src/lib/nc.h	/^    int            num_subreqs;$/;"	m	struct:NC_req	access:public
numpes	test/fandc/csnap.c	/^int numpes[3] = {   0,   1,   1 };          \/* number of PEs along axes;$/;"	v
numrecs	src/lib/nc.h	/^	MPI_Offset numrecs; \/* number of 'records' allocated *\/$/;"	m	struct:NC	access:public
nvars	src/utils/ncgen/init.c	/^int nvars;			\/* number of variables declared for netcdf *\/$/;"	v
nvars	src/utils/ncgen/ncgen.h	/^extern int nvars;		\/* number of variables declared for netcdf *\/$/;"	x
nvdims	src/utils/ncgen/init.c	/^int nvdims;			\/* number of dimensions for variables *\/$/;"	v
nvdims	src/utils/ncgen/ncgen.h	/^extern int nvdims;		\/* number of dimensions for variables *\/$/;"	x
nwrites	test/fandc/csnap.c	/^const int nwrites = 5;                      \/* number of write samples *\/$/;"	v
offset	src/lib/nc.h	/^  MPI_Offset offset;	\/* current read\/write offset in the file *\/$/;"	m	struct:bufferinfo	access:public
offset_end	src/lib/nc.h	/^    MPI_Offset     offset_end;    \/*   ending of aggregate access region *\/$/;"	m	struct:NC_req	access:public
offset_start	src/lib/nc.h	/^    MPI_Offset     offset_start;  \/* starting of aggregate access region *\/$/;"	m	struct:NC_req	access:public
old	src/lib/nc.h	/^	struct NC *old;$/;"	m	struct:NC	typeref:struct:NC::NC	access:public
only_3d	test/fandc/csnap.c	/^const int only_3d       = 1;                \/* I\/O 3D field only? 1 or 0 *\/$/;"	v
order	test/test_dtype/test_darray.c	/^int order = TEST_ARRAY_ORDER;$/;"	v
order	test/test_dtype/test_nonblocking.c	/^int order = TEST_ARRAY_ORDER;$/;"	v
order	test/test_dtype/test_subarray.c	/^int order = TEST_ARRAY_ORDER;$/;"	v
outfname	test/common/testutils.h	/^	char outfname[PATH_MAX];$/;"	m	struct:__anon1	access:public
pIf	src/lib/fbits.h	22;"	d
pIff	src/lib/fbits.h	24;"	d
pack_request	src/lib/i_getput_varm.c	/^pack_request(NC               *ncp,$/;"	f	file:	signature:(NC *ncp, NC_var *varp, NC_req *req, int do_vars, int iscontig_of_ptypes, void *buf, void *cbuf, void *xbuf, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], MPI_Offset nelems, MPI_Offset cnelems, MPI_Offset lnelems, MPI_Offset bufcount, MPI_Datatype datatype, MPI_Datatype ptype, int *reqid)
pack_request	src/lib/i_getput_varm.c	/^pack_request(NC *ncp, NC_var *varp, NC_req *req, int do_vars,$/;"	p	file:	signature:(NC *ncp, NC_var *varp, NC_req *req, int do_vars, int iscontig_of_ptypes, void *buf, void *cbuf, void *xbuf, const MPI_Offset start[], const MPI_Offset count[], const MPI_Offset stride[], MPI_Offset nelems, MPI_Offset cnelems, MPI_Offset lnelems, MPI_Offset bufcount, MPI_Datatype datatype, MPI_Datatype ptype, int *reqid)
params	test/common/testutils.h	/^} params;$/;"	t	typeref:struct:__anon1
parse_args	test/test_dtype/test_darray.c	/^void parse_args(int argc, char **argv, int rank) {$/;"	f	signature:(int argc, char **argv, int rank)
parse_args	test/test_dtype/test_nonblocking.c	/^void parse_args(int argc, char **argv, int rank) {$/;"	f	signature:(int argc, char **argv, int rank)
parse_args	test/test_dtype/test_subarray.c	/^void parse_args(int argc, char **argv, int rank) {$/;"	f	signature:(int argc, char **argv, int rank)
parse_read_args	test/common/testutils.c	/^void parse_read_args(int argc, char **argv, int rank, params *p)$/;"	f	signature:(int argc, char **argv, int rank, params *p)
parse_read_args	test/common/testutils.h	/^void parse_read_args(int argc, char **argv, int rank, params *p);$/;"	p	signature:(int argc, char **argv, int rank, params *p)
parse_write_args	test/common/testutils.c	/^void parse_write_args(int argc, char **argv, int rank, params *p)$/;"	f	signature:(int argc, char **argv, int rank, params *p)
parse_write_args	test/common/testutils.h	/^void parse_write_args(int argc, char **argv, int rank, params *p);$/;"	p	signature:(int argc, char **argv, int rank, params *p)
partition_array	test/test_dtype/test_darray.c	/^void partition_array(	\/* input parameters : *\/$/;"	f	signature:( int nprocs, int myrank, int ndims, int *array_of_sizes, int *array_of_distribs, int *array_of_dargs, MPI_Offset *local_starts, MPI_Offset *local_edges, MPI_Offset *local_strides, int *array_of_psizes)
partition_array	test/test_dtype/test_nonblocking.c	/^void partition_array(int ndims, $/;"	f	signature:(int ndims, int *total_sizes, int *local_subsizes, int *local_starts, int nprocs, int myrank)
partition_array	test/test_dtype/test_subarray.c	/^void partition_array(int ndims, $/;"	f	signature:(int ndims, int *total_sizes, int *local_subsizes, int *local_starts, int nprocs, int myrank)
path	src/lib/ncio.h	/^	const char *path;$/;"	m	struct:ncio	access:public
pe_coords	test/fandc/csnap.c	/^int pe_coords[3];                           \/* Cartesian PE coords *\/$/;"	v
pos	src/lib/nc.h	/^  void *pos;      	\/* current position in buffer *\/$/;"	m	struct:bufferinfo	access:public
pow2	src/utils/ncgen/genlib.c	/^pow2($/;"	f	file:	signature:( int n)
pr_att	src/utils/ncdump/ncdump.c	/^pr_att($/;"	f	file:	signature:( int ncid, int varid, const char *varname, int ia )
pr_att	src/utils/ncdump/ncdump.c	/^static void pr_att(int ncid, int varid, const char *varname, int ia);$/;"	p	file:	signature:(int ncid, int varid, const char *varname, int ia)
pr_att_string	src/utils/ncdump/ncdump.c	/^pr_att_string($/;"	f	file:	signature:( size_t len, const char *string )
pr_att_string	src/utils/ncdump/ncdump.c	/^static void pr_att_string(size_t len, const char* string);$/;"	p	file:	signature:(size_t len, const char* string)
pr_att_vals	src/utils/ncdump/ncdump.c	/^pr_att_vals($/;"	f	file:	signature:( ncmpi_type type, size_t len, const double *vals )
pr_att_vals	src/utils/ncdump/ncdump.c	/^static void pr_att_vals(ncmpi_type  type, size_t len, const double* vals);$/;"	p	file:	signature:(ncmpi_type type, size_t len, const double* vals)
pr_bvals	src/utils/ncdump/vardata.c	/^pr_bvals($/;"	f	file:	signature:( const struct ncvar *vp, size_t len, const char *fmt, boolean more, boolean lastrow, const signed char *vals, const struct fspec* fsp, const MPI_Offset *cor )
pr_bvals	src/utils/ncdump/vardata.c	/^static void pr_bvals(const struct ncvar *vp, size_t len, const char *fmt,$/;"	p	file:	signature:(const struct ncvar *vp, size_t len, const char *fmt, boolean more, boolean lastrow, const signed char *vals, const struct fspec* fsp, const MPI_Offset *cor)
pr_dvals	src/utils/ncdump/vardata.c	/^pr_dvals($/;"	f	file:	signature:( const struct ncvar *vp, size_t len, const char *fmt, boolean more, boolean lastrow, const double *vals, const struct fspec* fsp, const MPI_Offset *cor )
pr_dvals	src/utils/ncdump/vardata.c	/^static void pr_dvals(const struct ncvar *vp, size_t len, const char *fmt,$/;"	p	file:	signature:(const struct ncvar *vp, size_t len, const char *fmt, boolean more, boolean lastrow, const double *vals, const struct fspec* fsp, const MPI_Offset *cor)
pr_fvals	src/utils/ncdump/vardata.c	/^pr_fvals($/;"	f	file:	signature:( const struct ncvar *vp, size_t len, const char *fmt, boolean more, boolean lastrow, const float *vals, const struct fspec* fsp, const MPI_Offset *cor )
pr_fvals	src/utils/ncdump/vardata.c	/^static void pr_fvals(const struct ncvar *vp, size_t len, const char *fmt,$/;"	p	file:	signature:(const struct ncvar *vp, size_t len, const char *fmt, boolean more, boolean lastrow, const float *vals, const struct fspec* fsp, const MPI_Offset *cor)
pr_ivals	src/utils/ncdump/vardata.c	/^pr_ivals($/;"	f	file:	signature:( const struct ncvar *vp, size_t len, const char *fmt, boolean more, boolean lastrow, const int *vals, const struct fspec* fsp, const MPI_Offset *cor )
pr_ivals	src/utils/ncdump/vardata.c	/^static void pr_ivals(const struct ncvar *vp, size_t len, const char *fmt,$/;"	p	file:	signature:(const struct ncvar *vp, size_t len, const char *fmt, boolean more, boolean lastrow, const int *vals, const struct fspec* fsp, const MPI_Offset *cor)
pr_svals	src/utils/ncdump/vardata.c	/^pr_svals($/;"	f	file:	signature:( const struct ncvar *vp, size_t len, const char *fmt, boolean more, boolean lastrow, const short *vals, const struct fspec* fsp, const MPI_Offset *cor )
pr_svals	src/utils/ncdump/vardata.c	/^static void pr_svals(const struct ncvar *vp, size_t len, const char *fmt,$/;"	p	file:	signature:(const struct ncvar *vp, size_t len, const char *fmt, boolean more, boolean lastrow, const short *vals, const struct fspec* fsp, const MPI_Offset *cor)
pr_tvals	src/utils/ncdump/vardata.c	/^pr_tvals($/;"	f	file:	signature:( const struct ncvar *vp, size_t len, const char *fmt, boolean more, boolean lastrow, const char *vals, const struct fspec* fsp, const MPI_Offset *cor )
pr_tvals	src/utils/ncdump/vardata.c	/^static void pr_tvals(const struct ncvar *vp, size_t len, const char *fmt,$/;"	p	file:	signature:(const struct ncvar *vp, size_t len, const char *fmt, boolean more, boolean lastrow, const char *vals, const struct fspec* fsp, const MPI_Offset *cor)
prev	src/lib/nc.h	/^	struct NC *prev;$/;"	m	struct:NC	typeref:struct:NC::NC	access:public
print	test/nc_test/error.c	/^print(const char *fmt, ...)$/;"	f	signature:(const char *fmt, ...)
print	test/nc_test/error.c	/^void print(const char *fmt, ...);$/;"	p	file:	signature:(const char *fmt, ...)
print	test/nc_test/error.h	/^void print(const char *fmt, ...)$/;"	p	signature:(const char *fmt, ...)
print_n_size_t	test/nc_test/error.c	/^print_n_size_t(size_t nelems, const MPI_Offset *array)$/;"	f	signature:(size_t nelems, const MPI_Offset *array)
print_n_size_t	test/nc_test/error.c	/^void print_n_size_t(size_t nelems, const MPI_Offset *array);$/;"	p	file:	signature:(size_t nelems, const MPI_Offset *array)
print_n_size_t	test/nc_test/error.h	/^print_n_size_t(size_t nelems, const MPI_Offset *array);$/;"	p	signature:(size_t nelems, const MPI_Offset *array)
print_nok	test/nc_test/tests.h	/^void print_nok(int nok);$/;"	p	signature:(int nok)
print_nok	test/nc_test/util.c	/^print_nok(int nok)$/;"	f	signature:(int nok)
printbval	src/utils/ncdump/vardata.c	/^printbval($/;"	f	file:	signature:( char *sout, const char *fmt, const struct ncvar *varp, signed char val )
printbval	src/utils/ncdump/vardata.c	/^static void printbval(char* sout, const char* fmt, const struct ncvar* varp,$/;"	p	file:	signature:(char* sout, const char* fmt, const struct ncvar* varp, signed char val)
printdval	src/utils/ncdump/vardata.c	/^printdval($/;"	f	file:	signature:( char *sout, const char *fmt, const struct ncvar *varp, double val )
printdval	src/utils/ncdump/vardata.c	/^static void printdval(char* sout, const char* fmt, const struct ncvar* varp,$/;"	p	file:	signature:(char* sout, const char* fmt, const struct ncvar* varp, double val)
printfval	src/utils/ncdump/vardata.c	/^printfval($/;"	f	file:	signature:( char *sout, const char *fmt, const struct ncvar *varp, float val )
printfval	src/utils/ncdump/vardata.c	/^static void printfval(char* sout, const char* fmt, const struct ncvar* varp,$/;"	p	file:	signature:(char* sout, const char* fmt, const struct ncvar* varp, float val)
printival	src/utils/ncdump/vardata.c	/^printival($/;"	f	file:	signature:( char *sout, const char *fmt, const struct ncvar *varp, int val )
printival	src/utils/ncdump/vardata.c	/^static void printival(char* sout, const char* fmt, const struct ncvar* varp,$/;"	p	file:	signature:(char* sout, const char* fmt, const struct ncvar* varp, int val)
printsval	src/utils/ncdump/vardata.c	/^printsval($/;"	f	file:	signature:( char *sout, const char *fmt, const struct ncvar *varp, short val )
printsval	src/utils/ncdump/vardata.c	/^static void printsval(char* sout, const char* fmt, const struct ncvar* varp,$/;"	p	file:	signature:(char* sout, const char* fmt, const struct ncvar* varp, short val)
product	test/nc_test/util.c	/^product(size_t nn, const MPI_Offset *sp)$/;"	f	file:	signature:(size_t nn, const MPI_Offset *sp)
progname	src/utils/ncdump/dumplib.h	/^extern char *progname;		\/* for error messages *\/$/;"	x
progname	src/utils/ncdump/ncdump.c	/^char *progname;$/;"	v
progname	src/utils/ncdump/vardata.h	/^extern char *progname;		\/* for error messages *\/$/;"	x
progname	src/utils/ncgen/genlib.h	/^extern const char *progname;	\/* for error messages *\/$/;"	x
progname	src/utils/ncgen/main.c	/^const char *progname;			\/* for error messages *\/$/;"	v
progname	test/nc_test/nc_test.c	/^static char *progname;$/;"	v	file:
ptrdiff_t	src/lib/nctypes.h	/^typedef int ptrdiff_t;$/;"	t
ptype	src/lib/nc.h	/^    MPI_Datatype   ptype;$/;"	m	struct:NC_req	access:public
put_atts	test/nc_test/tests.h	/^void put_atts(int ncid);$/;"	p	signature:(int ncid)
put_atts	test/nc_test/util.c	/^put_atts(int ncid)$/;"	f	signature:(int ncid)
put_ix_double	src/lib/ncx.c	/^put_ix_double(void *xp, const double *ip)$/;"	f	file:	signature:(void *xp, const double *ip)
put_ix_float	src/lib/ncx.c	/^put_ix_float(void *xp, const float *ip)$/;"	f	file:	signature:(void *xp, const float *ip)
put_ix_int	src/lib/ncx.c	/^put_ix_int(void *xp, const ix_int *ip)$/;"	f	file:	signature:(void *xp, const ix_int *ip)
put_ix_short	src/lib/ncx.c	/^put_ix_short(void *xp, const ix_short *ip)$/;"	f	file:	signature:(void *xp, const ix_short *ip)
put_variable	src/utils/ncgen/genlib.h	/^extern int put_variable ( void* rec_start );$/;"	p	signature:( void* rec_start )
put_variable	src/utils/ncgen/load.c	/^put_variable($/;"	f	signature:( void *rec_start )
put_vars	test/nc_test/tests.h	/^void put_vars(int ncid);$/;"	p	signature:(int ncid)
put_vars	test/nc_test/util.c	/^put_vars(int ncid)$/;"	f	signature:(int ncid)
pvt	src/lib/ncio.h	/^	void *NCIO_CONST pvt;$/;"	m	struct:ncio	access:public
random_fields	test/fandc/csnap.c	/^const int random_fields = 0;                \/* random fields? 1 or 0 *\/$/;"	v
read_file	test/fandc/csnap.c	/^void read_file(char *filename, double *t) {$/;"	f	signature:(char *filename, double *t)
read_file	test/fandc/csnap.c	/^void read_file(char *filename, double *t);$/;"	p	file:	signature:(char *filename, double *t)
read_only	test/nc_test/nc_test.c	/^int  read_only;		\/* if 1, don't try to change files *\/$/;"	v
read_only	test/nc_test/tests.h	/^extern int  read_only;		\/* if 1, don't try to change files *\/$/;"	x
rec_cur	src/utils/ncgen/ncgentab.c	/^static void *rec_cur;		\/* pointer to where next data value goes *\/$/;"	v	file:
rec_dim	src/utils/ncgen/init.c	/^int rec_dim;			\/* number of the unlimited dimension, if any *\/$/;"	v
rec_dim	src/utils/ncgen/ncgen.h	/^extern int rec_dim;		\/* number of the unlimited dimension, if any *\/$/;"	x
rec_len	src/utils/ncgen/init.c	/^size_t rec_len;			\/* number of elements for a record of data *\/$/;"	v
rec_len	src/utils/ncgen/ncgen.h	/^extern size_t rec_len;		\/* number of elements for a record of data *\/$/;"	x
rec_start	src/utils/ncgen/ncgentab.c	/^static void *rec_start;		\/* start of space for data *\/$/;"	v	file:
recsize	src/lib/nc.h	/^	MPI_Offset recsize;	\/* length of 'record': sum of single record sizes from all record variables *\/	$/;"	m	struct:NC	access:public
rel	src/lib/ncio.h	/^	ncmpiio_relfunc *NCIO_CONST rel;$/;"	m	struct:ncio	access:public
req_compare	src/lib/nonblocking.c	/^req_compare(const NC_req *a, const NC_req *b)$/;"	f	file:	signature:(const NC_req *a, const NC_req *b)
req_compare	src/lib/nonblocking.c	/^static int req_compare(const NC_req *a, const NC_req *b);$/;"	p	file:	signature:(const NC_req *a, const NC_req *b)
roll	test/nc_test/tests.h	/^int roll( int n );$/;"	p	signature:( int n )
roll	test/nc_test/util.c	/^int roll( int n )$/;"	f	signature:( int n )
rw_flag	src/lib/nc.h	/^    int            rw_flag;$/;"	m	struct:NC_req	access:public
s	src/lib/ncx.c	/^	struct vax_single s;$/;"	m	struct:sgl_limits	typeref:struct:sgl_limits::vax_single	file:	access:public
s_ncmpi_type	test/nc_test/tests.h	/^extern const char *s_ncmpi_type(ncmpi_type);$/;"	p	signature:(ncmpi_type)
s_ncmpi_type	test/nc_test/util.c	/^s_ncmpi_type(ncmpi_type type)$/;"	f	signature:(ncmpi_type type)
schar	src/lib/ncx.h	/^typedef signed char schar;$/;"	t
schar	test/nc_test/tests.h	/^typedef signed char schar;$/;"	t
schar_max	test/nc_test/tests.h	110;"	d
schar_min	test/nc_test/tests.h	101;"	d
scratch	test/nc_test/nc_test.c	/^char scratch[] = "scratch.nc";  \/* writable scratch file *\/$/;"	v
scratch	test/nc_test/tests.h	/^extern char scratch[];		\/* netCDF test file for writing *\/$/;"	x
set_NC_collectiveFh	src/lib/ncio.h	116;"	d
set_NC_hdirty	src/lib/nc.h	449;"	d
set_NC_independentFh	src/lib/ncio.h	119;"	d
set_NC_ndirty	src/lib/nc.h	443;"	d
set_formats	src/utils/ncdump/dumplib.c	/^set_formats(int float_digits, int double_digits)$/;"	f	signature:(int float_digits, int double_digits)
set_formats	src/utils/ncdump/dumplib.h	/^extern void	set_formats ( int flt_digs, int dbl_digs );$/;"	p	signature:( int flt_digs, int dbl_digs )
set_indent	src/utils/ncdump/dumplib.c	/^set_indent(int in)$/;"	f	signature:(int in)
set_indent	src/utils/ncdump/dumplib.h	/^extern void	set_indent ( int indent );$/;"	p	signature:( int indent )
set_max_len	src/utils/ncdump/dumplib.c	/^set_max_len(int len)$/;"	f	signature:(int len)
set_max_len	src/utils/ncdump/dumplib.h	/^extern void	set_max_len ( int len );$/;"	p	signature:( int len )
set_precision	src/utils/ncdump/ncdump.c	/^set_precision(const char *optarg)$/;"	f	file:	signature:(const char *optarg)
set_precision	src/utils/ncdump/ncdump.c	/^static void set_precision( const char *optarg);$/;"	p	file:	signature:( const char *optarg)
set_sigdigs	src/utils/ncdump/ncdump.c	/^set_sigdigs(const char *optarg)$/;"	f	file:	signature:(const char *optarg)
set_sigdigs	src/utils/ncdump/ncdump.c	/^static void set_sigdigs( const char* optarg);$/;"	p	file:	signature:( const char* optarg)
sgl_limits	src/lib/ncx.c	/^static struct sgl_limits {$/;"	s	file:
sgl_limits::ieee	src/lib/ncx.c	/^	struct ieee_single ieee;$/;"	m	struct:sgl_limits	typeref:struct:sgl_limits::ieee_single	file:	access:public
sgl_limits::s	src/lib/ncx.c	/^	struct vax_single s;$/;"	m	struct:sgl_limits	typeref:struct:sgl_limits::vax_single	file:	access:public
shape	src/lib/nc.h	/^	MPI_Offset *shape; \/* compiled info: dim->size of each dim *\/$/;"	m	struct:__anon10	access:public
short	src/utils/ncgen/ncgentab.c	235;"	d	file:
short_max	test/nc_test/tests.h	111;"	d
short_min	test/nc_test/tests.h	102;"	d
short_val	src/utils/ncgen/ncgentab.c	/^static short short_val;		\/* last short value read *\/$/;"	v	file:
short_valp	src/utils/ncgen/ncgentab.c	/^static short *short_valp;$/;"	v	file:
shortv	src/utils/ncgen/generic.h	/^    short shortv;$/;"	m	union:generic	access:public
sign	src/lib/ncx.c	/^	unsigned int	sign         : 1;$/;"	m	struct:ieee_single	file:	access:public
sign	src/lib/ncx.c	/^	unsigned int	sign      : 1;$/;"	m	struct:vax_double	file:	access:public
sign	src/lib/ncx.c	/^	unsigned int	sign      : 1;$/;"	m	struct:vax_single	file:	access:public
sign	src/lib/ncx.c	/^	unsigned int	sign     : 1;$/;"	m	struct:ieee_double	file:	access:public
size	src/lib/nc.h	/^	MPI_Offset size;$/;"	m	struct:__anon8	access:public
size	src/lib/nc.h	/^  MPI_Offset size;		\/* size of the buffer *\/$/;"	m	struct:bufferinfo	access:public
size	src/utils/ncdump/ncdump.h	/^    MPI_Offset size;$/;"	m	struct:ncdim	access:public
size	src/utils/ncgen/ncgen.h	/^    size_t size;$/;"	m	struct:dims	access:public
ssize_t	src/lib/nctypes.h	/^typedef int ssize_t;$/;"	t
start	src/lib/nc.h	/^    MPI_Offset    *start;  \/* [ndims] *\/$/;"	m	struct:NC_req	access:public
status	src/lib/nc.h	/^    int           *status;$/;"	m	struct:NC_req	access:public
strerror	src/lib/error.c	/^strerror(int errnum)$/;"	f	file:	signature:(int errnum)
stride	src/lib/nc.h	/^    MPI_Offset    *stride; \/* [ndims] *\/$/;"	m	struct:NC_req	access:public
string	src/utils/ncdump/ncdump.h	/^    char *string;		\/* for text attributes (type = NC_CHAR) *\/$/;"	m	struct:ncatt	access:public
subreqs	src/lib/nc.h	/^    struct NC_req *subreqs;  \/* [num_subreq] *\/$/;"	m	struct:NC_req	typeref:struct:NC_req::NC_req	access:public
swap4b	src/lib/ncx.c	/^swap4b(void *dst, const void *src)$/;"	f	file:	signature:(void *dst, const void *src)
swap8b	src/lib/ncx.c	/^swap8b(void *dst, const void *src)$/;"	f	file:	signature:(void *dst, const void *src)
swapn	src/lib/convert_swap.c	/^static void swapn(void *dst, const void *src, MPI_Offset nn, int xsize);$/;"	p	file:	signature:(void *dst, const void *src, MPI_Offset nn, int xsize)
swapn	src/lib/convert_swap.c	/^swapn(void       *dst,$/;"	f	file:	signature:(void *dst, const void *src, MPI_Offset nn, int xsize)
swapn2b	src/lib/ncx.c	/^swapn2b(void *dst, const void *src, MPI_Offset nn)$/;"	f	file:	signature:(void *dst, const void *src, MPI_Offset nn)
swapn4b	src/lib/ncx.c	/^swapn4b(void *dst, const void *src, MPI_Offset nn)$/;"	f	file:	signature:(void *dst, const void *src, MPI_Offset nn)
swapn8b	src/lib/ncx.c	/^swapn8b(void *dst, const void *src, MPI_Offset nn)$/;"	f	file:	signature:(void *dst, const void *src, MPI_Offset nn)
symlist	src/utils/ncgen/ncgentab.c	/^YYSTYPE symlist;		\/* symbol table: linked list *\/$/;"	v
sync	src/lib/ncio.h	/^	ncmpiio_syncfunc *NCIO_CONST sync;$/;"	m	struct:ncio	access:public
tail	src/lib/nc.h	/^        NC_req *tail;$/;"	m	struct:NC	access:public
termstring	src/utils/ncgen/ncgentab.c	/^static char termstring[MAXTRST]; \/* last terminal string read *\/$/;"	v	file:
test_m	test/test_dtype/test_darray.c	/^double test_m = TEST_M;$/;"	v
test_m	test/test_dtype/test_nonblocking.c	/^double test_m = TEST_M;$/;"	v
test_m	test/test_dtype/test_subarray.c	/^double test_m = TEST_M;$/;"	v
test_n	test/test_dtype/test_darray.c	/^int test_n = TEST_N;$/;"	v
test_n	test/test_dtype/test_nonblocking.c	/^int test_n = TEST_N;$/;"	v
test_n	test/test_dtype/test_subarray.c	/^int test_n = TEST_N;$/;"	v
test_ncmpi_abort	test/nc_test/test_write.c	/^test_ncmpi_abort(void)$/;"	f	signature:(void)
test_ncmpi_abort	test/nc_test/tests.h	/^extern void test_ncmpi_abort(void);$/;"	p	signature:(void)
test_ncmpi_close	test/nc_test/test_read.c	/^test_ncmpi_close(void)$/;"	f	signature:(void)
test_ncmpi_close	test/nc_test/tests.h	/^extern void test_ncmpi_close(void);$/;"	p	signature:(void)
test_ncmpi_copy_att	test/nc_test/test_write.c	/^test_ncmpi_copy_att(void)$/;"	f	signature:(void)
test_ncmpi_copy_att	test/nc_test/tests.h	/^extern void test_ncmpi_copy_att(void);$/;"	p	signature:(void)
test_ncmpi_create	test/nc_test/test_write.c	/^test_ncmpi_create(void)$/;"	f	signature:(void)
test_ncmpi_create	test/nc_test/tests.h	/^extern void test_ncmpi_create(void);$/;"	p	signature:(void)
test_ncmpi_def_dim	test/nc_test/test_write.c	/^test_ncmpi_def_dim(void)$/;"	f	signature:(void)
test_ncmpi_def_dim	test/nc_test/tests.h	/^extern void test_ncmpi_def_dim(void);$/;"	p	signature:(void)
test_ncmpi_def_var	test/nc_test/test_write.c	/^test_ncmpi_def_var(void)$/;"	f	signature:(void)
test_ncmpi_def_var	test/nc_test/tests.h	/^extern void test_ncmpi_def_var(void);$/;"	p	signature:(void)
test_ncmpi_del_att	test/nc_test/test_write.c	/^test_ncmpi_del_att(void)$/;"	f	signature:(void)
test_ncmpi_del_att	test/nc_test/tests.h	/^extern void test_ncmpi_del_att(void);$/;"	p	signature:(void)
test_ncmpi_delete	test/nc_test/test_write.c	/^test_ncmpi_delete(void)$/;"	f	signature:(void)
test_ncmpi_delete	test/nc_test/tests.h	/^extern void test_ncmpi_delete(void);$/;"	p	signature:(void)
test_ncmpi_enddef	test/nc_test/test_write.c	/^test_ncmpi_enddef(void)$/;"	f	signature:(void)
test_ncmpi_enddef	test/nc_test/tests.h	/^extern void test_ncmpi_enddef(void);$/;"	p	signature:(void)
test_ncmpi_get_att	test/nc_test/test_read.c	/^test_ncmpi_get_att(void)$/;"	f	signature:(void)
test_ncmpi_get_att	test/nc_test/tests.h	/^extern void test_ncmpi_get_att(void);$/;"	p	signature:(void)
test_ncmpi_get_att_double	test/nc_test/tests.h	/^extern void test_ncmpi_get_att_double(void);$/;"	p	signature:(void)
test_ncmpi_get_att_float	test/nc_test/tests.h	/^extern void test_ncmpi_get_att_float(void);$/;"	p	signature:(void)
test_ncmpi_get_att_int	test/nc_test/tests.h	/^extern void test_ncmpi_get_att_int(void);$/;"	p	signature:(void)
test_ncmpi_get_att_long	test/nc_test/tests.h	/^extern void test_ncmpi_get_att_long(void);$/;"	p	signature:(void)
test_ncmpi_get_att_schar	test/nc_test/tests.h	/^extern void test_ncmpi_get_att_schar(void);$/;"	p	signature:(void)
test_ncmpi_get_att_short	test/nc_test/tests.h	/^extern void test_ncmpi_get_att_short(void);$/;"	p	signature:(void)
test_ncmpi_get_att_text	test/nc_test/tests.h	/^extern void test_ncmpi_get_att_text(void);$/;"	p	signature:(void)
test_ncmpi_get_att_uchar	test/nc_test/tests.h	/^extern void test_ncmpi_get_att_uchar(void);$/;"	p	signature:(void)
test_ncmpi_get_var	test/nc_test/tests.h	/^extern void test_ncmpi_get_var(void);$/;"	p	signature:(void)
test_ncmpi_get_var1	test/nc_test/test_read.c	/^test_ncmpi_get_var1(void)$/;"	f	signature:(void)
test_ncmpi_get_var1	test/nc_test/tests.h	/^extern void test_ncmpi_get_var1(void);$/;"	p	signature:(void)
test_ncmpi_get_var1_double	test/nc_test/tests.h	/^extern void test_ncmpi_get_var1_double(void);$/;"	p	signature:(void)
test_ncmpi_get_var1_float	test/nc_test/tests.h	/^extern void test_ncmpi_get_var1_float(void);$/;"	p	signature:(void)
test_ncmpi_get_var1_int	test/nc_test/tests.h	/^extern void test_ncmpi_get_var1_int(void);$/;"	p	signature:(void)
test_ncmpi_get_var1_long	test/nc_test/tests.h	/^extern void test_ncmpi_get_var1_long(void);$/;"	p	signature:(void)
test_ncmpi_get_var1_schar	test/nc_test/tests.h	/^extern void test_ncmpi_get_var1_schar(void);$/;"	p	signature:(void)
test_ncmpi_get_var1_short	test/nc_test/tests.h	/^extern void test_ncmpi_get_var1_short(void);$/;"	p	signature:(void)
test_ncmpi_get_var1_text	test/nc_test/tests.h	/^extern void test_ncmpi_get_var1_text(void);$/;"	p	signature:(void)
test_ncmpi_get_var1_uchar	test/nc_test/tests.h	/^extern void test_ncmpi_get_var1_uchar(void);$/;"	p	signature:(void)
test_ncmpi_get_var_double	test/nc_test/tests.h	/^extern void test_ncmpi_get_var_double(void);$/;"	p	signature:(void)
test_ncmpi_get_var_float	test/nc_test/tests.h	/^extern void test_ncmpi_get_var_float(void);$/;"	p	signature:(void)
test_ncmpi_get_var_int	test/nc_test/tests.h	/^extern void test_ncmpi_get_var_int(void);$/;"	p	signature:(void)
test_ncmpi_get_var_long	test/nc_test/tests.h	/^extern void test_ncmpi_get_var_long(void);$/;"	p	signature:(void)
test_ncmpi_get_var_schar	test/nc_test/tests.h	/^extern void test_ncmpi_get_var_schar(void);$/;"	p	signature:(void)
test_ncmpi_get_var_short	test/nc_test/tests.h	/^extern void test_ncmpi_get_var_short(void);$/;"	p	signature:(void)
test_ncmpi_get_var_text	test/nc_test/tests.h	/^extern void test_ncmpi_get_var_text(void);$/;"	p	signature:(void)
test_ncmpi_get_var_uchar	test/nc_test/tests.h	/^extern void test_ncmpi_get_var_uchar(void);$/;"	p	signature:(void)
test_ncmpi_get_vara	test/nc_test/test_read.c	/^test_ncmpi_get_vara(void)$/;"	f	signature:(void)
test_ncmpi_get_vara	test/nc_test/tests.h	/^extern void test_ncmpi_get_vara(void);$/;"	p	signature:(void)
test_ncmpi_get_vara_double	test/nc_test/tests.h	/^extern void test_ncmpi_get_vara_double(void);$/;"	p	signature:(void)
test_ncmpi_get_vara_float	test/nc_test/tests.h	/^extern void test_ncmpi_get_vara_float(void);$/;"	p	signature:(void)
test_ncmpi_get_vara_int	test/nc_test/tests.h	/^extern void test_ncmpi_get_vara_int(void);$/;"	p	signature:(void)
test_ncmpi_get_vara_long	test/nc_test/tests.h	/^extern void test_ncmpi_get_vara_long(void);$/;"	p	signature:(void)
test_ncmpi_get_vara_schar	test/nc_test/tests.h	/^extern void test_ncmpi_get_vara_schar(void);$/;"	p	signature:(void)
test_ncmpi_get_vara_short	test/nc_test/tests.h	/^extern void test_ncmpi_get_vara_short(void);$/;"	p	signature:(void)
test_ncmpi_get_vara_text	test/nc_test/tests.h	/^extern void test_ncmpi_get_vara_text(void);$/;"	p	signature:(void)
test_ncmpi_get_vara_uchar	test/nc_test/tests.h	/^extern void test_ncmpi_get_vara_uchar(void);$/;"	p	signature:(void)
test_ncmpi_get_varm	test/nc_test/test_read.c	/^test_ncmpi_get_varm(void)$/;"	f	signature:(void)
test_ncmpi_get_varm	test/nc_test/tests.h	/^extern void test_ncmpi_get_varm(void);$/;"	p	signature:(void)
test_ncmpi_get_varm_double	test/nc_test/tests.h	/^extern void test_ncmpi_get_varm_double(void);$/;"	p	signature:(void)
test_ncmpi_get_varm_float	test/nc_test/tests.h	/^extern void test_ncmpi_get_varm_float(void);$/;"	p	signature:(void)
test_ncmpi_get_varm_int	test/nc_test/tests.h	/^extern void test_ncmpi_get_varm_int(void);$/;"	p	signature:(void)
test_ncmpi_get_varm_long	test/nc_test/tests.h	/^extern void test_ncmpi_get_varm_long(void);$/;"	p	signature:(void)
test_ncmpi_get_varm_schar	test/nc_test/tests.h	/^extern void test_ncmpi_get_varm_schar(void);$/;"	p	signature:(void)
test_ncmpi_get_varm_short	test/nc_test/tests.h	/^extern void test_ncmpi_get_varm_short(void);$/;"	p	signature:(void)
test_ncmpi_get_varm_text	test/nc_test/tests.h	/^extern void test_ncmpi_get_varm_text(void);$/;"	p	signature:(void)
test_ncmpi_get_varm_uchar	test/nc_test/tests.h	/^extern void test_ncmpi_get_varm_uchar(void);$/;"	p	signature:(void)
test_ncmpi_get_vars	test/nc_test/test_read.c	/^test_ncmpi_get_vars(void)$/;"	f	signature:(void)
test_ncmpi_get_vars	test/nc_test/tests.h	/^extern void test_ncmpi_get_vars(void);$/;"	p	signature:(void)
test_ncmpi_get_vars_double	test/nc_test/tests.h	/^extern void test_ncmpi_get_vars_double(void);$/;"	p	signature:(void)
test_ncmpi_get_vars_float	test/nc_test/tests.h	/^extern void test_ncmpi_get_vars_float(void);$/;"	p	signature:(void)
test_ncmpi_get_vars_int	test/nc_test/tests.h	/^extern void test_ncmpi_get_vars_int(void);$/;"	p	signature:(void)
test_ncmpi_get_vars_long	test/nc_test/tests.h	/^extern void test_ncmpi_get_vars_long(void);$/;"	p	signature:(void)
test_ncmpi_get_vars_schar	test/nc_test/tests.h	/^extern void test_ncmpi_get_vars_schar(void);$/;"	p	signature:(void)
test_ncmpi_get_vars_short	test/nc_test/tests.h	/^extern void test_ncmpi_get_vars_short(void);$/;"	p	signature:(void)
test_ncmpi_get_vars_text	test/nc_test/tests.h	/^extern void test_ncmpi_get_vars_text(void);$/;"	p	signature:(void)
test_ncmpi_get_vars_uchar	test/nc_test/tests.h	/^extern void test_ncmpi_get_vars_uchar(void);$/;"	p	signature:(void)
test_ncmpi_iget_var	test/nc_test/tests.h	/^extern void test_ncmpi_iget_var(void);$/;"	p	signature:(void)
test_ncmpi_iget_var1	test/nc_test/tests.h	/^extern void test_ncmpi_iget_var1(void);$/;"	p	signature:(void)
test_ncmpi_iget_var1_double	test/nc_test/tests.h	/^extern void test_ncmpi_iget_var1_double(void);$/;"	p	signature:(void)
test_ncmpi_iget_var1_float	test/nc_test/tests.h	/^extern void test_ncmpi_iget_var1_float(void);$/;"	p	signature:(void)
test_ncmpi_iget_var1_int	test/nc_test/tests.h	/^extern void test_ncmpi_iget_var1_int(void);$/;"	p	signature:(void)
test_ncmpi_iget_var1_long	test/nc_test/tests.h	/^extern void test_ncmpi_iget_var1_long(void);$/;"	p	signature:(void)
test_ncmpi_iget_var1_schar	test/nc_test/tests.h	/^extern void test_ncmpi_iget_var1_schar(void);$/;"	p	signature:(void)
test_ncmpi_iget_var1_short	test/nc_test/tests.h	/^extern void test_ncmpi_iget_var1_short(void);$/;"	p	signature:(void)
test_ncmpi_iget_var1_text	test/nc_test/tests.h	/^extern void test_ncmpi_iget_var1_text(void);$/;"	p	signature:(void)
test_ncmpi_iget_var1_uchar	test/nc_test/tests.h	/^extern void test_ncmpi_iget_var1_uchar(void);$/;"	p	signature:(void)
test_ncmpi_iget_var_double	test/nc_test/tests.h	/^extern void test_ncmpi_iget_var_double(void);$/;"	p	signature:(void)
test_ncmpi_iget_var_float	test/nc_test/tests.h	/^extern void test_ncmpi_iget_var_float(void);$/;"	p	signature:(void)
test_ncmpi_iget_var_int	test/nc_test/tests.h	/^extern void test_ncmpi_iget_var_int(void);$/;"	p	signature:(void)
test_ncmpi_iget_var_long	test/nc_test/tests.h	/^extern void test_ncmpi_iget_var_long(void);$/;"	p	signature:(void)
test_ncmpi_iget_var_schar	test/nc_test/tests.h	/^extern void test_ncmpi_iget_var_schar(void);$/;"	p	signature:(void)
test_ncmpi_iget_var_short	test/nc_test/tests.h	/^extern void test_ncmpi_iget_var_short(void);$/;"	p	signature:(void)
test_ncmpi_iget_var_text	test/nc_test/tests.h	/^extern void test_ncmpi_iget_var_text(void);$/;"	p	signature:(void)
test_ncmpi_iget_var_uchar	test/nc_test/tests.h	/^extern void test_ncmpi_iget_var_uchar(void);$/;"	p	signature:(void)
test_ncmpi_iget_vara	test/nc_test/tests.h	/^extern void test_ncmpi_iget_vara(void);$/;"	p	signature:(void)
test_ncmpi_iget_vara_double	test/nc_test/tests.h	/^extern void test_ncmpi_iget_vara_double(void);$/;"	p	signature:(void)
test_ncmpi_iget_vara_float	test/nc_test/tests.h	/^extern void test_ncmpi_iget_vara_float(void);$/;"	p	signature:(void)
test_ncmpi_iget_vara_int	test/nc_test/tests.h	/^extern void test_ncmpi_iget_vara_int(void);$/;"	p	signature:(void)
test_ncmpi_iget_vara_long	test/nc_test/tests.h	/^extern void test_ncmpi_iget_vara_long(void);$/;"	p	signature:(void)
test_ncmpi_iget_vara_schar	test/nc_test/tests.h	/^extern void test_ncmpi_iget_vara_schar(void);$/;"	p	signature:(void)
test_ncmpi_iget_vara_short	test/nc_test/tests.h	/^extern void test_ncmpi_iget_vara_short(void);$/;"	p	signature:(void)
test_ncmpi_iget_vara_text	test/nc_test/tests.h	/^extern void test_ncmpi_iget_vara_text(void);$/;"	p	signature:(void)
test_ncmpi_iget_vara_uchar	test/nc_test/tests.h	/^extern void test_ncmpi_iget_vara_uchar(void);$/;"	p	signature:(void)
test_ncmpi_iget_varm	test/nc_test/tests.h	/^extern void test_ncmpi_iget_varm(void);$/;"	p	signature:(void)
test_ncmpi_iget_varm_double	test/nc_test/tests.h	/^extern void test_ncmpi_iget_varm_double(void);$/;"	p	signature:(void)
test_ncmpi_iget_varm_float	test/nc_test/tests.h	/^extern void test_ncmpi_iget_varm_float(void);$/;"	p	signature:(void)
test_ncmpi_iget_varm_int	test/nc_test/tests.h	/^extern void test_ncmpi_iget_varm_int(void);$/;"	p	signature:(void)
test_ncmpi_iget_varm_long	test/nc_test/tests.h	/^extern void test_ncmpi_iget_varm_long(void);$/;"	p	signature:(void)
test_ncmpi_iget_varm_schar	test/nc_test/tests.h	/^extern void test_ncmpi_iget_varm_schar(void);$/;"	p	signature:(void)
test_ncmpi_iget_varm_short	test/nc_test/tests.h	/^extern void test_ncmpi_iget_varm_short(void);$/;"	p	signature:(void)
test_ncmpi_iget_varm_text	test/nc_test/tests.h	/^extern void test_ncmpi_iget_varm_text(void);$/;"	p	signature:(void)
test_ncmpi_iget_varm_uchar	test/nc_test/tests.h	/^extern void test_ncmpi_iget_varm_uchar(void);$/;"	p	signature:(void)
test_ncmpi_iget_vars	test/nc_test/tests.h	/^extern void test_ncmpi_iget_vars(void);$/;"	p	signature:(void)
test_ncmpi_iget_vars_double	test/nc_test/tests.h	/^extern void test_ncmpi_iget_vars_double(void);$/;"	p	signature:(void)
test_ncmpi_iget_vars_float	test/nc_test/tests.h	/^extern void test_ncmpi_iget_vars_float(void);$/;"	p	signature:(void)
test_ncmpi_iget_vars_int	test/nc_test/tests.h	/^extern void test_ncmpi_iget_vars_int(void);$/;"	p	signature:(void)
test_ncmpi_iget_vars_long	test/nc_test/tests.h	/^extern void test_ncmpi_iget_vars_long(void);$/;"	p	signature:(void)
test_ncmpi_iget_vars_schar	test/nc_test/tests.h	/^extern void test_ncmpi_iget_vars_schar(void);$/;"	p	signature:(void)
test_ncmpi_iget_vars_short	test/nc_test/tests.h	/^extern void test_ncmpi_iget_vars_short(void);$/;"	p	signature:(void)
test_ncmpi_iget_vars_text	test/nc_test/tests.h	/^extern void test_ncmpi_iget_vars_text(void);$/;"	p	signature:(void)
test_ncmpi_iget_vars_uchar	test/nc_test/tests.h	/^extern void test_ncmpi_iget_vars_uchar(void);$/;"	p	signature:(void)
test_ncmpi_inq	test/nc_test/test_read.c	/^test_ncmpi_inq(void)$/;"	f	signature:(void)
test_ncmpi_inq	test/nc_test/tests.h	/^extern void test_ncmpi_inq(void);$/;"	p	signature:(void)
test_ncmpi_inq_att	test/nc_test/test_read.c	/^test_ncmpi_inq_att(void)$/;"	f	signature:(void)
test_ncmpi_inq_att	test/nc_test/tests.h	/^extern void test_ncmpi_inq_att(void);$/;"	p	signature:(void)
test_ncmpi_inq_attid	test/nc_test/test_read.c	/^test_ncmpi_inq_attid(void)$/;"	f	signature:(void)
test_ncmpi_inq_attid	test/nc_test/tests.h	/^extern void test_ncmpi_inq_attid(void);$/;"	p	signature:(void)
test_ncmpi_inq_attlen	test/nc_test/test_read.c	/^test_ncmpi_inq_attlen(void)$/;"	f	signature:(void)
test_ncmpi_inq_attlen	test/nc_test/tests.h	/^extern void test_ncmpi_inq_attlen(void);$/;"	p	signature:(void)
test_ncmpi_inq_attname	test/nc_test/test_read.c	/^test_ncmpi_inq_attname(void)$/;"	f	signature:(void)
test_ncmpi_inq_attname	test/nc_test/tests.h	/^extern void test_ncmpi_inq_attname(void);$/;"	p	signature:(void)
test_ncmpi_inq_atttype	test/nc_test/test_read.c	/^test_ncmpi_inq_atttype(void)$/;"	f	signature:(void)
test_ncmpi_inq_atttype	test/nc_test/tests.h	/^extern void test_ncmpi_inq_atttype(void);$/;"	p	signature:(void)
test_ncmpi_inq_dim	test/nc_test/test_read.c	/^test_ncmpi_inq_dim(void)$/;"	f	signature:(void)
test_ncmpi_inq_dim	test/nc_test/tests.h	/^extern void test_ncmpi_inq_dim(void);$/;"	p	signature:(void)
test_ncmpi_inq_dimid	test/nc_test/test_read.c	/^test_ncmpi_inq_dimid(void)$/;"	f	signature:(void)
test_ncmpi_inq_dimid	test/nc_test/tests.h	/^extern void test_ncmpi_inq_dimid(void);$/;"	p	signature:(void)
test_ncmpi_inq_dimlen	test/nc_test/test_read.c	/^test_ncmpi_inq_dimlen(void)$/;"	f	signature:(void)
test_ncmpi_inq_dimlen	test/nc_test/tests.h	/^extern void test_ncmpi_inq_dimlen(void);$/;"	p	signature:(void)
test_ncmpi_inq_dimname	test/nc_test/test_read.c	/^test_ncmpi_inq_dimname(void)$/;"	f	signature:(void)
test_ncmpi_inq_dimname	test/nc_test/tests.h	/^extern void test_ncmpi_inq_dimname(void);$/;"	p	signature:(void)
test_ncmpi_inq_natts	test/nc_test/test_read.c	/^test_ncmpi_inq_natts(void)$/;"	f	signature:(void)
test_ncmpi_inq_natts	test/nc_test/tests.h	/^extern void test_ncmpi_inq_natts(void);$/;"	p	signature:(void)
test_ncmpi_inq_ndims	test/nc_test/test_read.c	/^test_ncmpi_inq_ndims(void)$/;"	f	signature:(void)
test_ncmpi_inq_ndims	test/nc_test/tests.h	/^extern void test_ncmpi_inq_ndims(void);$/;"	p	signature:(void)
test_ncmpi_inq_nvars	test/nc_test/test_read.c	/^test_ncmpi_inq_nvars(void)$/;"	f	signature:(void)
test_ncmpi_inq_nvars	test/nc_test/tests.h	/^extern void test_ncmpi_inq_nvars(void);$/;"	p	signature:(void)
test_ncmpi_inq_unlimdim	test/nc_test/test_read.c	/^test_ncmpi_inq_unlimdim(void)$/;"	f	signature:(void)
test_ncmpi_inq_unlimdim	test/nc_test/tests.h	/^extern void test_ncmpi_inq_unlimdim(void);$/;"	p	signature:(void)
test_ncmpi_inq_var	test/nc_test/test_read.c	/^test_ncmpi_inq_var(void)$/;"	f	signature:(void)
test_ncmpi_inq_var	test/nc_test/tests.h	/^extern void test_ncmpi_inq_var(void);$/;"	p	signature:(void)
test_ncmpi_inq_vardimid	test/nc_test/test_read.c	/^test_ncmpi_inq_vardimid(void)$/;"	f	signature:(void)
test_ncmpi_inq_vardimid	test/nc_test/tests.h	/^extern void test_ncmpi_inq_vardimid(void);$/;"	p	signature:(void)
test_ncmpi_inq_varid	test/nc_test/test_read.c	/^test_ncmpi_inq_varid(void)$/;"	f	signature:(void)
test_ncmpi_inq_varid	test/nc_test/tests.h	/^extern void test_ncmpi_inq_varid(void);$/;"	p	signature:(void)
test_ncmpi_inq_varname	test/nc_test/test_read.c	/^test_ncmpi_inq_varname(void)$/;"	f	signature:(void)
test_ncmpi_inq_varname	test/nc_test/tests.h	/^extern void test_ncmpi_inq_varname(void);$/;"	p	signature:(void)
test_ncmpi_inq_varnatts	test/nc_test/test_read.c	/^test_ncmpi_inq_varnatts(void)$/;"	f	signature:(void)
test_ncmpi_inq_varnatts	test/nc_test/tests.h	/^extern void test_ncmpi_inq_varnatts(void);$/;"	p	signature:(void)
test_ncmpi_inq_varndims	test/nc_test/test_read.c	/^test_ncmpi_inq_varndims(void)$/;"	f	signature:(void)
test_ncmpi_inq_varndims	test/nc_test/tests.h	/^extern void test_ncmpi_inq_varndims(void);$/;"	p	signature:(void)
test_ncmpi_inq_vartype	test/nc_test/test_read.c	/^test_ncmpi_inq_vartype(void)$/;"	f	signature:(void)
test_ncmpi_inq_vartype	test/nc_test/tests.h	/^extern void test_ncmpi_inq_vartype(void);$/;"	p	signature:(void)
test_ncmpi_iput_var	test/nc_test/tests.h	/^extern void test_ncmpi_iput_var(void);$/;"	p	signature:(void)
test_ncmpi_iput_var1	test/nc_test/tests.h	/^extern void test_ncmpi_iput_var1(void);$/;"	p	signature:(void)
test_ncmpi_iput_var1_double	test/nc_test/tests.h	/^extern void test_ncmpi_iput_var1_double(void);$/;"	p	signature:(void)
test_ncmpi_iput_var1_float	test/nc_test/tests.h	/^extern void test_ncmpi_iput_var1_float(void);$/;"	p	signature:(void)
test_ncmpi_iput_var1_int	test/nc_test/tests.h	/^extern void test_ncmpi_iput_var1_int(void);$/;"	p	signature:(void)
test_ncmpi_iput_var1_long	test/nc_test/tests.h	/^extern void test_ncmpi_iput_var1_long(void);$/;"	p	signature:(void)
test_ncmpi_iput_var1_schar	test/nc_test/tests.h	/^extern void test_ncmpi_iput_var1_schar(void);$/;"	p	signature:(void)
test_ncmpi_iput_var1_short	test/nc_test/tests.h	/^extern void test_ncmpi_iput_var1_short(void);$/;"	p	signature:(void)
test_ncmpi_iput_var1_text	test/nc_test/tests.h	/^extern void test_ncmpi_iput_var1_text(void);$/;"	p	signature:(void)
test_ncmpi_iput_var1_uchar	test/nc_test/tests.h	/^extern void test_ncmpi_iput_var1_uchar(void);$/;"	p	signature:(void)
test_ncmpi_iput_var_double	test/nc_test/tests.h	/^extern void test_ncmpi_iput_var_double(void);$/;"	p	signature:(void)
test_ncmpi_iput_var_float	test/nc_test/tests.h	/^extern void test_ncmpi_iput_var_float(void);$/;"	p	signature:(void)
test_ncmpi_iput_var_int	test/nc_test/tests.h	/^extern void test_ncmpi_iput_var_int(void);$/;"	p	signature:(void)
test_ncmpi_iput_var_long	test/nc_test/tests.h	/^extern void test_ncmpi_iput_var_long(void);$/;"	p	signature:(void)
test_ncmpi_iput_var_schar	test/nc_test/tests.h	/^extern void test_ncmpi_iput_var_schar(void);$/;"	p	signature:(void)
test_ncmpi_iput_var_short	test/nc_test/tests.h	/^extern void test_ncmpi_iput_var_short(void);$/;"	p	signature:(void)
test_ncmpi_iput_var_text	test/nc_test/tests.h	/^extern void test_ncmpi_iput_var_text(void);$/;"	p	signature:(void)
test_ncmpi_iput_var_uchar	test/nc_test/tests.h	/^extern void test_ncmpi_iput_var_uchar(void);$/;"	p	signature:(void)
test_ncmpi_iput_vara	test/nc_test/tests.h	/^extern void test_ncmpi_iput_vara(void);$/;"	p	signature:(void)
test_ncmpi_iput_vara_double	test/nc_test/tests.h	/^extern void test_ncmpi_iput_vara_double(void);$/;"	p	signature:(void)
test_ncmpi_iput_vara_float	test/nc_test/tests.h	/^extern void test_ncmpi_iput_vara_float(void);$/;"	p	signature:(void)
test_ncmpi_iput_vara_int	test/nc_test/tests.h	/^extern void test_ncmpi_iput_vara_int(void);$/;"	p	signature:(void)
test_ncmpi_iput_vara_long	test/nc_test/tests.h	/^extern void test_ncmpi_iput_vara_long(void);$/;"	p	signature:(void)
test_ncmpi_iput_vara_schar	test/nc_test/tests.h	/^extern void test_ncmpi_iput_vara_schar(void);$/;"	p	signature:(void)
test_ncmpi_iput_vara_short	test/nc_test/tests.h	/^extern void test_ncmpi_iput_vara_short(void);$/;"	p	signature:(void)
test_ncmpi_iput_vara_text	test/nc_test/tests.h	/^extern void test_ncmpi_iput_vara_text(void);$/;"	p	signature:(void)
test_ncmpi_iput_vara_uchar	test/nc_test/tests.h	/^extern void test_ncmpi_iput_vara_uchar(void);$/;"	p	signature:(void)
test_ncmpi_iput_varm	test/nc_test/tests.h	/^extern void test_ncmpi_iput_varm(void);$/;"	p	signature:(void)
test_ncmpi_iput_varm_double	test/nc_test/tests.h	/^extern void test_ncmpi_iput_varm_double(void);$/;"	p	signature:(void)
test_ncmpi_iput_varm_float	test/nc_test/tests.h	/^extern void test_ncmpi_iput_varm_float(void);$/;"	p	signature:(void)
test_ncmpi_iput_varm_int	test/nc_test/tests.h	/^extern void test_ncmpi_iput_varm_int(void);$/;"	p	signature:(void)
test_ncmpi_iput_varm_long	test/nc_test/tests.h	/^extern void test_ncmpi_iput_varm_long(void);$/;"	p	signature:(void)
test_ncmpi_iput_varm_schar	test/nc_test/tests.h	/^extern void test_ncmpi_iput_varm_schar(void);$/;"	p	signature:(void)
test_ncmpi_iput_varm_short	test/nc_test/tests.h	/^extern void test_ncmpi_iput_varm_short(void);$/;"	p	signature:(void)
test_ncmpi_iput_varm_text	test/nc_test/tests.h	/^extern void test_ncmpi_iput_varm_text(void);$/;"	p	signature:(void)
test_ncmpi_iput_varm_uchar	test/nc_test/tests.h	/^extern void test_ncmpi_iput_varm_uchar(void);$/;"	p	signature:(void)
test_ncmpi_iput_vars	test/nc_test/tests.h	/^extern void test_ncmpi_iput_vars(void);$/;"	p	signature:(void)
test_ncmpi_iput_vars_double	test/nc_test/tests.h	/^extern void test_ncmpi_iput_vars_double(void);$/;"	p	signature:(void)
test_ncmpi_iput_vars_float	test/nc_test/tests.h	/^extern void test_ncmpi_iput_vars_float(void);$/;"	p	signature:(void)
test_ncmpi_iput_vars_int	test/nc_test/tests.h	/^extern void test_ncmpi_iput_vars_int(void);$/;"	p	signature:(void)
test_ncmpi_iput_vars_long	test/nc_test/tests.h	/^extern void test_ncmpi_iput_vars_long(void);$/;"	p	signature:(void)
test_ncmpi_iput_vars_schar	test/nc_test/tests.h	/^extern void test_ncmpi_iput_vars_schar(void);$/;"	p	signature:(void)
test_ncmpi_iput_vars_short	test/nc_test/tests.h	/^extern void test_ncmpi_iput_vars_short(void);$/;"	p	signature:(void)
test_ncmpi_iput_vars_text	test/nc_test/tests.h	/^extern void test_ncmpi_iput_vars_text(void);$/;"	p	signature:(void)
test_ncmpi_iput_vars_uchar	test/nc_test/tests.h	/^extern void test_ncmpi_iput_vars_uchar(void);$/;"	p	signature:(void)
test_ncmpi_open	test/nc_test/test_read.c	/^test_ncmpi_open(void)$/;"	f	signature:(void)
test_ncmpi_open	test/nc_test/tests.h	/^extern void test_ncmpi_open(void);$/;"	p	signature:(void)
test_ncmpi_put_att	test/nc_test/test_write.c	/^test_ncmpi_put_att(void)$/;"	f	signature:(void)
test_ncmpi_put_att	test/nc_test/tests.h	/^extern void test_ncmpi_put_att(void);$/;"	p	signature:(void)
test_ncmpi_put_att_double	test/nc_test/tests.h	/^extern void test_ncmpi_put_att_double(void);$/;"	p	signature:(void)
test_ncmpi_put_att_float	test/nc_test/tests.h	/^extern void test_ncmpi_put_att_float(void);$/;"	p	signature:(void)
test_ncmpi_put_att_int	test/nc_test/tests.h	/^extern void test_ncmpi_put_att_int(void);$/;"	p	signature:(void)
test_ncmpi_put_att_long	test/nc_test/tests.h	/^extern void test_ncmpi_put_att_long(void);$/;"	p	signature:(void)
test_ncmpi_put_att_schar	test/nc_test/tests.h	/^extern void test_ncmpi_put_att_schar(void);$/;"	p	signature:(void)
test_ncmpi_put_att_short	test/nc_test/tests.h	/^extern void test_ncmpi_put_att_short(void);$/;"	p	signature:(void)
test_ncmpi_put_att_text	test/nc_test/tests.h	/^extern void test_ncmpi_put_att_text(void);$/;"	p	signature:(void)
test_ncmpi_put_att_uchar	test/nc_test/tests.h	/^extern void test_ncmpi_put_att_uchar(void);$/;"	p	signature:(void)
test_ncmpi_put_var	test/nc_test/tests.h	/^extern void test_ncmpi_put_var(void);$/;"	p	signature:(void)
test_ncmpi_put_var1	test/nc_test/test_write.c	/^test_ncmpi_put_var1(void)$/;"	f	signature:(void)
test_ncmpi_put_var1	test/nc_test/tests.h	/^extern void test_ncmpi_put_var1(void);$/;"	p	signature:(void)
test_ncmpi_put_var1_double	test/nc_test/tests.h	/^extern void test_ncmpi_put_var1_double(void);$/;"	p	signature:(void)
test_ncmpi_put_var1_float	test/nc_test/tests.h	/^extern void test_ncmpi_put_var1_float(void);$/;"	p	signature:(void)
test_ncmpi_put_var1_int	test/nc_test/tests.h	/^extern void test_ncmpi_put_var1_int(void);$/;"	p	signature:(void)
test_ncmpi_put_var1_long	test/nc_test/tests.h	/^extern void test_ncmpi_put_var1_long(void);$/;"	p	signature:(void)
test_ncmpi_put_var1_schar	test/nc_test/tests.h	/^extern void test_ncmpi_put_var1_schar(void);$/;"	p	signature:(void)
test_ncmpi_put_var1_short	test/nc_test/tests.h	/^extern void test_ncmpi_put_var1_short(void);$/;"	p	signature:(void)
test_ncmpi_put_var1_text	test/nc_test/tests.h	/^extern void test_ncmpi_put_var1_text(void);$/;"	p	signature:(void)
test_ncmpi_put_var1_uchar	test/nc_test/tests.h	/^extern void test_ncmpi_put_var1_uchar(void);$/;"	p	signature:(void)
test_ncmpi_put_var_double	test/nc_test/tests.h	/^extern void test_ncmpi_put_var_double(void);$/;"	p	signature:(void)
test_ncmpi_put_var_float	test/nc_test/tests.h	/^extern void test_ncmpi_put_var_float(void);$/;"	p	signature:(void)
test_ncmpi_put_var_int	test/nc_test/tests.h	/^extern void test_ncmpi_put_var_int(void);$/;"	p	signature:(void)
test_ncmpi_put_var_long	test/nc_test/tests.h	/^extern void test_ncmpi_put_var_long(void);$/;"	p	signature:(void)
test_ncmpi_put_var_schar	test/nc_test/tests.h	/^extern void test_ncmpi_put_var_schar(void);$/;"	p	signature:(void)
test_ncmpi_put_var_short	test/nc_test/tests.h	/^extern void test_ncmpi_put_var_short(void);$/;"	p	signature:(void)
test_ncmpi_put_var_text	test/nc_test/tests.h	/^extern void test_ncmpi_put_var_text(void);$/;"	p	signature:(void)
test_ncmpi_put_var_uchar	test/nc_test/tests.h	/^extern void test_ncmpi_put_var_uchar(void);$/;"	p	signature:(void)
test_ncmpi_put_vara	test/nc_test/test_write.c	/^test_ncmpi_put_vara(void)$/;"	f	signature:(void)
test_ncmpi_put_vara	test/nc_test/tests.h	/^extern void test_ncmpi_put_vara(void);$/;"	p	signature:(void)
test_ncmpi_put_vara_double	test/nc_test/tests.h	/^extern void test_ncmpi_put_vara_double(void);$/;"	p	signature:(void)
test_ncmpi_put_vara_float	test/nc_test/tests.h	/^extern void test_ncmpi_put_vara_float(void);$/;"	p	signature:(void)
test_ncmpi_put_vara_int	test/nc_test/tests.h	/^extern void test_ncmpi_put_vara_int(void);$/;"	p	signature:(void)
test_ncmpi_put_vara_long	test/nc_test/tests.h	/^extern void test_ncmpi_put_vara_long(void);$/;"	p	signature:(void)
test_ncmpi_put_vara_schar	test/nc_test/tests.h	/^extern void test_ncmpi_put_vara_schar(void);$/;"	p	signature:(void)
test_ncmpi_put_vara_short	test/nc_test/tests.h	/^extern void test_ncmpi_put_vara_short(void);$/;"	p	signature:(void)
test_ncmpi_put_vara_text	test/nc_test/tests.h	/^extern void test_ncmpi_put_vara_text(void);$/;"	p	signature:(void)
test_ncmpi_put_vara_uchar	test/nc_test/tests.h	/^extern void test_ncmpi_put_vara_uchar(void);$/;"	p	signature:(void)
test_ncmpi_put_varm	test/nc_test/test_write.c	/^test_ncmpi_put_varm(void)$/;"	f	signature:(void)
test_ncmpi_put_varm	test/nc_test/tests.h	/^extern void test_ncmpi_put_varm(void);$/;"	p	signature:(void)
test_ncmpi_put_varm_double	test/nc_test/tests.h	/^extern void test_ncmpi_put_varm_double(void);$/;"	p	signature:(void)
test_ncmpi_put_varm_float	test/nc_test/tests.h	/^extern void test_ncmpi_put_varm_float(void);$/;"	p	signature:(void)
test_ncmpi_put_varm_int	test/nc_test/tests.h	/^extern void test_ncmpi_put_varm_int(void);$/;"	p	signature:(void)
test_ncmpi_put_varm_long	test/nc_test/tests.h	/^extern void test_ncmpi_put_varm_long(void);$/;"	p	signature:(void)
test_ncmpi_put_varm_schar	test/nc_test/tests.h	/^extern void test_ncmpi_put_varm_schar(void);$/;"	p	signature:(void)
test_ncmpi_put_varm_short	test/nc_test/tests.h	/^extern void test_ncmpi_put_varm_short(void);$/;"	p	signature:(void)
test_ncmpi_put_varm_text	test/nc_test/tests.h	/^extern void test_ncmpi_put_varm_text(void);$/;"	p	signature:(void)
test_ncmpi_put_varm_uchar	test/nc_test/tests.h	/^extern void test_ncmpi_put_varm_uchar(void);$/;"	p	signature:(void)
test_ncmpi_put_vars	test/nc_test/test_write.c	/^test_ncmpi_put_vars(void)$/;"	f	signature:(void)
test_ncmpi_put_vars	test/nc_test/tests.h	/^extern void test_ncmpi_put_vars(void);$/;"	p	signature:(void)
test_ncmpi_put_vars_double	test/nc_test/tests.h	/^extern void test_ncmpi_put_vars_double(void);$/;"	p	signature:(void)
test_ncmpi_put_vars_float	test/nc_test/tests.h	/^extern void test_ncmpi_put_vars_float(void);$/;"	p	signature:(void)
test_ncmpi_put_vars_int	test/nc_test/tests.h	/^extern void test_ncmpi_put_vars_int(void);$/;"	p	signature:(void)
test_ncmpi_put_vars_long	test/nc_test/tests.h	/^extern void test_ncmpi_put_vars_long(void);$/;"	p	signature:(void)
test_ncmpi_put_vars_schar	test/nc_test/tests.h	/^extern void test_ncmpi_put_vars_schar(void);$/;"	p	signature:(void)
test_ncmpi_put_vars_short	test/nc_test/tests.h	/^extern void test_ncmpi_put_vars_short(void);$/;"	p	signature:(void)
test_ncmpi_put_vars_text	test/nc_test/tests.h	/^extern void test_ncmpi_put_vars_text(void);$/;"	p	signature:(void)
test_ncmpi_put_vars_uchar	test/nc_test/tests.h	/^extern void test_ncmpi_put_vars_uchar(void);$/;"	p	signature:(void)
test_ncmpi_redef	test/nc_test/test_write.c	/^test_ncmpi_redef(void)$/;"	f	signature:(void)
test_ncmpi_redef	test/nc_test/tests.h	/^extern void test_ncmpi_redef(void);$/;"	p	signature:(void)
test_ncmpi_rename_att	test/nc_test/test_write.c	/^test_ncmpi_rename_att(void)$/;"	f	signature:(void)
test_ncmpi_rename_att	test/nc_test/tests.h	/^extern void test_ncmpi_rename_att(void);$/;"	p	signature:(void)
test_ncmpi_rename_dim	test/nc_test/test_write.c	/^test_ncmpi_rename_dim(void)$/;"	f	signature:(void)
test_ncmpi_rename_dim	test/nc_test/tests.h	/^extern void test_ncmpi_rename_dim(void);$/;"	p	signature:(void)
test_ncmpi_rename_var	test/nc_test/test_write.c	/^test_ncmpi_rename_var(void)$/;"	f	signature:(void)
test_ncmpi_rename_var	test/nc_test/tests.h	/^extern void test_ncmpi_rename_var(void);$/;"	p	signature:(void)
test_ncmpi_set_default_format	test/nc_test/test_write.c	/^test_ncmpi_set_default_format(void)$/;"	f	signature:(void)
test_ncmpi_set_default_format	test/nc_test/tests.h	/^extern void test_ncmpi_set_default_format(void);$/;"	p	signature:(void)
test_ncmpi_set_fill	test/nc_test/test_write.c	/^test_ncmpi_set_fill(void)$/;"	f	signature:(void)
test_ncmpi_set_fill	test/nc_test/tests.h	/^extern void test_ncmpi_set_fill(void);$/;"	p	signature:(void)
test_ncmpi_strerror	test/nc_test/test_read.c	/^test_ncmpi_strerror(void)$/;"	f	signature:(void)
test_ncmpi_strerror	test/nc_test/tests.h	/^extern void test_ncmpi_strerror(void);$/;"	p	signature:(void)
test_ncmpi_sync	test/nc_test/test_write.c	/^test_ncmpi_sync(void)$/;"	f	signature:(void)
test_ncmpi_sync	test/nc_test/tests.h	/^extern void test_ncmpi_sync(void);$/;"	p	signature:(void)
testfile	test/nc_test/nc_test.c	/^char testfile[] = "test.nc";    \/* read-only testfile *\/$/;"	v
testfile	test/nc_test/tests.h	/^extern char testfile[];		\/* netCDF read-only test data *\/$/;"	x
text	test/nc_test/tests.h	/^typedef char text;$/;"	t
text_max	test/nc_test/tests.h	108;"	d
text_min	test/nc_test/tests.h	99;"	d
toMixedBase	test/nc_test/tests.h	/^toMixedBase($/;"	p	signature:( size_t number, size_t length, const MPI_Offset base[], MPI_Offset result[])
toMixedBase	test/nc_test/util.c	/^toMixedBase($/;"	f	signature:( size_t number, size_t length, const MPI_Offset base[], MPI_Offset result[])
totpes	test/fandc/csnap.c	/^int totpes;                                 \/* total number of PEs *\/$/;"	v
totsiz_2d	test/fandc/csnap.c	/^MPI_Offset totsiz_2d[2];                           \/* global sizes of 2D field *\/$/;"	v
totsiz_3d	test/fandc/csnap.c	/^const MPI_Offset totsiz_3d[3] = { 256, 256, 256 }; \/* global sizes of 3D field *\/$/;"	v
true	src/utils/ncdump/ncdump.h	/^enum {false=0, true=1};$/;"	e	enum:__anon3
type	src/lib/nc.h	/^	nc_type type;		\/* the discriminant *\/$/;"	m	struct:__anon10	access:public
type	src/lib/nc.h	/^	nc_type type;		\/* the discriminant *\/$/;"	m	struct:__anon9	access:public
type	src/utils/ncdump/ncdump.h	/^    nc_type type;$/;"	m	struct:ncatt	access:public
type	src/utils/ncdump/ncdump.h	/^    nc_type type;$/;"	m	struct:ncvar	access:public
type	src/utils/ncgen/ncgen.h	/^    nc_type type;$/;"	m	struct:atts	access:public
type	src/utils/ncgen/ncgen.h	/^    nc_type type;$/;"	m	struct:vars	access:public
type_code	src/utils/ncgen/ncgentab.c	/^static nc_type type_code;	\/* holds declared type for variables *\/$/;"	v	file:
type_name	src/utils/ncdump/ncdump.c	/^static const char* type_name(ncmpi_type  type);$/;"	p	file:	signature:(ncmpi_type type)
type_name	src/utils/ncdump/ncdump.c	/^type_name(ncmpi_type type)$/;"	f	file:	signature:(ncmpi_type type)
tztrim	src/utils/ncdump/ncdump.c	/^static void tztrim(char* ss);$/;"	p	file:	signature:(char* ss)
tztrim	src/utils/ncdump/ncdump.c	/^tztrim(char *ss)$/;"	f	file:	signature:(char *ss)
tztrim	src/utils/ncgen/load.c	/^tztrim($/;"	f	file:	signature:( char *ss )
ubasename	src/utils/ncgen/main.c	/^static const char* ubasename ( const char* av0 );$/;"	p	file:	signature:( const char* av0 )
ubasename	src/utils/ncgen/main.c	/^ubasename($/;"	f	file:	signature:( const char *av0)
uchar	src/lib/nctypes.h	/^typedef unsigned char uchar;$/;"	t
uchar	test/nc_test/tests.h	/^typedef unsigned char uchar;$/;"	t
uchar_max	test/nc_test/tests.h	109;"	d
uchar_min	test/nc_test/tests.h	100;"	d
ud_abort_	test/nf_test/fortlib.c	/^FORTRAN_API void FORT_CALL ud_abort_(int *v1) {$/;"	f	signature:(int *v1)
ud_abort_	test/nf_test/fortlib.c	39;"	d	file:
ud_abort_	test/nf_test/fortlib.c	41;"	d	file:
ud_abort_	test/nf_test/fortlib.c	43;"	d	file:
ud_exit_	test/nf_test/fortlib.c	/^FORTRAN_API void FORT_CALL ud_exit_(int *v1) {$/;"	f	signature:(int *v1)
ud_exit_	test/nf_test/fortlib.c	21;"	d	file:
ud_exit_	test/nf_test/fortlib.c	23;"	d	file:
ud_exit_	test/nf_test/fortlib.c	25;"	d	file:
ud_rand_	test/nf_test/fortlib.c	/^FORTRAN_API double FORT_CALL ud_rand_(int *seed) {$/;"	f	signature:(int *seed)
ud_rand_	test/nf_test/fortlib.c	53;"	d	file:
ud_rand_	test/nf_test/fortlib.c	55;"	d	file:
ud_rand_	test/nf_test/fortlib.c	57;"	d	file:
ud_shift_	test/nf_test/fortlib.c	/^FORTRAN_API int FORT_CALL ud_shift_(int * value, int *amount) {$/;"	f	signature:(int * value, int *amount)
ud_shift_	test/nf_test/fortlib.c	74;"	d	file:
ud_shift_	test/nf_test/fortlib.c	76;"	d	file:
ud_shift_	test/nf_test/fortlib.c	78;"	d	file:
unknown	src/lib/error.c	/^static char unknown[] = "Unknown Error";$/;"	v	file:
unput	src/utils/ncgen/ncgenyy.c	207;"	d	file:
upcorner	src/utils/ncdump/vardata.c	/^static int  upcorner(const size_t* dims, int ndims, MPI_Offset* odom,$/;"	p	file:	signature:(const size_t* dims, int ndims, MPI_Offset* odom, const size_t* add)
upcorner	src/utils/ncdump/vardata.c	/^upcorner($/;"	f	file:	signature:( const size_t *dims, int ndims, MPI_Offset* odom, const size_t* add )
usage	src/utils/ncdump/ncdump.c	/^static void usage(void);$/;"	p	file:	signature:(void)
usage	src/utils/ncdump/ncdump.c	/^usage(void)$/;"	f	file:	signature:(void)
usage	src/utils/ncgen/main.c	/^static void usage ( void );$/;"	p	file:	signature:( void )
usage	src/utils/ncgen/main.c	/^static void usage(void)$/;"	f	file:	signature:(void)
usage	test/nc_test/nc_test.c	/^usage(void)$/;"	f	file:	signature:(void)
use_cdf2	test/nc_test/nc_test.c	/^int use_cdf2 = 0; 	\/* 0: use CDF-1, 1: use CDF-2 *\/$/;"	v
use_cdf2	test/nc_test/tests.h	/^extern int  use_cdf2;		\/* if 1, use CDF-2 format (offset >2GB ) *\/$/;"	x
used_in_rec_var	src/utils/ncgen/genlib.c	/^used_in_rec_var($/;"	f	file:	signature:( int idim )
val	src/utils/ncgen/ncgen.h	/^    void *val;$/;"	m	struct:atts	access:public
val_check_buffer	src/lib/validator.c	/^static int val_check_buffer(bufferinfo *gbp, MPI_Offset nextread);$/;"	p	file:	signature:(bufferinfo *gbp, MPI_Offset nextread)
val_check_buffer	src/lib/validator.c	/^val_check_buffer(bufferinfo *gbp, MPI_Offset nextread) {$/;"	f	file:	signature:(bufferinfo *gbp, MPI_Offset nextread)
val_fetch	src/lib/validator.c	/^static int val_fetch(bufferinfo *gbp, MPI_Offset fsize);$/;"	p	file:	signature:(bufferinfo *gbp, MPI_Offset fsize)
val_fetch	src/lib/validator.c	/^val_fetch(bufferinfo *gbp, MPI_Offset fsize) {$/;"	f	file:	signature:(bufferinfo *gbp, MPI_Offset fsize)
val_get_NC	src/lib/validator.c	/^static int val_get_NC(NC *ncp);$/;"	p	file:	signature:(NC *ncp)
val_get_NC	src/lib/validator.c	/^val_get_NC(NC *ncp) {$/;"	f	file:	signature:(NC *ncp)
val_get_NC_attr	src/lib/validator.c	/^static int val_get_NC_attr(bufferinfo *gbp, NC_attr **attrpp);$/;"	p	file:	signature:(bufferinfo *gbp, NC_attr **attrpp)
val_get_NC_attr	src/lib/validator.c	/^val_get_NC_attr(bufferinfo *gbp, NC_attr **attrpp) {$/;"	f	file:	signature:(bufferinfo *gbp, NC_attr **attrpp)
val_get_NC_attrV	src/lib/validator.c	/^static int val_get_NC_attrV(bufferinfo *gbp, NC_attr *attrp);$/;"	p	file:	signature:(bufferinfo *gbp, NC_attr *attrp)
val_get_NC_attrV	src/lib/validator.c	/^val_get_NC_attrV(bufferinfo *gbp, NC_attr *attrp) {$/;"	f	file:	signature:(bufferinfo *gbp, NC_attr *attrp)
val_get_NC_attrarray	src/lib/validator.c	/^static int val_get_NC_attrarray(bufferinfo *gbp, NC_attrarray *ncap);$/;"	p	file:	signature:(bufferinfo *gbp, NC_attrarray *ncap)
val_get_NC_attrarray	src/lib/validator.c	/^val_get_NC_attrarray(bufferinfo *gbp, NC_attrarray *ncap){$/;"	f	file:	signature:(bufferinfo *gbp, NC_attrarray *ncap)
val_get_NC_dim	src/lib/validator.c	/^static int val_get_NC_dim(bufferinfo *gbp, NC_dim **dimpp);$/;"	p	file:	signature:(bufferinfo *gbp, NC_dim **dimpp)
val_get_NC_dim	src/lib/validator.c	/^val_get_NC_dim(bufferinfo *gbp, NC_dim **dimpp) {$/;"	f	file:	signature:(bufferinfo *gbp, NC_dim **dimpp)
val_get_NC_dimarray	src/lib/validator.c	/^static int val_get_NC_dimarray(bufferinfo *gbp, NC_dimarray *ncap);$/;"	p	file:	signature:(bufferinfo *gbp, NC_dimarray *ncap)
val_get_NC_dimarray	src/lib/validator.c	/^val_get_NC_dimarray(bufferinfo *gbp, NC_dimarray *ncap) {$/;"	f	file:	signature:(bufferinfo *gbp, NC_dimarray *ncap)
val_get_NC_string	src/lib/validator.c	/^static int val_get_NC_string(bufferinfo *gbp, NC_string **ncstrpp);$/;"	p	file:	signature:(bufferinfo *gbp, NC_string **ncstrpp)
val_get_NC_string	src/lib/validator.c	/^val_get_NC_string(bufferinfo *gbp, NC_string **ncstrpp) {$/;"	f	file:	signature:(bufferinfo *gbp, NC_string **ncstrpp)
val_get_NC_var	src/lib/validator.c	/^static int val_get_NC_var(bufferinfo *gbp, NC_var **varpp);$/;"	p	file:	signature:(bufferinfo *gbp, NC_var **varpp)
val_get_NC_var	src/lib/validator.c	/^val_get_NC_var(bufferinfo *gbp, NC_var **varpp) {$/;"	f	file:	signature:(bufferinfo *gbp, NC_var **varpp)
val_get_NC_vararray	src/lib/validator.c	/^static int val_get_NC_vararray(bufferinfo *gbp, NC_vararray *ncap);$/;"	p	file:	signature:(bufferinfo *gbp, NC_vararray *ncap)
val_get_NC_vararray	src/lib/validator.c	/^val_get_NC_vararray(bufferinfo *gbp, NC_vararray *ncap) {$/;"	f	file:	signature:(bufferinfo *gbp, NC_vararray *ncap)
val_get_NCtype	src/lib/validator.c	/^static int val_get_NCtype(bufferinfo *gbp, NCtype *typep);$/;"	p	file:	signature:(bufferinfo *gbp, NCtype *typep)
val_get_NCtype	src/lib/validator.c	/^val_get_NCtype(bufferinfo *gbp, NCtype *typep) {$/;"	f	file:	signature:(bufferinfo *gbp, NCtype *typep)
val_get_nc_type	src/lib/validator.c	/^static int val_get_nc_type(bufferinfo *gbp, nc_type *typep);$/;"	p	file:	signature:(bufferinfo *gbp, nc_type *typep)
val_get_nc_type	src/lib/validator.c	/^val_get_nc_type(bufferinfo *gbp, nc_type *typep) {$/;"	f	file:	signature:(bufferinfo *gbp, nc_type *typep)
val_get_size_t	src/lib/validator.c	/^static int val_get_size_t(bufferinfo *gbp, MPI_Offset *sp);$/;"	p	file:	signature:(bufferinfo *gbp, MPI_Offset *sp)
val_get_size_t	src/lib/validator.c	/^val_get_size_t(bufferinfo *gbp, MPI_Offset *sp) {$/;"	f	file:	signature:(bufferinfo *gbp, MPI_Offset *sp)
valnum	src/utils/ncgen/init.c	/^int valnum;			\/* value number index for attributes *\/$/;"	v
valnum	src/utils/ncgen/ncgen.h	/^extern int valnum;		\/* number of values specified for variable *\/$/;"	x
vals	src/utils/ncdump/ncdump.h	/^    double *vals;		\/* for numeric attributes of all types *\/$/;"	m	struct:ncatt	access:public
valtype	src/utils/ncgen/ncgentab.c	/^static nc_type valtype;		\/* type code for list of attribute values  *\/$/;"	v	file:
value	src/lib/nc.h	/^	NC_attr **value;$/;"	m	struct:NC_attrarray	access:public
value	src/lib/nc.h	/^	NC_dim **value;$/;"	m	struct:NC_dimarray	access:public
value	src/lib/nc.h	/^	NC_var **value;$/;"	m	struct:NC_vararray	access:public
var	src/utils/ncdump/ncdump.h	/^    int var;$/;"	m	struct:ncatt	access:public
var	src/utils/ncgen/ncgen.h	/^    int var;			\/* number of variable for this attribute *\/$/;"	m	struct:atts	access:public
var_dimid	test/nc_test/nc_test.c	/^int var_dimid[NVARS][MAX_RANK];$/;"	v
var_dimid	test/nc_test/tests.h	/^extern int var_dimid[NVARS][MAX_RANK];$/;"	x
var_len	src/utils/ncgen/init.c	/^size_t var_len;			\/* variable length (product of dimensions) *\/$/;"	v
var_len	src/utils/ncgen/ncgen.h	/^extern size_t var_len;		\/* variable length (product of dimensions) *\/$/;"	x
var_name	test/nc_test/nc_test.c	/^char var_name[NVARS][2+MAX_RANK];$/;"	v
var_name	test/nc_test/tests.h	/^extern char var_name[NVARS][2+MAX_RANK];$/;"	x
var_natts	test/nc_test/nc_test.c	/^size_t var_natts[NVARS];$/;"	v
var_natts	test/nc_test/tests.h	/^extern size_t var_natts[NVARS];$/;"	x
var_nels	test/nc_test/nc_test.c	/^size_t var_nels[NVARS];$/;"	v
var_nels	test/nc_test/tests.h	/^extern size_t var_nels[NVARS];$/;"	x
var_rank	test/nc_test/nc_test.c	/^size_t var_rank[NVARS];$/;"	v
var_rank	test/nc_test/tests.h	/^extern size_t var_rank[NVARS];$/;"	x
var_shape	test/nc_test/nc_test.c	/^MPI_Offset var_shape[NVARS][MAX_RANK];$/;"	v
var_shape	test/nc_test/tests.h	/^extern MPI_Offset var_shape[NVARS][MAX_RANK];$/;"	x
var_size	src/utils/ncgen/init.c	/^size_t var_size;		\/* size of each element of variable *\/$/;"	v
var_size	src/utils/ncgen/ncgen.h	/^extern size_t var_size;		\/* size of each element of variable *\/$/;"	x
var_type	test/nc_test/nc_test.c	/^ncmpi_type var_type[NVARS];$/;"	v
var_type	test/nc_test/tests.h	/^extern ncmpi_type var_type[NVARS];$/;"	x
varadd	src/utils/ncdump/dumplib.c	/^varadd(vnode* vlist, int varid)$/;"	f	signature:(vnode* vlist, int varid)
varadd	src/utils/ncdump/dumplib.h	/^extern void	varadd ( vnode* vlist, int varid );$/;"	p	signature:( vnode* vlist, int varid )
vardata	src/utils/ncdump/vardata.c	/^vardata($/;"	f	signature:( const struct ncvar *vp, size_t vdims[], int ncid, int varid, const struct fspec* fsp )
vardata	src/utils/ncdump/vardata.h	/^extern int vardata ( const struct ncvar*, \/* variable *\/$/;"	p	signature:( const struct ncvar*, size_t [], int, int, const struct fspec* )
varmember	src/utils/ncdump/dumplib.c	/^varmember(const vnode* vlist, int varid)$/;"	f	signature:(const vnode* vlist, int varid)
varmember	src/utils/ncdump/dumplib.h	/^extern int	varmember ( const vnode* vlist, int varid );$/;"	p	signature:( const vnode* vlist, int varid )
varnum	src/utils/ncgen/init.c	/^int varnum;			\/* variable number index for attributes *\/$/;"	v
varnum	src/utils/ncgen/ncgen.h	/^extern int varnum;		\/* variable number index for attributes *\/$/;"	x
varp	src/lib/nc.h	/^    NC_var        *varp;$/;"	m	struct:NC_req	access:public
vars	src/lib/nc.h	/^	NC_vararray vars;$/;"	m	struct:NC	access:public
vars	src/utils/ncgen/init.c	/^struct vars *vars;		\/* a malloc'ed list *\/$/;"	v	typeref:struct:vars
vars	src/utils/ncgen/ncgen.h	/^extern struct vars {$/;"	s
vars	src/utils/ncgen/ncgen.h	/^} *vars;			\/* table of variables *\/$/;"	x
vars::data_stmnt	src/utils/ncgen/ncgen.h	/^    char *data_stmnt;		\/* for record variables, to avoid$/;"	m	struct:vars	access:public
vars::dims	src/utils/ncgen/ncgen.h	/^    int *dims;			\/* array of dimension ids *\/$/;"	m	struct:vars	access:public
vars::fill_value	src/utils/ncgen/ncgen.h	/^    union generic fill_value;	\/* set to value of _FillValue attribute *\/$/;"	m	struct:vars	typeref:union:vars::generic	access:public
vars::has_data	src/utils/ncgen/ncgen.h	/^    int has_data;		\/* 1 if data specified, 0 otherwise *\/$/;"	m	struct:vars	access:public
vars::lname	src/utils/ncgen/ncgen.h	/^    char *lname;		\/* with no "-" characters, for C and Fortran *\/$/;"	m	struct:vars	access:public
vars::name	src/utils/ncgen/ncgen.h	/^    char *name;$/;"	m	struct:vars	access:public
vars::ndims	src/utils/ncgen/ncgen.h	/^    int ndims;$/;"	m	struct:vars	access:public
vars::nrecs	src/utils/ncgen/ncgen.h	/^    size_t nrecs;		\/* for record variables, number of records$/;"	m	struct:vars	access:public
vars::type	src/utils/ncgen/ncgen.h	/^    nc_type type;$/;"	m	struct:vars	access:public
vax_double	src/lib/ncx.c	/^struct  vax_double {$/;"	s	file:
vax_double::exp	src/lib/ncx.c	/^	unsigned int	exp       : 8;$/;"	m	struct:vax_double	file:	access:public
vax_double::mantissa1	src/lib/ncx.c	/^	unsigned int	mantissa1 : 7;$/;"	m	struct:vax_double	file:	access:public
vax_double::mantissa2	src/lib/ncx.c	/^	unsigned int	mantissa2 : 16;$/;"	m	struct:vax_double	file:	access:public
vax_double::mantissa3	src/lib/ncx.c	/^	unsigned int	mantissa3 : 16;$/;"	m	struct:vax_double	file:	access:public
vax_double::mantissa4	src/lib/ncx.c	/^	unsigned int	mantissa4 : 16;$/;"	m	struct:vax_double	file:	access:public
vax_double::sign	src/lib/ncx.c	/^	unsigned int	sign      : 1;$/;"	m	struct:vax_double	file:	access:public
vax_single	src/lib/ncx.c	/^struct	vax_single {$/;"	s	file:
vax_single::exp	src/lib/ncx.c	/^	unsigned int	exp       : 8;$/;"	m	struct:vax_single	file:	access:public
vax_single::mantissa1	src/lib/ncx.c	/^	unsigned int	mantissa1 : 7;$/;"	m	struct:vax_single	file:	access:public
vax_single::mantissa2	src/lib/ncx.c	/^	unsigned int	mantissa2 : 16;$/;"	m	struct:vax_single	file:	access:public
vax_single::sign	src/lib/ncx.c	/^	unsigned int	sign      : 1;$/;"	m	struct:vax_single	file:	access:public
verbose	test/nc_test/nc_test.c	/^int  verbose;		\/* if 1, print details of tests *\/$/;"	v
verbose	test/nc_test/tests.h	/^extern int  verbose;		\/* if 1, print details of tests *\/$/;"	x
version	src/lib/nc.h	/^  int version;		\/* either 1 for normal netcdf or $/;"	m	struct:bufferinfo	access:public
version	src/utils/ncdump/ncdump.h	/^    boolean version;	       \/* if true, print version*\/$/;"	m	struct:fspec	access:public
vms_strerror	src/lib/error.c	/^vms_strerror( int status )$/;"	f	file:	signature:( int status )
vnode	src/utils/ncdump/dumplib.h	/^struct vnode$/;"	s
vnode	src/utils/ncdump/dumplib.h	/^typedef struct vnode vnode;$/;"	t	typeref:struct:vnode
vnode::id	src/utils/ncdump/dumplib.h	/^    int id;$/;"	m	struct:vnode	access:public
vnode::next	src/utils/ncdump/dumplib.h	/^    struct vnode* next;$/;"	m	struct:vnode	typeref:struct:vnode::vnode	access:public
vnum	src/utils/ncgen/ncgentab.c	/^	int             vnum;	        \/* handle as a variable *\/$/;"	m	struct:Symbol	file:	access:public
write_NC	src/lib/nc.c	/^static int write_NC(NC *ncp);$/;"	p	file:	signature:(NC *ncp)
write_NC	src/lib/nc.c	/^write_NC(NC *ncp)$/;"	f	file:	signature:(NC *ncp)
write_file	test/fandc/csnap.c	/^void write_file(char *filename, double *t) {$/;"	f	signature:(char *filename, double *t)
write_file	test/fandc/csnap.c	/^void write_file(char *filename, double *t);$/;"	p	file:	signature:(char *filename, double *t)
write_file	test/nc_test/tests.h	/^void write_file(char *filename);$/;"	p	signature:(char *filename)
write_file	test/nc_test/util.c	/^write_file(char *filename) $/;"	f	signature:(char *filename)
xbuf	src/lib/nc.h	/^    void          *xbuf;$/;"	m	struct:NC_req	access:public
xsz	src/lib/nc.h	/^	MPI_Offset xsz;		\/* amount of space at xvalue *\/$/;"	m	struct:__anon9	access:public
xsz	src/lib/nc.h	/^	MPI_Offset xsz;		\/* xszof 1 element *\/$/;"	m	struct:__anon10	access:public
xsz	src/lib/nc.h	/^	MPI_Offset xsz;	\/* external size of this header, <= var[0].begin *\/$/;"	m	struct:NC	access:public
xvalue	src/lib/nc.h	/^	void *xvalue;		\/* the actual data, in external representation *\/$/;"	m	struct:__anon9	access:public
yy_accept	src/utils/ncgen/ncgenyy.c	/^static yyconst flex_int16_t yy_accept[249] =$/;"	v	file:
yy_at_bol	src/utils/ncgen/ncgenyy.c	/^	int yy_at_bol;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_base	src/utils/ncgen/ncgenyy.c	/^static yyconst flex_int16_t yy_base[259] =$/;"	v	file:
yy_bs_column	src/utils/ncgen/ncgenyy.c	/^    int yy_bs_column; \/**< The column count. *\/$/;"	m	struct:yy_buffer_state	file:	access:public
yy_bs_lineno	src/utils/ncgen/ncgenyy.c	/^    int yy_bs_lineno; \/**< The line count. *\/$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buf_pos	src/utils/ncgen/ncgenyy.c	/^	char *yy_buf_pos;		\/* current position in input buffer *\/$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buf_size	src/utils/ncgen/ncgenyy.c	/^	yy_size_t yy_buf_size;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_stack	src/utils/ncgen/ncgenyy.c	/^static YY_BUFFER_STATE * yy_buffer_stack = 0; \/**< Stack as an array. *\/$/;"	v	file:
yy_buffer_stack_max	src/utils/ncgen/ncgenyy.c	/^static size_t yy_buffer_stack_max = 0; \/**< capacity of stack. *\/$/;"	v	file:
yy_buffer_stack_top	src/utils/ncgen/ncgenyy.c	/^static size_t yy_buffer_stack_top = 0; \/**< index of top of stack. *\/$/;"	v	file:
yy_buffer_state	src/utils/ncgen/ncgenyy.c	/^struct yy_buffer_state$/;"	s	file:
yy_buffer_state::yy_at_bol	src/utils/ncgen/ncgenyy.c	/^	int yy_at_bol;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_state::yy_bs_column	src/utils/ncgen/ncgenyy.c	/^    int yy_bs_column; \/**< The column count. *\/$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_state::yy_bs_lineno	src/utils/ncgen/ncgenyy.c	/^    int yy_bs_lineno; \/**< The line count. *\/$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_state::yy_buf_pos	src/utils/ncgen/ncgenyy.c	/^	char *yy_buf_pos;		\/* current position in input buffer *\/$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_state::yy_buf_size	src/utils/ncgen/ncgenyy.c	/^	yy_size_t yy_buf_size;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_state::yy_buffer_status	src/utils/ncgen/ncgenyy.c	/^	int yy_buffer_status;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_state::yy_ch_buf	src/utils/ncgen/ncgenyy.c	/^	char *yy_ch_buf;		\/* input buffer *\/$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_state::yy_fill_buffer	src/utils/ncgen/ncgenyy.c	/^	int yy_fill_buffer;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_state::yy_input_file	src/utils/ncgen/ncgenyy.c	/^	FILE *yy_input_file;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_state::yy_is_interactive	src/utils/ncgen/ncgenyy.c	/^	int yy_is_interactive;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_state::yy_is_our_buffer	src/utils/ncgen/ncgenyy.c	/^	int yy_is_our_buffer;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_state::yy_n_chars	src/utils/ncgen/ncgenyy.c	/^	int yy_n_chars;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_status	src/utils/ncgen/ncgenyy.c	/^	int yy_buffer_status;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_c_buf_p	src/utils/ncgen/ncgenyy.c	/^static char *yy_c_buf_p = (char *) 0;$/;"	v	file:
yy_ch_buf	src/utils/ncgen/ncgenyy.c	/^	char *yy_ch_buf;		\/* input buffer *\/$/;"	m	struct:yy_buffer_state	file:	access:public
yy_chk	src/utils/ncgen/ncgenyy.c	/^static yyconst flex_int16_t yy_chk[501] =$/;"	v	file:
yy_create_buffer	src/utils/ncgen/ncgenyy.c	8;"	d	file:
yy_def	src/utils/ncgen/ncgenyy.c	/^static yyconst flex_int16_t yy_def[259] =$/;"	v	file:
yy_delete_buffer	src/utils/ncgen/ncgenyy.c	9;"	d	file:
yy_did_buffer_switch_on_eof	src/utils/ncgen/ncgenyy.c	/^static int yy_did_buffer_switch_on_eof;$/;"	v	file:
yy_ec	src/utils/ncgen/ncgenyy.c	/^static yyconst flex_int32_t yy_ec[256] =$/;"	v	file:
yy_fatal_error	src/utils/ncgen/ncgenyy.c	/^static void yy_fatal_error (yyconst char msg[]  );$/;"	p	file:	signature:(yyconst char msg[] )
yy_fatal_error	src/utils/ncgen/ncgenyy.c	/^static void yy_fatal_error (yyconst char* msg )$/;"	f	file:	signature:(yyconst char* msg )
yy_fill_buffer	src/utils/ncgen/ncgenyy.c	/^	int yy_fill_buffer;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_flex_debug	src/utils/ncgen/ncgenyy.c	10;"	d	file:
yy_flex_strlen	src/utils/ncgen/ncgenyy.c	/^static int yy_flex_strlen (yyconst char * );$/;"	p	file:	signature:(yyconst char * )
yy_flex_strlen	src/utils/ncgen/ncgenyy.c	/^static int yy_flex_strlen (yyconst char * s )$/;"	f	file:	signature:(yyconst char * s )
yy_flex_strncpy	src/utils/ncgen/ncgenyy.c	/^static void yy_flex_strncpy (char *,yyconst char *,int );$/;"	p	file:	signature:(char *,yyconst char *,int )
yy_flex_strncpy	src/utils/ncgen/ncgenyy.c	/^static void yy_flex_strncpy (char* s1, yyconst char * s2, int n )$/;"	f	file:	signature:(char* s1, yyconst char * s2, int n )
yy_flush_buffer	src/utils/ncgen/ncgenyy.c	12;"	d	file:
yy_get_next_buffer	src/utils/ncgen/ncgenyy.c	/^static int yy_get_next_buffer (void );$/;"	p	file:	signature:(void )
yy_get_next_buffer	src/utils/ncgen/ncgenyy.c	/^static int yy_get_next_buffer (void)$/;"	f	file:	signature:(void)
yy_get_previous_state	src/utils/ncgen/ncgenyy.c	/^    static yy_state_type yy_get_previous_state (void)$/;"	f	file:	signature:(void)
yy_get_previous_state	src/utils/ncgen/ncgenyy.c	/^static yy_state_type yy_get_previous_state (void );$/;"	p	file:	signature:(void )
yy_hold_char	src/utils/ncgen/ncgenyy.c	/^static char yy_hold_char;$/;"	v	file:
yy_init	src/utils/ncgen/ncgenyy.c	/^static int yy_init = 0;		\/* whether we need to initialize *\/$/;"	v	file:
yy_init_buffer	src/utils/ncgen/ncgenyy.c	11;"	d	file:
yy_init_globals	src/utils/ncgen/ncgenyy.c	/^static int yy_init_globals (void );$/;"	p	file:	signature:(void )
yy_init_globals	src/utils/ncgen/ncgenyy.c	/^static int yy_init_globals (void)$/;"	f	file:	signature:(void)
yy_input_file	src/utils/ncgen/ncgenyy.c	/^	FILE *yy_input_file;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_is_interactive	src/utils/ncgen/ncgenyy.c	/^	int yy_is_interactive;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_is_our_buffer	src/utils/ncgen/ncgenyy.c	/^	int yy_is_our_buffer;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_last_accepting_cpos	src/utils/ncgen/ncgenyy.c	/^static char *yy_last_accepting_cpos;$/;"	v	file:
yy_last_accepting_state	src/utils/ncgen/ncgenyy.c	/^static yy_state_type yy_last_accepting_state;$/;"	v	file:
yy_load_buffer_state	src/utils/ncgen/ncgenyy.c	13;"	d	file:
yy_meta	src/utils/ncgen/ncgenyy.c	/^static yyconst flex_int32_t yy_meta[58] =$/;"	v	file:
yy_n_chars	src/utils/ncgen/ncgenyy.c	/^	int yy_n_chars;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_n_chars	src/utils/ncgen/ncgenyy.c	/^static int yy_n_chars;		\/* number of characters read into yy_ch_buf *\/$/;"	v	file:
yy_new_buffer	src/utils/ncgen/ncgenyy.c	336;"	d	file:
yy_nxt	src/utils/ncgen/ncgenyy.c	/^	flex_int32_t yy_nxt;$/;"	m	struct:yy_trans_info	file:	access:public
yy_nxt	src/utils/ncgen/ncgenyy.c	/^static yyconst flex_int16_t yy_nxt[501] =$/;"	v	file:
yy_reduce_print	src/utils/ncgen/ncgentab.c	/^yy_reduce_print (YYSTYPE *yyvsp, int yyrule)$/;"	f	file:	signature:(YYSTYPE *yyvsp, int yyrule)
yy_set_bol	src/utils/ncgen/ncgenyy.c	348;"	d	file:
yy_set_interactive	src/utils/ncgen/ncgenyy.c	338;"	d	file:
yy_size_t	src/utils/ncgen/ncgenyy.c	/^typedef size_t yy_size_t;$/;"	t	file:
yy_stack_print	src/utils/ncgen/ncgentab.c	/^yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)$/;"	f	file:	signature:(yytype_int16 *yybottom, yytype_int16 *yytop)
yy_start	src/utils/ncgen/ncgenyy.c	/^static int yy_start = 0;	\/* start state number *\/$/;"	v	file:
yy_state_type	src/utils/ncgen/ncgenyy.c	/^typedef int yy_state_type;$/;"	t	file:
yy_switch_to_buffer	src/utils/ncgen/ncgenyy.c	14;"	d	file:
yy_symbol_print	src/utils/ncgen/ncgentab.c	/^yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)$/;"	f	file:	signature:(FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)
yy_symbol_value_print	src/utils/ncgen/ncgentab.c	/^yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)$/;"	f	file:	signature:(FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)
yy_trans_info	src/utils/ncgen/ncgenyy.c	/^struct yy_trans_info$/;"	s	file:
yy_trans_info::yy_nxt	src/utils/ncgen/ncgenyy.c	/^	flex_int32_t yy_nxt;$/;"	m	struct:yy_trans_info	file:	access:public
yy_trans_info::yy_verify	src/utils/ncgen/ncgenyy.c	/^	flex_int32_t yy_verify;$/;"	m	struct:yy_trans_info	file:	access:public
yy_try_NUL_trans	src/utils/ncgen/ncgenyy.c	/^    static yy_state_type yy_try_NUL_trans  (yy_state_type yy_current_state )$/;"	f	file:	signature:(yy_state_type yy_current_state )
yy_try_NUL_trans	src/utils/ncgen/ncgenyy.c	/^static yy_state_type yy_try_NUL_trans (yy_state_type current_state  );$/;"	p	file:	signature:(yy_state_type current_state )
yy_verify	src/utils/ncgen/ncgenyy.c	/^	flex_int32_t yy_verify;$/;"	m	struct:yy_trans_info	file:	access:public
yyalloc	src/utils/ncgen/ncgentab.c	/^union yyalloc$/;"	u	file:
yyalloc	src/utils/ncgen/ncgenyy.c	23;"	d	file:
yyalloc::yyss_alloc	src/utils/ncgen/ncgentab.c	/^  yytype_int16 yyss_alloc;$/;"	m	union:yyalloc	file:	access:public
yyalloc::yyvs_alloc	src/utils/ncgen/ncgentab.c	/^  YYSTYPE yyvs_alloc;$/;"	m	union:yyalloc	file:	access:public
yychar	src/utils/ncgen/ncgentab.c	/^int yychar;$/;"	v
yychar	src/utils/ncgen/ncgentab.c	71;"	d	file:
yycheck	src/utils/ncgen/ncgentab.c	/^static const yytype_int8 yycheck[] =$/;"	v	file:
yyclearin	src/utils/ncgen/ncgentab.c	714;"	d	file:
yyconst	src/utils/ncgen/ncgenyy.c	125;"	d	file:
yyconst	src/utils/ncgen/ncgenyy.c	127;"	d	file:
yydebug	src/utils/ncgen/ncgentab.c	/^int yydebug;$/;"	v
yydebug	src/utils/ncgen/ncgentab.c	72;"	d	file:
yydefact	src/utils/ncgen/ncgentab.c	/^static const yytype_uint8 yydefact[] =$/;"	v	file:
yydefgoto	src/utils/ncgen/ncgentab.c	/^static const yytype_int8 yydefgoto[] =$/;"	v	file:
yydestruct	src/utils/ncgen/ncgentab.c	/^yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep)$/;"	f	file:	signature:(const char *yymsg, int yytype, YYSTYPE *yyvaluep)
yyerrok	src/utils/ncgen/ncgentab.c	713;"	d	file:
yyerror	src/utils/ncgen/ncgentab.c	/^yyerror(	\/* called for yacc syntax error *\/$/;"	f	signature:( char *s)
yyerror	src/utils/ncgen/ncgentab.c	/^yyerror( char *s);$/;"	p	file:	signature:( char *s)
yyerror	src/utils/ncgen/ncgentab.c	69;"	d	file:
yyfree	src/utils/ncgen/ncgenyy.c	25;"	d	file:
yyin	src/utils/ncgen/ncgenyy.c	15;"	d	file:
yyinput	src/utils/ncgen/ncgenyy.c	/^    static int yyinput (void)$/;"	f	file:	signature:(void)
yyinput	src/utils/ncgen/ncgenyy.c	/^static int yyinput (void );$/;"	p	file:	signature:(void )
yyleng	src/utils/ncgen/ncgenyy.c	16;"	d	file:
yyless	src/utils/ncgen/ncgenyy.c	194;"	d	file:
yyless	src/utils/ncgen/ncgenyy.c	2062;"	d	file:
yyless	src/utils/ncgen/ncgenyy.c	2063;"	d	file:
yylex	src/utils/ncgen/ncgentab.c	/^int yylex(void);$/;"	p	file:	signature:(void)
yylex	src/utils/ncgen/ncgentab.c	68;"	d	file:
yylex	src/utils/ncgen/ncgenyy.c	17;"	d	file:
yylineno	src/utils/ncgen/ncgenyy.c	18;"	d	file:
yylval	src/utils/ncgen/ncgentab.c	/^YYSTYPE yylval;$/;"	v
yylval	src/utils/ncgen/ncgentab.c	70;"	d	file:
yymore	src/utils/ncgen/ncgenyy.c	662;"	d	file:
yynerrs	src/utils/ncgen/ncgentab.c	/^int yynerrs;$/;"	v
yynerrs	src/utils/ncgen/ncgentab.c	73;"	d	file:
yyout	src/utils/ncgen/ncgenyy.c	19;"	d	file:
yypact	src/utils/ncgen/ncgentab.c	/^static const yytype_int8 yypact[] =$/;"	v	file:
yyparse	src/utils/ncgen/ncgentab.c	/^int yyparse ();$/;"	p	file:
yyparse	src/utils/ncgen/ncgentab.c	/^int yyparse (void *YYPARSE_PARAM);$/;"	p	file:	signature:(void *YYPARSE_PARAM)
yyparse	src/utils/ncgen/ncgentab.c	/^int yyparse (void);$/;"	p	file:	signature:(void)
yyparse	src/utils/ncgen/ncgentab.c	/^yyparse (void *YYPARSE_PARAM)$/;"	f	signature:(void *YYPARSE_PARAM)
yyparse	src/utils/ncgen/ncgentab.c	67;"	d	file:
yypgoto	src/utils/ncgen/ncgentab.c	/^static const yytype_int8 yypgoto[] =$/;"	v	file:
yyprhs	src/utils/ncgen/ncgentab.c	/^static const yytype_uint8 yyprhs[] =$/;"	v	file:
yyr1	src/utils/ncgen/ncgentab.c	/^static const yytype_uint8 yyr1[] =$/;"	v	file:
yyr2	src/utils/ncgen/ncgentab.c	/^static const yytype_uint8 yyr2[] =$/;"	v	file:
yyrealloc	src/utils/ncgen/ncgenyy.c	24;"	d	file:
yyrestart	src/utils/ncgen/ncgenyy.c	20;"	d	file:
yyrhs	src/utils/ncgen/ncgentab.c	/^static const yytype_int8 yyrhs[] =$/;"	v	file:
yyrline	src/utils/ncgen/ncgentab.c	/^static const yytype_uint16 yyrline[] =$/;"	v	file:
yyss_alloc	src/utils/ncgen/ncgentab.c	/^  yytype_int16 yyss_alloc;$/;"	m	union:yyalloc	file:	access:public
yystos	src/utils/ncgen/ncgentab.c	/^static const yytype_uint8 yystos[] =$/;"	v	file:
yystpcpy	src/utils/ncgen/ncgentab.c	/^yystpcpy (char *yydest, const char *yysrc)$/;"	f	file:	signature:(char *yydest, const char *yysrc)
yystpcpy	src/utils/ncgen/ncgentab.c	1012;"	d	file:
yystrlen	src/utils/ncgen/ncgentab.c	/^yystrlen (const char *yystr)$/;"	f	file:	signature:(const char *yystr)
yystrlen	src/utils/ncgen/ncgentab.c	989;"	d	file:
yystype	src/utils/ncgen/ncgentab.c	223;"	d	file:
yystype	src/utils/ncgen/ncgentab.h	92;"	d
yysyntax_error	src/utils/ncgen/ncgentab.c	/^yysyntax_error (char *yyresult, int yystate, int yychar)$/;"	f	file:	signature:(char *yyresult, int yystate, int yychar)
yytable	src/utils/ncgen/ncgentab.c	/^static const yytype_uint8 yytable[] =$/;"	v	file:
yyterminate	src/utils/ncgen/ncgenyy.c	832;"	d	file:
yytext	src/utils/ncgen/ncgenyy.c	21;"	d	file:
yytext_ptr	src/utils/ncgen/ncgenyy.c	371;"	d	file:
yytname	src/utils/ncgen/ncgentab.c	/^static const char *const yytname[] =$/;"	v	file:
yytnamerr	src/utils/ncgen/ncgentab.c	/^yytnamerr (char *yyres, const char *yystr)$/;"	f	file:	signature:(char *yyres, const char *yystr)
yytokentype	src/utils/ncgen/ncgentab.c	/^   enum yytokentype {$/;"	g	file:
yytokentype	src/utils/ncgen/ncgentab.h	/^   enum yytokentype {$/;"	g
yytoknum	src/utils/ncgen/ncgentab.c	/^static const yytype_uint16 yytoknum[] =$/;"	v	file:
yytranslate	src/utils/ncgen/ncgentab.c	/^static const yytype_uint8 yytranslate[] =$/;"	v	file:
yytype_int16	src/utils/ncgen/ncgentab.c	/^typedef YYTYPE_INT16 yytype_int16;$/;"	t	file:
yytype_int16	src/utils/ncgen/ncgentab.c	/^typedef short int yytype_int16;$/;"	t	file:
yytype_int8	src/utils/ncgen/ncgentab.c	/^typedef YYTYPE_INT8 yytype_int8;$/;"	t	file:
yytype_int8	src/utils/ncgen/ncgentab.c	/^typedef short int yytype_int8;$/;"	t	file:
yytype_int8	src/utils/ncgen/ncgentab.c	/^typedef signed char yytype_int8;$/;"	t	file:
yytype_uint16	src/utils/ncgen/ncgentab.c	/^typedef YYTYPE_UINT16 yytype_uint16;$/;"	t	file:
yytype_uint16	src/utils/ncgen/ncgentab.c	/^typedef unsigned short int yytype_uint16;$/;"	t	file:
yytype_uint8	src/utils/ncgen/ncgentab.c	/^typedef YYTYPE_UINT8 yytype_uint8;$/;"	t	file:
yytype_uint8	src/utils/ncgen/ncgentab.c	/^typedef unsigned char yytype_uint8;$/;"	t	file:
yyunput	src/utils/ncgen/ncgenyy.c	/^    static void yyunput (int c, register char * yy_bp )$/;"	f	file:	signature:(int c, register char * yy_bp )
yyunput	src/utils/ncgen/ncgenyy.c	/^    static void yyunput (int c,char *buf_ptr  );$/;"	p	file:	signature:(int c,char *buf_ptr )
yyvs_alloc	src/utils/ncgen/ncgentab.c	/^  YYSTYPE yyvs_alloc;$/;"	m	union:yyalloc	file:	access:public
yywrap	src/utils/ncgen/ncgenyy.c	22;"	d	file:
