-cp等价于-classpth，作用：指明应用外部文件的位置
-d 指定存放生成类文件的位置，如-d . 表示在当前目录下生成类文件。

假设有一个Nose.java类文件的包为：package nose.animal;
则编译这个文件时添加-d选项才能生成包名所对应的文件夹，命令为javac -d . Nose.java(注意：-d和.之间必须有一个空格)
如果要运行这个Nose.java文件，如果刚好在当前包所在的位置，则直接用java nose.animal.Nose即可
若不在当前所在的位置，如当前在E：\，而Nose.class在D：\javatest\nose.animal目录下，则需要加-classpath选项，命令为：
 java -classpath D:\javatest nose.animal.Nose


现在假设Animal.java类文件的包为package animal.animal; 并且这个类文件用到了上面的Nose.java文件，则首先需要在Animal.java源文件中将将Nose.java文件所在的包import进来，即import nose.animal.*;
编译此文件的命令为：javac -d . -cp D:\java Animal.java，其中nose.class所在的目录为D：\java下， -d . 表示在当前目录下生成包文件夹。
执行此文件的命令为：java -cp D:\java; animal.animal.Animal
如果饮用了多个位置的java类，则可以在D:\java;分号之后紧跟这些文件的位置，注意分号后不能有空格


注意：在编译源文件的时候，不需要添加要编译源文件的包信息，只需要给出java源文件名即可
      但在执行.class文件的时候，需要添加源文件的包名，包中文件夹之间用.分割。
